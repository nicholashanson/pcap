
test_capture:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64
    2004:	48 83 ec 08          	sub    $0x8,%rsp
    2008:	48 8b 05 c9 9f 00 00 	mov    0x9fc9(%rip),%rax        # bfd8 <__gmon_start__@Base>
    200f:	48 85 c0             	test   %rax,%rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   *%rax
    2016:	48 83 c4 08          	add    $0x8,%rsp
    201a:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 72 9d 00 00    	push   0x9d72(%rip)        # bd98 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 74 9d 00 00    	jmp    *0x9d74(%rip)        # bda0 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)
    2030:	f3 0f 1e fa          	endbr64
    2034:	68 00 00 00 00       	push   $0x0
    2039:	e9 e2 ff ff ff       	jmp    2020 <_init+0x20>
    203e:	66 90                	xchg   %ax,%ax
    2040:	f3 0f 1e fa          	endbr64
    2044:	68 01 00 00 00       	push   $0x1
    2049:	e9 d2 ff ff ff       	jmp    2020 <_init+0x20>
    204e:	66 90                	xchg   %ax,%ax
    2050:	f3 0f 1e fa          	endbr64
    2054:	68 02 00 00 00       	push   $0x2
    2059:	e9 c2 ff ff ff       	jmp    2020 <_init+0x20>
    205e:	66 90                	xchg   %ax,%ax
    2060:	f3 0f 1e fa          	endbr64
    2064:	68 03 00 00 00       	push   $0x3
    2069:	e9 b2 ff ff ff       	jmp    2020 <_init+0x20>
    206e:	66 90                	xchg   %ax,%ax
    2070:	f3 0f 1e fa          	endbr64
    2074:	68 04 00 00 00       	push   $0x4
    2079:	e9 a2 ff ff ff       	jmp    2020 <_init+0x20>
    207e:	66 90                	xchg   %ax,%ax
    2080:	f3 0f 1e fa          	endbr64
    2084:	68 05 00 00 00       	push   $0x5
    2089:	e9 92 ff ff ff       	jmp    2020 <_init+0x20>
    208e:	66 90                	xchg   %ax,%ax
    2090:	f3 0f 1e fa          	endbr64
    2094:	68 06 00 00 00       	push   $0x6
    2099:	e9 82 ff ff ff       	jmp    2020 <_init+0x20>
    209e:	66 90                	xchg   %ax,%ax
    20a0:	f3 0f 1e fa          	endbr64
    20a4:	68 07 00 00 00       	push   $0x7
    20a9:	e9 72 ff ff ff       	jmp    2020 <_init+0x20>
    20ae:	66 90                	xchg   %ax,%ax
    20b0:	f3 0f 1e fa          	endbr64
    20b4:	68 08 00 00 00       	push   $0x8
    20b9:	e9 62 ff ff ff       	jmp    2020 <_init+0x20>
    20be:	66 90                	xchg   %ax,%ax
    20c0:	f3 0f 1e fa          	endbr64
    20c4:	68 09 00 00 00       	push   $0x9
    20c9:	e9 52 ff ff ff       	jmp    2020 <_init+0x20>
    20ce:	66 90                	xchg   %ax,%ax
    20d0:	f3 0f 1e fa          	endbr64
    20d4:	68 0a 00 00 00       	push   $0xa
    20d9:	e9 42 ff ff ff       	jmp    2020 <_init+0x20>
    20de:	66 90                	xchg   %ax,%ax
    20e0:	f3 0f 1e fa          	endbr64
    20e4:	68 0b 00 00 00       	push   $0xb
    20e9:	e9 32 ff ff ff       	jmp    2020 <_init+0x20>
    20ee:	66 90                	xchg   %ax,%ax
    20f0:	f3 0f 1e fa          	endbr64
    20f4:	68 0c 00 00 00       	push   $0xc
    20f9:	e9 22 ff ff ff       	jmp    2020 <_init+0x20>
    20fe:	66 90                	xchg   %ax,%ax
    2100:	f3 0f 1e fa          	endbr64
    2104:	68 0d 00 00 00       	push   $0xd
    2109:	e9 12 ff ff ff       	jmp    2020 <_init+0x20>
    210e:	66 90                	xchg   %ax,%ax
    2110:	f3 0f 1e fa          	endbr64
    2114:	68 0e 00 00 00       	push   $0xe
    2119:	e9 02 ff ff ff       	jmp    2020 <_init+0x20>
    211e:	66 90                	xchg   %ax,%ax
    2120:	f3 0f 1e fa          	endbr64
    2124:	68 0f 00 00 00       	push   $0xf
    2129:	e9 f2 fe ff ff       	jmp    2020 <_init+0x20>
    212e:	66 90                	xchg   %ax,%ax
    2130:	f3 0f 1e fa          	endbr64
    2134:	68 10 00 00 00       	push   $0x10
    2139:	e9 e2 fe ff ff       	jmp    2020 <_init+0x20>
    213e:	66 90                	xchg   %ax,%ax
    2140:	f3 0f 1e fa          	endbr64
    2144:	68 11 00 00 00       	push   $0x11
    2149:	e9 d2 fe ff ff       	jmp    2020 <_init+0x20>
    214e:	66 90                	xchg   %ax,%ax
    2150:	f3 0f 1e fa          	endbr64
    2154:	68 12 00 00 00       	push   $0x12
    2159:	e9 c2 fe ff ff       	jmp    2020 <_init+0x20>
    215e:	66 90                	xchg   %ax,%ax
    2160:	f3 0f 1e fa          	endbr64
    2164:	68 13 00 00 00       	push   $0x13
    2169:	e9 b2 fe ff ff       	jmp    2020 <_init+0x20>
    216e:	66 90                	xchg   %ax,%ax
    2170:	f3 0f 1e fa          	endbr64
    2174:	68 14 00 00 00       	push   $0x14
    2179:	e9 a2 fe ff ff       	jmp    2020 <_init+0x20>
    217e:	66 90                	xchg   %ax,%ax
    2180:	f3 0f 1e fa          	endbr64
    2184:	68 15 00 00 00       	push   $0x15
    2189:	e9 92 fe ff ff       	jmp    2020 <_init+0x20>
    218e:	66 90                	xchg   %ax,%ax
    2190:	f3 0f 1e fa          	endbr64
    2194:	68 16 00 00 00       	push   $0x16
    2199:	e9 82 fe ff ff       	jmp    2020 <_init+0x20>
    219e:	66 90                	xchg   %ax,%ax
    21a0:	f3 0f 1e fa          	endbr64
    21a4:	68 17 00 00 00       	push   $0x17
    21a9:	e9 72 fe ff ff       	jmp    2020 <_init+0x20>
    21ae:	66 90                	xchg   %ax,%ax
    21b0:	f3 0f 1e fa          	endbr64
    21b4:	68 18 00 00 00       	push   $0x18
    21b9:	e9 62 fe ff ff       	jmp    2020 <_init+0x20>
    21be:	66 90                	xchg   %ax,%ax
    21c0:	f3 0f 1e fa          	endbr64
    21c4:	68 19 00 00 00       	push   $0x19
    21c9:	e9 52 fe ff ff       	jmp    2020 <_init+0x20>
    21ce:	66 90                	xchg   %ax,%ax
    21d0:	f3 0f 1e fa          	endbr64
    21d4:	68 1a 00 00 00       	push   $0x1a
    21d9:	e9 42 fe ff ff       	jmp    2020 <_init+0x20>
    21de:	66 90                	xchg   %ax,%ax
    21e0:	f3 0f 1e fa          	endbr64
    21e4:	68 1b 00 00 00       	push   $0x1b
    21e9:	e9 32 fe ff ff       	jmp    2020 <_init+0x20>
    21ee:	66 90                	xchg   %ax,%ax
    21f0:	f3 0f 1e fa          	endbr64
    21f4:	68 1c 00 00 00       	push   $0x1c
    21f9:	e9 22 fe ff ff       	jmp    2020 <_init+0x20>
    21fe:	66 90                	xchg   %ax,%ax
    2200:	f3 0f 1e fa          	endbr64
    2204:	68 1d 00 00 00       	push   $0x1d
    2209:	e9 12 fe ff ff       	jmp    2020 <_init+0x20>
    220e:	66 90                	xchg   %ax,%ax
    2210:	f3 0f 1e fa          	endbr64
    2214:	68 1e 00 00 00       	push   $0x1e
    2219:	e9 02 fe ff ff       	jmp    2020 <_init+0x20>
    221e:	66 90                	xchg   %ax,%ax
    2220:	f3 0f 1e fa          	endbr64
    2224:	68 1f 00 00 00       	push   $0x1f
    2229:	e9 f2 fd ff ff       	jmp    2020 <_init+0x20>
    222e:	66 90                	xchg   %ax,%ax
    2230:	f3 0f 1e fa          	endbr64
    2234:	68 20 00 00 00       	push   $0x20
    2239:	e9 e2 fd ff ff       	jmp    2020 <_init+0x20>
    223e:	66 90                	xchg   %ax,%ax
    2240:	f3 0f 1e fa          	endbr64
    2244:	68 21 00 00 00       	push   $0x21
    2249:	e9 d2 fd ff ff       	jmp    2020 <_init+0x20>
    224e:	66 90                	xchg   %ax,%ax
    2250:	f3 0f 1e fa          	endbr64
    2254:	68 22 00 00 00       	push   $0x22
    2259:	e9 c2 fd ff ff       	jmp    2020 <_init+0x20>
    225e:	66 90                	xchg   %ax,%ax
    2260:	f3 0f 1e fa          	endbr64
    2264:	68 23 00 00 00       	push   $0x23
    2269:	e9 b2 fd ff ff       	jmp    2020 <_init+0x20>
    226e:	66 90                	xchg   %ax,%ax
    2270:	f3 0f 1e fa          	endbr64
    2274:	68 24 00 00 00       	push   $0x24
    2279:	e9 a2 fd ff ff       	jmp    2020 <_init+0x20>
    227e:	66 90                	xchg   %ax,%ax
    2280:	f3 0f 1e fa          	endbr64
    2284:	68 25 00 00 00       	push   $0x25
    2289:	e9 92 fd ff ff       	jmp    2020 <_init+0x20>
    228e:	66 90                	xchg   %ax,%ax
    2290:	f3 0f 1e fa          	endbr64
    2294:	68 26 00 00 00       	push   $0x26
    2299:	e9 82 fd ff ff       	jmp    2020 <_init+0x20>
    229e:	66 90                	xchg   %ax,%ax
    22a0:	f3 0f 1e fa          	endbr64
    22a4:	68 27 00 00 00       	push   $0x27
    22a9:	e9 72 fd ff ff       	jmp    2020 <_init+0x20>
    22ae:	66 90                	xchg   %ax,%ax
    22b0:	f3 0f 1e fa          	endbr64
    22b4:	68 28 00 00 00       	push   $0x28
    22b9:	e9 62 fd ff ff       	jmp    2020 <_init+0x20>
    22be:	66 90                	xchg   %ax,%ax
    22c0:	f3 0f 1e fa          	endbr64
    22c4:	68 29 00 00 00       	push   $0x29
    22c9:	e9 52 fd ff ff       	jmp    2020 <_init+0x20>
    22ce:	66 90                	xchg   %ax,%ax
    22d0:	f3 0f 1e fa          	endbr64
    22d4:	68 2a 00 00 00       	push   $0x2a
    22d9:	e9 42 fd ff ff       	jmp    2020 <_init+0x20>
    22de:	66 90                	xchg   %ax,%ax
    22e0:	f3 0f 1e fa          	endbr64
    22e4:	68 2b 00 00 00       	push   $0x2b
    22e9:	e9 32 fd ff ff       	jmp    2020 <_init+0x20>
    22ee:	66 90                	xchg   %ax,%ax
    22f0:	f3 0f 1e fa          	endbr64
    22f4:	68 2c 00 00 00       	push   $0x2c
    22f9:	e9 22 fd ff ff       	jmp    2020 <_init+0x20>
    22fe:	66 90                	xchg   %ax,%ax
    2300:	f3 0f 1e fa          	endbr64
    2304:	68 2d 00 00 00       	push   $0x2d
    2309:	e9 12 fd ff ff       	jmp    2020 <_init+0x20>
    230e:	66 90                	xchg   %ax,%ax
    2310:	f3 0f 1e fa          	endbr64
    2314:	68 2e 00 00 00       	push   $0x2e
    2319:	e9 02 fd ff ff       	jmp    2020 <_init+0x20>
    231e:	66 90                	xchg   %ax,%ax
    2320:	f3 0f 1e fa          	endbr64
    2324:	68 2f 00 00 00       	push   $0x2f
    2329:	e9 f2 fc ff ff       	jmp    2020 <_init+0x20>
    232e:	66 90                	xchg   %ax,%ax
    2330:	f3 0f 1e fa          	endbr64
    2334:	68 30 00 00 00       	push   $0x30
    2339:	e9 e2 fc ff ff       	jmp    2020 <_init+0x20>
    233e:	66 90                	xchg   %ax,%ax
    2340:	f3 0f 1e fa          	endbr64
    2344:	68 31 00 00 00       	push   $0x31
    2349:	e9 d2 fc ff ff       	jmp    2020 <_init+0x20>
    234e:	66 90                	xchg   %ax,%ax
    2350:	f3 0f 1e fa          	endbr64
    2354:	68 32 00 00 00       	push   $0x32
    2359:	e9 c2 fc ff ff       	jmp    2020 <_init+0x20>
    235e:	66 90                	xchg   %ax,%ax
    2360:	f3 0f 1e fa          	endbr64
    2364:	68 33 00 00 00       	push   $0x33
    2369:	e9 b2 fc ff ff       	jmp    2020 <_init+0x20>
    236e:	66 90                	xchg   %ax,%ax
    2370:	f3 0f 1e fa          	endbr64
    2374:	68 34 00 00 00       	push   $0x34
    2379:	e9 a2 fc ff ff       	jmp    2020 <_init+0x20>
    237e:	66 90                	xchg   %ax,%ax
    2380:	f3 0f 1e fa          	endbr64
    2384:	68 35 00 00 00       	push   $0x35
    2389:	e9 92 fc ff ff       	jmp    2020 <_init+0x20>
    238e:	66 90                	xchg   %ax,%ax
    2390:	f3 0f 1e fa          	endbr64
    2394:	68 36 00 00 00       	push   $0x36
    2399:	e9 82 fc ff ff       	jmp    2020 <_init+0x20>
    239e:	66 90                	xchg   %ax,%ax
    23a0:	f3 0f 1e fa          	endbr64
    23a4:	68 37 00 00 00       	push   $0x37
    23a9:	e9 72 fc ff ff       	jmp    2020 <_init+0x20>
    23ae:	66 90                	xchg   %ax,%ax
    23b0:	f3 0f 1e fa          	endbr64
    23b4:	68 38 00 00 00       	push   $0x38
    23b9:	e9 62 fc ff ff       	jmp    2020 <_init+0x20>
    23be:	66 90                	xchg   %ax,%ax
    23c0:	f3 0f 1e fa          	endbr64
    23c4:	68 39 00 00 00       	push   $0x39
    23c9:	e9 52 fc ff ff       	jmp    2020 <_init+0x20>
    23ce:	66 90                	xchg   %ax,%ax
    23d0:	f3 0f 1e fa          	endbr64
    23d4:	68 3a 00 00 00       	push   $0x3a
    23d9:	e9 42 fc ff ff       	jmp    2020 <_init+0x20>
    23de:	66 90                	xchg   %ax,%ax
    23e0:	f3 0f 1e fa          	endbr64
    23e4:	68 3b 00 00 00       	push   $0x3b
    23e9:	e9 32 fc ff ff       	jmp    2020 <_init+0x20>
    23ee:	66 90                	xchg   %ax,%ax
    23f0:	f3 0f 1e fa          	endbr64
    23f4:	68 3c 00 00 00       	push   $0x3c
    23f9:	e9 22 fc ff ff       	jmp    2020 <_init+0x20>
    23fe:	66 90                	xchg   %ax,%ax
    2400:	f3 0f 1e fa          	endbr64
    2404:	68 3d 00 00 00       	push   $0x3d
    2409:	e9 12 fc ff ff       	jmp    2020 <_init+0x20>
    240e:	66 90                	xchg   %ax,%ax
    2410:	f3 0f 1e fa          	endbr64
    2414:	68 3e 00 00 00       	push   $0x3e
    2419:	e9 02 fc ff ff       	jmp    2020 <_init+0x20>
    241e:	66 90                	xchg   %ax,%ax
    2420:	f3 0f 1e fa          	endbr64
    2424:	68 3f 00 00 00       	push   $0x3f
    2429:	e9 f2 fb ff ff       	jmp    2020 <_init+0x20>
    242e:	66 90                	xchg   %ax,%ax
    2430:	f3 0f 1e fa          	endbr64
    2434:	68 40 00 00 00       	push   $0x40
    2439:	e9 e2 fb ff ff       	jmp    2020 <_init+0x20>
    243e:	66 90                	xchg   %ax,%ax
    2440:	f3 0f 1e fa          	endbr64
    2444:	68 41 00 00 00       	push   $0x41
    2449:	e9 d2 fb ff ff       	jmp    2020 <_init+0x20>
    244e:	66 90                	xchg   %ax,%ax
    2450:	f3 0f 1e fa          	endbr64
    2454:	68 42 00 00 00       	push   $0x42
    2459:	e9 c2 fb ff ff       	jmp    2020 <_init+0x20>
    245e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

0000000000002460 <free@plt>:
    2460:	f3 0f 1e fa          	endbr64
    2464:	ff 25 56 9b 00 00    	jmp    *0x9b56(%rip)        # bfc0 <free@GLIBC_2.2.5>
    246a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002470 <__cxa_finalize@plt>:
    2470:	f3 0f 1e fa          	endbr64
    2474:	ff 25 6e 9b 00 00    	jmp    *0x9b6e(%rip)        # bfe8 <__cxa_finalize@GLIBC_2.2.5>
    247a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000002480 <getenv@plt>:
    2480:	f3 0f 1e fa          	endbr64
    2484:	ff 25 1e 99 00 00    	jmp    *0x991e(%rip)        # bda8 <getenv@GLIBC_2.2.5>
    248a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002490 <__isoc23_strtoul@plt>:
    2490:	f3 0f 1e fa          	endbr64
    2494:	ff 25 16 99 00 00    	jmp    *0x9916(%rip)        # bdb0 <__isoc23_strtoul@GLIBC_2.38>
    249a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024a0 <timer_settime@plt>:
    24a0:	f3 0f 1e fa          	endbr64
    24a4:	ff 25 0e 99 00 00    	jmp    *0x990e(%rip)        # bdb8 <timer_settime@GLIBC_2.34>
    24aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024b0 <__snprintf_chk@plt>:
    24b0:	f3 0f 1e fa          	endbr64
    24b4:	ff 25 06 99 00 00    	jmp    *0x9906(%rip)        # bdc0 <__snprintf_chk@GLIBC_2.3.4>
    24ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024c0 <__vfprintf_chk@plt>:
    24c0:	f3 0f 1e fa          	endbr64
    24c4:	ff 25 fe 98 00 00    	jmp    *0x98fe(%rip)        # bdc8 <__vfprintf_chk@GLIBC_2.3.4>
    24ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024d0 <abort@plt>:
    24d0:	f3 0f 1e fa          	endbr64
    24d4:	ff 25 f6 98 00 00    	jmp    *0x98f6(%rip)        # bdd0 <abort@GLIBC_2.2.5>
    24da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024e0 <__errno_location@plt>:
    24e0:	f3 0f 1e fa          	endbr64
    24e4:	ff 25 ee 98 00 00    	jmp    *0x98ee(%rip)        # bdd8 <__errno_location@GLIBC_2.2.5>
    24ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000024f0 <unlink@plt>:
    24f0:	f3 0f 1e fa          	endbr64
    24f4:	ff 25 e6 98 00 00    	jmp    *0x98e6(%rip)        # bde0 <unlink@GLIBC_2.2.5>
    24fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002500 <localtime_r@plt>:
    2500:	f3 0f 1e fa          	endbr64
    2504:	ff 25 de 98 00 00    	jmp    *0x98de(%rip)        # bde8 <localtime_r@GLIBC_2.2.5>
    250a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002510 <_exit@plt>:
    2510:	f3 0f 1e fa          	endbr64
    2514:	ff 25 d6 98 00 00    	jmp    *0x98d6(%rip)        # bdf0 <_exit@GLIBC_2.2.5>
    251a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002520 <ferror@plt>:
    2520:	f3 0f 1e fa          	endbr64
    2524:	ff 25 ce 98 00 00    	jmp    *0x98ce(%rip)        # bdf8 <ferror@GLIBC_2.2.5>
    252a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002530 <sigaction@plt>:
    2530:	f3 0f 1e fa          	endbr64
    2534:	ff 25 c6 98 00 00    	jmp    *0x98c6(%rip)        # be00 <sigaction@GLIBC_2.2.5>
    253a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002540 <fread@plt>:
    2540:	f3 0f 1e fa          	endbr64
    2544:	ff 25 be 98 00 00    	jmp    *0x98be(%rip)        # be08 <fread@GLIBC_2.2.5>
    254a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002550 <strtod@plt>:
    2550:	f3 0f 1e fa          	endbr64
    2554:	ff 25 b6 98 00 00    	jmp    *0x98b6(%rip)        # be10 <strtod@GLIBC_2.2.5>
    255a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002560 <clock_gettime@plt>:
    2560:	f3 0f 1e fa          	endbr64
    2564:	ff 25 ae 98 00 00    	jmp    *0x98ae(%rip)        # be18 <clock_gettime@GLIBC_2.17>
    256a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002570 <subunit_test_pass@plt>:
    2570:	f3 0f 1e fa          	endbr64
    2574:	ff 25 a6 98 00 00    	jmp    *0x98a6(%rip)        # be20 <subunit_test_pass@Base>
    257a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002580 <fclose@plt>:
    2580:	f3 0f 1e fa          	endbr64
    2584:	ff 25 9e 98 00 00    	jmp    *0x989e(%rip)        # be28 <fclose@GLIBC_2.2.5>
    258a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002590 <strlen@plt>:
    2590:	f3 0f 1e fa          	endbr64
    2594:	ff 25 96 98 00 00    	jmp    *0x9896(%rip)        # be30 <strlen@GLIBC_2.2.5>
    259a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000025a0 <subunit_test_error@plt>:
    25a0:	f3 0f 1e fa          	endbr64
    25a4:	ff 25 8e 98 00 00    	jmp    *0x988e(%rip)        # be38 <subunit_test_error@Base>
    25aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000025b0 <__stack_chk_fail@plt>:
    25b0:	f3 0f 1e fa          	endbr64
    25b4:	ff 25 86 98 00 00    	jmp    *0x9886(%rip)        # be40 <__stack_chk_fail@GLIBC_2.4>
    25ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000025c0 <subunit_test_fail@plt>:
    25c0:	f3 0f 1e fa          	endbr64
    25c4:	ff 25 7e 98 00 00    	jmp    *0x987e(%rip)        # be48 <subunit_test_fail@Base>
    25ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000025d0 <timer_create@plt>:
    25d0:	f3 0f 1e fa          	endbr64
    25d4:	ff 25 76 98 00 00    	jmp    *0x9876(%rip)        # be50 <timer_create@GLIBC_2.34>
    25da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000025e0 <htons@plt>:
    25e0:	f3 0f 1e fa          	endbr64
    25e4:	ff 25 6e 98 00 00    	jmp    *0x986e(%rip)        # be58 <htons@GLIBC_2.2.5>
    25ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000025f0 <rewind@plt>:
    25f0:	f3 0f 1e fa          	endbr64
    25f4:	ff 25 66 98 00 00    	jmp    *0x9866(%rip)        # be60 <rewind@GLIBC_2.2.5>
    25fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002600 <__pthread_unregister_cancel@plt>:
    2600:	f3 0f 1e fa          	endbr64
    2604:	ff 25 5e 98 00 00    	jmp    *0x985e(%rip)        # be68 <__pthread_unregister_cancel@GLIBC_2.34>
    260a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002610 <strrchr@plt>:
    2610:	f3 0f 1e fa          	endbr64
    2614:	ff 25 56 98 00 00    	jmp    *0x9856(%rip)        # be70 <strrchr@GLIBC_2.2.5>
    261a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002620 <gettimeofday@plt>:
    2620:	f3 0f 1e fa          	endbr64
    2624:	ff 25 4e 98 00 00    	jmp    *0x984e(%rip)        # be78 <gettimeofday@GLIBC_2.2.5>
    262a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002630 <memset@plt>:
    2630:	f3 0f 1e fa          	endbr64
    2634:	ff 25 46 98 00 00    	jmp    *0x9846(%rip)        # be80 <memset@GLIBC_2.2.5>
    263a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002640 <subunit_test_start@plt>:
    2640:	f3 0f 1e fa          	endbr64
    2644:	ff 25 3e 98 00 00    	jmp    *0x983e(%rip)        # be88 <subunit_test_start@Base>
    264a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002650 <close@plt>:
    2650:	f3 0f 1e fa          	endbr64
    2654:	ff 25 36 98 00 00    	jmp    *0x9836(%rip)        # be90 <close@GLIBC_2.2.5>
    265a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002660 <fputc@plt>:
    2660:	f3 0f 1e fa          	endbr64
    2664:	ff 25 2e 98 00 00    	jmp    *0x982e(%rip)        # be98 <fputc@GLIBC_2.2.5>
    266a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002670 <_setjmp@plt>:
    2670:	f3 0f 1e fa          	endbr64
    2674:	ff 25 26 98 00 00    	jmp    *0x9826(%rip)        # bea0 <_setjmp@GLIBC_2.2.5>
    267a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002680 <strcmp@plt>:
    2680:	f3 0f 1e fa          	endbr64
    2684:	ff 25 1e 98 00 00    	jmp    *0x981e(%rip)        # bea8 <strcmp@GLIBC_2.2.5>
    268a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002690 <timer_delete@plt>:
    2690:	f3 0f 1e fa          	endbr64
    2694:	ff 25 16 98 00 00    	jmp    *0x9816(%rip)        # beb0 <timer_delete@GLIBC_2.34>
    269a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000026a0 <if_nametoindex@plt>:
    26a0:	f3 0f 1e fa          	endbr64
    26a4:	ff 25 0e 98 00 00    	jmp    *0x980e(%rip)        # beb8 <if_nametoindex@GLIBC_2.2.5>
    26aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000026b0 <memcpy@plt>:
    26b0:	f3 0f 1e fa          	endbr64
    26b4:	ff 25 06 98 00 00    	jmp    *0x9806(%rip)        # bec0 <memcpy@GLIBC_2.14>
    26ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000026c0 <pthread_mutex_unlock@plt>:
    26c0:	f3 0f 1e fa          	endbr64
    26c4:	ff 25 fe 97 00 00    	jmp    *0x97fe(%rip)        # bec8 <pthread_mutex_unlock@GLIBC_2.2.5>
    26ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000026d0 <malloc@plt>:
    26d0:	f3 0f 1e fa          	endbr64
    26d4:	ff 25 f6 97 00 00    	jmp    *0x97f6(%rip)        # bed0 <malloc@GLIBC_2.2.5>
    26da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000026e0 <fflush@plt>:
    26e0:	f3 0f 1e fa          	endbr64
    26e4:	ff 25 ee 97 00 00    	jmp    *0x97ee(%rip)        # bed8 <fflush@GLIBC_2.2.5>
    26ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000026f0 <killpg@plt>:
    26f0:	f3 0f 1e fa          	endbr64
    26f4:	ff 25 e6 97 00 00    	jmp    *0x97e6(%rip)        # bee0 <killpg@GLIBC_2.2.5>
    26fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002700 <mkstemp@plt>:
    2700:	f3 0f 1e fa          	endbr64
    2704:	ff 25 de 97 00 00    	jmp    *0x97de(%rip)        # bee8 <mkstemp@GLIBC_2.2.5>
    270a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002710 <__vsnprintf_chk@plt>:
    2710:	f3 0f 1e fa          	endbr64
    2714:	ff 25 d6 97 00 00    	jmp    *0x97d6(%rip)        # bef0 <__vsnprintf_chk@GLIBC_2.3.4>
    271a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002720 <strsignal@plt>:
    2720:	f3 0f 1e fa          	endbr64
    2724:	ff 25 ce 97 00 00    	jmp    *0x97ce(%rip)        # bef8 <strsignal@GLIBC_2.2.5>
    272a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002730 <realloc@plt>:
    2730:	f3 0f 1e fa          	endbr64
    2734:	ff 25 c6 97 00 00    	jmp    *0x97c6(%rip)        # bf00 <realloc@GLIBC_2.2.5>
    273a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002740 <__pthread_unwind_next@plt>:
    2740:	f3 0f 1e fa          	endbr64
    2744:	ff 25 be 97 00 00    	jmp    *0x97be(%rip)        # bf08 <__pthread_unwind_next@GLIBC_2.34>
    274a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002750 <fdopen@plt>:
    2750:	f3 0f 1e fa          	endbr64
    2754:	ff 25 b6 97 00 00    	jmp    *0x97b6(%rip)        # bf10 <fdopen@GLIBC_2.2.5>
    275a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002760 <bind@plt>:
    2760:	f3 0f 1e fa          	endbr64
    2764:	ff 25 ae 97 00 00    	jmp    *0x97ae(%rip)        # bf18 <bind@GLIBC_2.2.5>
    276a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002770 <__longjmp_chk@plt>:
    2770:	f3 0f 1e fa          	endbr64
    2774:	ff 25 a6 97 00 00    	jmp    *0x97a6(%rip)        # bf20 <__longjmp_chk@GLIBC_2.11>
    277a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002780 <strftime@plt>:
    2780:	f3 0f 1e fa          	endbr64
    2784:	ff 25 9e 97 00 00    	jmp    *0x979e(%rip)        # bf28 <strftime@GLIBC_2.2.5>
    278a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002790 <memmove@plt>:
    2790:	f3 0f 1e fa          	endbr64
    2794:	ff 25 96 97 00 00    	jmp    *0x9796(%rip)        # bf30 <memmove@GLIBC_2.2.5>
    279a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000027a0 <waitpid@plt>:
    27a0:	f3 0f 1e fa          	endbr64
    27a4:	ff 25 8e 97 00 00    	jmp    *0x978e(%rip)        # bf38 <waitpid@GLIBC_2.2.5>
    27aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000027b0 <getpgrp@plt>:
    27b0:	f3 0f 1e fa          	endbr64
    27b4:	ff 25 86 97 00 00    	jmp    *0x9786(%rip)        # bf40 <getpgrp@GLIBC_2.2.5>
    27ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000027c0 <fopen@plt>:
    27c0:	f3 0f 1e fa          	endbr64
    27c4:	ff 25 7e 97 00 00    	jmp    *0x977e(%rip)        # bf48 <fopen@GLIBC_2.2.5>
    27ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000027d0 <perror@plt>:
    27d0:	f3 0f 1e fa          	endbr64
    27d4:	ff 25 76 97 00 00    	jmp    *0x9776(%rip)        # bf50 <perror@GLIBC_2.2.5>
    27da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000027e0 <strtok@plt>:
    27e0:	f3 0f 1e fa          	endbr64
    27e4:	ff 25 6e 97 00 00    	jmp    *0x976e(%rip)        # bf58 <strtok@GLIBC_2.2.5>
    27ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000027f0 <floor@plt>:
    27f0:	f3 0f 1e fa          	endbr64
    27f4:	ff 25 66 97 00 00    	jmp    *0x9766(%rip)        # bf60 <floor@GLIBC_2.2.5>
    27fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002800 <setpgid@plt>:
    2800:	f3 0f 1e fa          	endbr64
    2804:	ff 25 5e 97 00 00    	jmp    *0x975e(%rip)        # bf68 <setpgid@GLIBC_2.2.5>
    280a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002810 <exit@plt>:
    2810:	f3 0f 1e fa          	endbr64
    2814:	ff 25 56 97 00 00    	jmp    *0x9756(%rip)        # bf70 <exit@GLIBC_2.2.5>
    281a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002820 <fwrite@plt>:
    2820:	f3 0f 1e fa          	endbr64
    2824:	ff 25 4e 97 00 00    	jmp    *0x974e(%rip)        # bf78 <fwrite@GLIBC_2.2.5>
    282a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002830 <__fprintf_chk@plt>:
    2830:	f3 0f 1e fa          	endbr64
    2834:	ff 25 46 97 00 00    	jmp    *0x9746(%rip)        # bf80 <__fprintf_chk@GLIBC_2.3.4>
    283a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002840 <__pthread_register_cancel@plt>:
    2840:	f3 0f 1e fa          	endbr64
    2844:	ff 25 3e 97 00 00    	jmp    *0x973e(%rip)        # bf88 <__pthread_register_cancel@GLIBC_2.34>
    284a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002850 <strdup@plt>:
    2850:	f3 0f 1e fa          	endbr64
    2854:	ff 25 36 97 00 00    	jmp    *0x9736(%rip)        # bf90 <strdup@GLIBC_2.2.5>
    285a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002860 <strerror@plt>:
    2860:	f3 0f 1e fa          	endbr64
    2864:	ff 25 2e 97 00 00    	jmp    *0x972e(%rip)        # bf98 <strerror@GLIBC_2.2.5>
    286a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002870 <__sigsetjmp@plt>:
    2870:	f3 0f 1e fa          	endbr64
    2874:	ff 25 26 97 00 00    	jmp    *0x9726(%rip)        # bfa0 <__sigsetjmp@GLIBC_2.2.5>
    287a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002880 <fork@plt>:
    2880:	f3 0f 1e fa          	endbr64
    2884:	ff 25 1e 97 00 00    	jmp    *0x971e(%rip)        # bfa8 <fork@GLIBC_2.2.5>
    288a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002890 <pthread_mutex_lock@plt>:
    2890:	f3 0f 1e fa          	endbr64
    2894:	ff 25 16 97 00 00    	jmp    *0x9716(%rip)        # bfb0 <pthread_mutex_lock@GLIBC_2.2.5>
    289a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000028a0 <socket@plt>:
    28a0:	f3 0f 1e fa          	endbr64
    28a4:	ff 25 0e 97 00 00    	jmp    *0x970e(%rip)        # bfb8 <socket@GLIBC_2.2.5>
    28aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000028b0 <tr_xmlprint.cold>:
    28b0:	e8 1b fc ff ff       	call   24d0 <abort@plt>
    28b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28bc:	00 00 00 
    28bf:	90                   	nop

00000000000028c0 <_start>:
    28c0:	f3 0f 1e fa          	endbr64
    28c4:	31 ed                	xor    %ebp,%ebp
    28c6:	49 89 d1             	mov    %rdx,%r9
    28c9:	5e                   	pop    %rsi
    28ca:	48 89 e2             	mov    %rsp,%rdx
    28cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    28d1:	50                   	push   %rax
    28d2:	54                   	push   %rsp
    28d3:	45 31 c0             	xor    %r8d,%r8d
    28d6:	31 c9                	xor    %ecx,%ecx
    28d8:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 29a9 <main>
    28df:	ff 15 e3 96 00 00    	call   *0x96e3(%rip)        # bfc8 <__libc_start_main@GLIBC_2.34>
    28e5:	f4                   	hlt
    28e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ed:	00 00 00 

00000000000028f0 <deregister_tm_clones>:
    28f0:	48 8d 3d 39 97 00 00 	lea    0x9739(%rip),%rdi        # c030 <__TMC_END__>
    28f7:	48 8d 05 32 97 00 00 	lea    0x9732(%rip),%rax        # c030 <__TMC_END__>
    28fe:	48 39 f8             	cmp    %rdi,%rax
    2901:	74 15                	je     2918 <deregister_tm_clones+0x28>
    2903:	48 8b 05 c6 96 00 00 	mov    0x96c6(%rip),%rax        # bfd0 <_ITM_deregisterTMCloneTable@Base>
    290a:	48 85 c0             	test   %rax,%rax
    290d:	74 09                	je     2918 <deregister_tm_clones+0x28>
    290f:	ff e0                	jmp    *%rax
    2911:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2918:	c3                   	ret
    2919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002920 <register_tm_clones>:
    2920:	48 8d 3d 09 97 00 00 	lea    0x9709(%rip),%rdi        # c030 <__TMC_END__>
    2927:	48 8d 35 02 97 00 00 	lea    0x9702(%rip),%rsi        # c030 <__TMC_END__>
    292e:	48 29 fe             	sub    %rdi,%rsi
    2931:	48 89 f0             	mov    %rsi,%rax
    2934:	48 c1 ee 3f          	shr    $0x3f,%rsi
    2938:	48 c1 f8 03          	sar    $0x3,%rax
    293c:	48 01 c6             	add    %rax,%rsi
    293f:	48 d1 fe             	sar    $1,%rsi
    2942:	74 14                	je     2958 <register_tm_clones+0x38>
    2944:	48 8b 05 95 96 00 00 	mov    0x9695(%rip),%rax        # bfe0 <_ITM_registerTMCloneTable@Base>
    294b:	48 85 c0             	test   %rax,%rax
    294e:	74 08                	je     2958 <register_tm_clones+0x38>
    2950:	ff e0                	jmp    *%rax
    2952:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2958:	c3                   	ret
    2959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002960 <__do_global_dtors_aux>:
    2960:	f3 0f 1e fa          	endbr64
    2964:	80 3d fd 96 00 00 00 	cmpb   $0x0,0x96fd(%rip)        # c068 <completed.0>
    296b:	75 2b                	jne    2998 <__do_global_dtors_aux+0x38>
    296d:	55                   	push   %rbp
    296e:	48 83 3d 72 96 00 00 	cmpq   $0x0,0x9672(%rip)        # bfe8 <__cxa_finalize@GLIBC_2.2.5>
    2975:	00 
    2976:	48 89 e5             	mov    %rsp,%rbp
    2979:	74 0c                	je     2987 <__do_global_dtors_aux+0x27>
    297b:	48 8b 3d 86 96 00 00 	mov    0x9686(%rip),%rdi        # c008 <__dso_handle>
    2982:	e8 e9 fa ff ff       	call   2470 <__cxa_finalize@plt>
    2987:	e8 64 ff ff ff       	call   28f0 <deregister_tm_clones>
    298c:	c6 05 d5 96 00 00 01 	movb   $0x1,0x96d5(%rip)        # c068 <completed.0>
    2993:	5d                   	pop    %rbp
    2994:	c3                   	ret
    2995:	0f 1f 00             	nopl   (%rax)
    2998:	c3                   	ret
    2999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000029a0 <frame_dummy>:
    29a0:	f3 0f 1e fa          	endbr64
    29a4:	e9 77 ff ff ff       	jmp    2920 <register_tm_clones>

00000000000029a9 <main>:
    29a9:	f3 0f 1e fa          	endbr64
    29ad:	55                   	push   %rbp
    29ae:	48 89 e5             	mov    %rsp,%rbp
    29b1:	48 83 ec 10          	sub    $0x10,%rsp
    29b5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    29bc:	e8 9e 01 00 00       	call   2b5f <capture_suite>
    29c1:	48 89 c7             	mov    %rax,%rdi
    29c4:	e8 e7 0b 00 00       	call   35b0 <srunner_create>
    29c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    29cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29d1:	be 02 00 00 00       	mov    $0x2,%esi
    29d6:	48 89 c7             	mov    %rax,%rdi
    29d9:	e8 52 39 00 00       	call   6330 <srunner_run_all>
    29de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29e2:	48 89 c7             	mov    %rax,%rdi
    29e5:	e8 56 0e 00 00       	call   3840 <srunner_ntests_failed>
    29ea:	89 45 f4             	mov    %eax,-0xc(%rbp)
    29ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29f1:	48 89 c7             	mov    %rax,%rdi
    29f4:	e8 67 0c 00 00       	call   3660 <srunner_free>
    29f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    29fd:	0f 95 c0             	setne  %al
    2a00:	0f b6 c0             	movzbl %al,%eax
    2a03:	c9                   	leave
    2a04:	c3                   	ret

0000000000002a05 <test_create_raw_socket_should_succeed_fn>:
    2a05:	f3 0f 1e fa          	endbr64
    2a09:	55                   	push   %rbp
    2a0a:	48 89 e5             	mov    %rsp,%rbp
    2a0d:	48 83 ec 30          	sub    $0x30,%rsp
    2a11:	89 7d dc             	mov    %edi,-0x24(%rbp)
    2a14:	b8 00 00 00 00       	mov    $0x0,%eax
    2a19:	e8 de 01 00 00       	call   2bfc <create_raw_socket>
    2a1e:	89 45 ec             	mov    %eax,-0x14(%rbp)
    2a21:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2a24:	48 98                	cltq
    2a26:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2a2a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    2a31:	00 
    2a32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a36:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    2a3a:	7c 16                	jl     2a52 <test_create_raw_socket_should_succeed_fn+0x4d>
    2a3c:	be 07 00 00 00       	mov    $0x7,%esi
    2a41:	48 8d 05 e6 55 00 00 	lea    0x55e6(%rip),%rax        # 802e <_IO_stdin_used+0x2e>
    2a48:	48 89 c7             	mov    %rax,%rdi
    2a4b:	e8 40 0a 00 00       	call   3490 <_mark_point>
    2a50:	eb 4d                	jmp    2a9f <test_create_raw_socket_should_succeed_fn+0x9a>
    2a52:	48 83 ec 08          	sub    $0x8,%rsp
    2a56:	ff 75 f8             	push   -0x8(%rbp)
    2a59:	48 8d 05 42 56 00 00 	lea    0x5642(%rip),%rax        # 80a2 <_IO_stdin_used+0xa2>
    2a60:	50                   	push   %rax
    2a61:	ff 75 f0             	push   -0x10(%rbp)
    2a64:	4c 8d 0d d8 55 00 00 	lea    0x55d8(%rip),%r9        # 8043 <_IO_stdin_used+0x43>
    2a6b:	4c 8d 05 d4 55 00 00 	lea    0x55d4(%rip),%r8        # 8046 <_IO_stdin_used+0x46>
    2a72:	48 8d 05 d7 55 00 00 	lea    0x55d7(%rip),%rax        # 8050 <_IO_stdin_used+0x50>
    2a79:	48 89 c1             	mov    %rax,%rcx
    2a7c:	48 8d 05 fd 55 00 00 	lea    0x55fd(%rip),%rax        # 8080 <_IO_stdin_used+0x80>
    2a83:	48 89 c2             	mov    %rax,%rdx
    2a86:	be 07 00 00 00       	mov    $0x7,%esi
    2a8b:	48 8d 05 9c 55 00 00 	lea    0x559c(%rip),%rax        # 802e <_IO_stdin_used+0x2e>
    2a92:	48 89 c7             	mov    %rax,%rdi
    2a95:	b8 00 00 00 00       	mov    $0x0,%eax
    2a9a:	e8 01 0a 00 00       	call   34a0 <_ck_assert_failed>
    2a9f:	c9                   	leave
    2aa0:	c3                   	ret

0000000000002aa1 <test_bind_socket_to_loopback_should_succeed_fn>:
    2aa1:	f3 0f 1e fa          	endbr64
    2aa5:	55                   	push   %rbp
    2aa6:	48 89 e5             	mov    %rsp,%rbp
    2aa9:	48 83 ec 30          	sub    $0x30,%rsp
    2aad:	89 7d dc             	mov    %edi,-0x24(%rbp)
    2ab0:	b8 00 00 00 00       	mov    $0x0,%eax
    2ab5:	e8 42 01 00 00       	call   2bfc <create_raw_socket>
    2aba:	89 45 e8             	mov    %eax,-0x18(%rbp)
    2abd:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2ac0:	48 8d 15 0d 56 00 00 	lea    0x560d(%rip),%rdx        # 80d4 <_IO_stdin_used+0xd4>
    2ac7:	48 89 d6             	mov    %rdx,%rsi
    2aca:	89 c7                	mov    %eax,%edi
    2acc:	e8 72 01 00 00       	call   2c43 <bind_socket_to_interface>
    2ad1:	89 45 ec             	mov    %eax,-0x14(%rbp)
    2ad4:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2ad7:	48 98                	cltq
    2ad9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2add:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    2ae4:	00 
    2ae5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2ae9:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    2aed:	75 16                	jne    2b05 <test_bind_socket_to_loopback_should_succeed_fn+0x64>
    2aef:	be 0f 00 00 00       	mov    $0xf,%esi
    2af4:	48 8d 05 33 55 00 00 	lea    0x5533(%rip),%rax        # 802e <_IO_stdin_used+0x2e>
    2afb:	48 89 c7             	mov    %rax,%rdi
    2afe:	e8 8d 09 00 00       	call   3490 <_mark_point>
    2b03:	eb 4d                	jmp    2b52 <test_bind_socket_to_loopback_should_succeed_fn+0xb1>
    2b05:	48 83 ec 08          	sub    $0x8,%rsp
    2b09:	ff 75 f8             	push   -0x8(%rbp)
    2b0c:	48 8d 05 8f 55 00 00 	lea    0x558f(%rip),%rax        # 80a2 <_IO_stdin_used+0xa2>
    2b13:	50                   	push   %rax
    2b14:	ff 75 f0             	push   -0x10(%rbp)
    2b17:	4c 8d 0d b9 55 00 00 	lea    0x55b9(%rip),%r9        # 80d7 <_IO_stdin_used+0xd7>
    2b1e:	4c 8d 05 b9 55 00 00 	lea    0x55b9(%rip),%r8        # 80de <_IO_stdin_used+0xde>
    2b25:	48 8d 05 24 55 00 00 	lea    0x5524(%rip),%rax        # 8050 <_IO_stdin_used+0x50>
    2b2c:	48 89 c1             	mov    %rax,%rcx
    2b2f:	48 8d 05 ba 55 00 00 	lea    0x55ba(%rip),%rax        # 80f0 <_IO_stdin_used+0xf0>
    2b36:	48 89 c2             	mov    %rax,%rdx
    2b39:	be 0f 00 00 00       	mov    $0xf,%esi
    2b3e:	48 8d 05 e9 54 00 00 	lea    0x54e9(%rip),%rax        # 802e <_IO_stdin_used+0x2e>
    2b45:	48 89 c7             	mov    %rax,%rdi
    2b48:	b8 00 00 00 00       	mov    $0x0,%eax
    2b4d:	e8 4e 09 00 00       	call   34a0 <_ck_assert_failed>
    2b52:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2b55:	89 c7                	mov    %eax,%edi
    2b57:	e8 f4 fa ff ff       	call   2650 <close@plt>
    2b5c:	90                   	nop
    2b5d:	c9                   	leave
    2b5e:	c3                   	ret

0000000000002b5f <capture_suite>:
    2b5f:	f3 0f 1e fa          	endbr64
    2b63:	55                   	push   %rbp
    2b64:	48 89 e5             	mov    %rsp,%rbp
    2b67:	48 83 ec 10          	sub    $0x10,%rsp
    2b6b:	48 8d 05 a0 55 00 00 	lea    0x55a0(%rip),%rax        # 8112 <_IO_stdin_used+0x112>
    2b72:	48 89 c7             	mov    %rax,%rdi
    2b75:	e8 66 01 00 00       	call   2ce0 <suite_create>
    2b7a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2b7e:	48 8d 05 95 55 00 00 	lea    0x5595(%rip),%rax        # 811a <_IO_stdin_used+0x11a>
    2b85:	48 89 c7             	mov    %rax,%rdi
    2b88:	e8 13 02 00 00       	call   2da0 <tcase_create>
    2b8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2b91:	48 8b 35 78 94 00 00 	mov    0x9478(%rip),%rsi        # c010 <test_create_raw_socket_should_succeed>
    2b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b9c:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    2ba2:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    2ba8:	b9 00 00 00 00       	mov    $0x0,%ecx
    2bad:	ba 00 00 00 00       	mov    $0x0,%edx
    2bb2:	48 89 c7             	mov    %rax,%rdi
    2bb5:	e8 a6 05 00 00       	call   3160 <_tcase_add_test>
    2bba:	48 8b 35 57 94 00 00 	mov    0x9457(%rip),%rsi        # c018 <test_bind_socket_to_loopback_should_succeed>
    2bc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bc5:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    2bcb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    2bd1:	b9 00 00 00 00       	mov    $0x0,%ecx
    2bd6:	ba 00 00 00 00       	mov    $0x0,%edx
    2bdb:	48 89 c7             	mov    %rax,%rdi
    2bde:	e8 7d 05 00 00       	call   3160 <_tcase_add_test>
    2be3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2be7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2beb:	48 89 d6             	mov    %rdx,%rsi
    2bee:	48 89 c7             	mov    %rax,%rdi
    2bf1:	e8 1a 05 00 00       	call   3110 <suite_add_tcase>
    2bf6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2bfa:	c9                   	leave
    2bfb:	c3                   	ret

0000000000002bfc <create_raw_socket>:
    2bfc:	f3 0f 1e fa          	endbr64
    2c00:	55                   	push   %rbp
    2c01:	48 89 e5             	mov    %rsp,%rbp
    2c04:	48 83 ec 10          	sub    $0x10,%rsp
    2c08:	bf 03 00 00 00       	mov    $0x3,%edi
    2c0d:	e8 ce f9 ff ff       	call   25e0 <htons@plt>
    2c12:	0f b7 c0             	movzwl %ax,%eax
    2c15:	89 c2                	mov    %eax,%edx
    2c17:	be 03 00 00 00       	mov    $0x3,%esi
    2c1c:	bf 11 00 00 00       	mov    $0x11,%edi
    2c21:	e8 7a fc ff ff       	call   28a0 <socket@plt>
    2c26:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2c29:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    2c2d:	79 0f                	jns    2c3e <create_raw_socket+0x42>
    2c2f:	48 8d 05 ee 54 00 00 	lea    0x54ee(%rip),%rax        # 8124 <_IO_stdin_used+0x124>
    2c36:	48 89 c7             	mov    %rax,%rdi
    2c39:	e8 92 fb ff ff       	call   27d0 <perror@plt>
    2c3e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2c41:	c9                   	leave
    2c42:	c3                   	ret

0000000000002c43 <bind_socket_to_interface>:
    2c43:	f3 0f 1e fa          	endbr64
    2c47:	55                   	push   %rbp
    2c48:	48 89 e5             	mov    %rsp,%rbp
    2c4b:	48 83 ec 40          	sub    $0x40,%rsp
    2c4f:	89 7d cc             	mov    %edi,-0x34(%rbp)
    2c52:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    2c56:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2c5d:	00 00 
    2c5f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2c63:	31 c0                	xor    %eax,%eax
    2c65:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    2c69:	ba 14 00 00 00       	mov    $0x14,%edx
    2c6e:	be 00 00 00 00       	mov    $0x0,%esi
    2c73:	48 89 c7             	mov    %rax,%rdi
    2c76:	e8 b5 f9 ff ff       	call   2630 <memset@plt>
    2c7b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2c7f:	48 89 c7             	mov    %rax,%rdi
    2c82:	e8 19 fa ff ff       	call   26a0 <if_nametoindex@plt>
    2c87:	89 45 dc             	mov    %eax,-0x24(%rbp)
    2c8a:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    2c8e:	75 07                	jne    2c97 <bind_socket_to_interface+0x54>
    2c90:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2c95:	eb 30                	jmp    2cc7 <bind_socket_to_interface+0x84>
    2c97:	66 c7 45 e0 11 00    	movw   $0x11,-0x20(%rbp)
    2c9d:	bf 03 00 00 00       	mov    $0x3,%edi
    2ca2:	e8 39 f9 ff ff       	call   25e0 <htons@plt>
    2ca7:	66 89 45 e2          	mov    %ax,-0x1e(%rbp)
    2cab:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2cae:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    2cb1:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    2cb5:	8b 45 cc             	mov    -0x34(%rbp),%eax
    2cb8:	ba 14 00 00 00       	mov    $0x14,%edx
    2cbd:	48 89 ce             	mov    %rcx,%rsi
    2cc0:	89 c7                	mov    %eax,%edi
    2cc2:	e8 99 fa ff ff       	call   2760 <bind@plt>
    2cc7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2ccb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    2cd2:	00 00 
    2cd4:	74 05                	je     2cdb <bind_socket_to_interface+0x98>
    2cd6:	e8 d5 f8 ff ff       	call   25b0 <__stack_chk_fail@plt>
    2cdb:	c9                   	leave
    2cdc:	c3                   	ret
    2cdd:	0f 1f 00             	nopl   (%rax)

0000000000002ce0 <suite_create>:
    2ce0:	f3 0f 1e fa          	endbr64
    2ce4:	55                   	push   %rbp
    2ce5:	48 89 e5             	mov    %rsp,%rbp
    2ce8:	41 54                	push   %r12
    2cea:	53                   	push   %rbx
    2ceb:	48 89 fb             	mov    %rdi,%rbx
    2cee:	bf 10 00 00 00       	mov    $0x10,%edi
    2cf3:	e8 38 0f 00 00       	call   3c30 <emalloc>
    2cf8:	48 85 db             	test   %rbx,%rbx
    2cfb:	49 89 c4             	mov    %rax,%r12
    2cfe:	48 8d 05 96 57 00 00 	lea    0x5796(%rip),%rax        # 849b <_IO_stdin_used+0x49b>
    2d05:	48 0f 44 d8          	cmove  %rax,%rbx
    2d09:	49 89 1c 24          	mov    %rbx,(%r12)
    2d0d:	e8 9e 0f 00 00       	call   3cb0 <check_list_create>
    2d12:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    2d17:	4c 89 e0             	mov    %r12,%rax
    2d1a:	5b                   	pop    %rbx
    2d1b:	41 5c                	pop    %r12
    2d1d:	5d                   	pop    %rbp
    2d1e:	c3                   	ret
    2d1f:	90                   	nop

0000000000002d20 <suite_tcase>:
    2d20:	f3 0f 1e fa          	endbr64
    2d24:	48 85 ff             	test   %rdi,%rdi
    2d27:	74 67                	je     2d90 <suite_tcase+0x70>
    2d29:	55                   	push   %rbp
    2d2a:	48 89 e5             	mov    %rsp,%rbp
    2d2d:	41 54                	push   %r12
    2d2f:	49 89 f4             	mov    %rsi,%r12
    2d32:	53                   	push   %rbx
    2d33:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    2d37:	48 89 df             	mov    %rbx,%rdi
    2d3a:	e8 e1 10 00 00       	call   3e20 <check_list_front>
    2d3f:	eb 26                	jmp    2d67 <suite_tcase+0x47>
    2d41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2d48:	48 89 df             	mov    %rbx,%rdi
    2d4b:	e8 30 11 00 00       	call   3e80 <check_list_val>
    2d50:	4c 89 e7             	mov    %r12,%rdi
    2d53:	48 8b 30             	mov    (%rax),%rsi
    2d56:	e8 25 f9 ff ff       	call   2680 <strcmp@plt>
    2d5b:	85 c0                	test   %eax,%eax
    2d5d:	74 21                	je     2d80 <suite_tcase+0x60>
    2d5f:	48 89 df             	mov    %rbx,%rdi
    2d62:	e8 49 11 00 00       	call   3eb0 <check_list_advance>
    2d67:	48 89 df             	mov    %rbx,%rdi
    2d6a:	e8 91 10 00 00       	call   3e00 <check_list_at_end>
    2d6f:	85 c0                	test   %eax,%eax
    2d71:	74 d5                	je     2d48 <suite_tcase+0x28>
    2d73:	5b                   	pop    %rbx
    2d74:	31 c0                	xor    %eax,%eax
    2d76:	41 5c                	pop    %r12
    2d78:	5d                   	pop    %rbp
    2d79:	c3                   	ret
    2d7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2d80:	5b                   	pop    %rbx
    2d81:	b8 01 00 00 00       	mov    $0x1,%eax
    2d86:	41 5c                	pop    %r12
    2d88:	5d                   	pop    %rbp
    2d89:	c3                   	ret
    2d8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2d90:	31 c0                	xor    %eax,%eax
    2d92:	c3                   	ret
    2d93:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    2d9a:	00 00 00 00 
    2d9e:	66 90                	xchg   %ax,%ax

0000000000002da0 <tcase_create>:
    2da0:	f3 0f 1e fa          	endbr64
    2da4:	55                   	push   %rbp
    2da5:	48 89 e5             	mov    %rsp,%rbp
    2da8:	41 54                	push   %r12
    2daa:	49 89 fc             	mov    %rdi,%r12
    2dad:	bf 48 00 00 00       	mov    $0x48,%edi
    2db2:	53                   	push   %rbx
    2db3:	48 83 ec 20          	sub    $0x20,%rsp
    2db7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2dbe:	00 00 
    2dc0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2dc4:	31 c0                	xor    %eax,%eax
    2dc6:	e8 65 0e 00 00       	call   3c30 <emalloc>
    2dcb:	4d 85 e4             	test   %r12,%r12
    2dce:	48 8d 3d 56 53 00 00 	lea    0x5356(%rip),%rdi        # 812b <_IO_stdin_used+0x12b>
    2dd5:	48 89 c3             	mov    %rax,%rbx
    2dd8:	48 8d 05 bc 56 00 00 	lea    0x56bc(%rip),%rax        # 849b <_IO_stdin_used+0x49b>
    2ddf:	4c 0f 44 e0          	cmove  %rax,%r12
    2de3:	4c 89 23             	mov    %r12,(%rbx)
    2de6:	e8 95 f6 ff ff       	call   2480 <getenv@plt>
    2deb:	f2 0f 10 0d 1d 58 00 	movsd  0x581d(%rip),%xmm1        # 8610 <_IO_stdin_used+0x610>
    2df2:	00 
    2df3:	48 85 c0             	test   %rax,%rax
    2df6:	74 48                	je     2e40 <tcase_create+0xa0>
    2df8:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
    2dfc:	48 89 c7             	mov    %rax,%rdi
    2dff:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    2e06:	00 
    2e07:	49 89 c4             	mov    %rax,%r12
    2e0a:	e8 41 f7 ff ff       	call   2550 <strtod@plt>
    2e0f:	66 0f 28 c8          	movapd %xmm0,%xmm1
    2e13:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2e17:	66 0f 2f c8          	comisd %xmm0,%xmm1
    2e1b:	0f 82 4f 01 00 00    	jb     2f70 <tcase_create+0x1d0>
    2e21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2e25:	4c 39 e0             	cmp    %r12,%rax
    2e28:	0f 84 42 01 00 00    	je     2f70 <tcase_create+0x1d0>
    2e2e:	80 38 00             	cmpb   $0x0,(%rax)
    2e31:	0f 85 39 01 00 00    	jne    2f70 <tcase_create+0x1d0>
    2e37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2e3e:	00 00 
    2e40:	48 8d 3d f7 52 00 00 	lea    0x52f7(%rip),%rdi        # 813e <_IO_stdin_used+0x13e>
    2e47:	f2 0f 11 4d d8       	movsd  %xmm1,-0x28(%rbp)
    2e4c:	e8 2f f6 ff ff       	call   2480 <getenv@plt>
    2e51:	f2 0f 10 4d d8       	movsd  -0x28(%rbp),%xmm1
    2e56:	48 85 c0             	test   %rax,%rax
    2e59:	49 89 c4             	mov    %rax,%r12
    2e5c:	74 3a                	je     2e98 <tcase_create+0xf8>
    2e5e:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
    2e62:	48 89 c7             	mov    %rax,%rdi
    2e65:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    2e6c:	00 
    2e6d:	e8 de f6 ff ff       	call   2550 <strtod@plt>
    2e72:	66 0f ef d2          	pxor   %xmm2,%xmm2
    2e76:	f2 0f 10 4d d8       	movsd  -0x28(%rbp),%xmm1
    2e7b:	66 0f 2f c2          	comisd %xmm2,%xmm0
    2e7f:	72 17                	jb     2e98 <tcase_create+0xf8>
    2e81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2e85:	4c 39 e0             	cmp    %r12,%rax
    2e88:	74 0e                	je     2e98 <tcase_create+0xf8>
    2e8a:	80 38 00             	cmpb   $0x0,(%rax)
    2e8d:	0f 84 ed 00 00 00    	je     2f80 <tcase_create+0x1e0>
    2e93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2e98:	66 0f 28 c1          	movapd %xmm1,%xmm0
    2e9c:	f2 0f 11 4d d8       	movsd  %xmm1,-0x28(%rbp)
    2ea1:	e8 4a f9 ff ff       	call   27f0 <floor@plt>
    2ea6:	f2 0f 10 4d d8       	movsd  -0x28(%rbp),%xmm1
    2eab:	f2 0f 10 15 7d 57 00 	movsd  0x577d(%rip),%xmm2        # 8630 <_IO_stdin_used+0x630>
    2eb2:	00 
    2eb3:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    2eb8:	f2 0f 10 25 58 57 00 	movsd  0x5758(%rip),%xmm4        # 8618 <_IO_stdin_used+0x618>
    2ebf:	00 
    2ec0:	66 0f 28 c1          	movapd %xmm1,%xmm0
    2ec4:	66 0f 28 d9          	movapd %xmm1,%xmm3
    2ec8:	66 0f 54 c2          	andpd  %xmm2,%xmm0
    2ecc:	66 0f 2e e0          	ucomisd %xmm0,%xmm4
    2ed0:	48 89 43 08          	mov    %rax,0x8(%rbx)
    2ed4:	76 33                	jbe    2f09 <tcase_create+0x169>
    2ed6:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
    2edb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2edf:	f2 0f 10 25 39 57 00 	movsd  0x5739(%rip),%xmm4        # 8620 <_IO_stdin_used+0x620>
    2ee6:	00 
    2ee7:	66 0f 55 d1          	andnpd %xmm1,%xmm2
    2eeb:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    2ef0:	66 0f 28 d8          	movapd %xmm0,%xmm3
    2ef4:	f2 0f c2 d9 06       	cmpnlesd %xmm1,%xmm3
    2ef9:	66 0f 54 dc          	andpd  %xmm4,%xmm3
    2efd:	f2 0f 5c c3          	subsd  %xmm3,%xmm0
    2f01:	66 0f 28 d8          	movapd %xmm0,%xmm3
    2f05:	66 0f 56 da          	orpd   %xmm2,%xmm3
    2f09:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
    2f0d:	f2 0f 59 0d 13 57 00 	mulsd  0x5713(%rip),%xmm1        # 8628 <_IO_stdin_used+0x628>
    2f14:	00 
    2f15:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
    2f1a:	48 89 43 10          	mov    %rax,0x10(%rbx)
    2f1e:	e8 8d 0d 00 00       	call   3cb0 <check_list_create>
    2f23:	48 89 43 18          	mov    %rax,0x18(%rbx)
    2f27:	e8 84 0d 00 00       	call   3cb0 <check_list_create>
    2f2c:	48 89 43 20          	mov    %rax,0x20(%rbx)
    2f30:	e8 7b 0d 00 00       	call   3cb0 <check_list_create>
    2f35:	48 89 43 30          	mov    %rax,0x30(%rbx)
    2f39:	e8 72 0d 00 00       	call   3cb0 <check_list_create>
    2f3e:	48 89 43 28          	mov    %rax,0x28(%rbx)
    2f42:	e8 69 0d 00 00       	call   3cb0 <check_list_create>
    2f47:	48 89 43 38          	mov    %rax,0x38(%rbx)
    2f4b:	e8 60 0d 00 00       	call   3cb0 <check_list_create>
    2f50:	48 89 43 40          	mov    %rax,0x40(%rbx)
    2f54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f58:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    2f5f:	00 00 
    2f61:	75 26                	jne    2f89 <tcase_create+0x1e9>
    2f63:	48 83 c4 20          	add    $0x20,%rsp
    2f67:	48 89 d8             	mov    %rbx,%rax
    2f6a:	5b                   	pop    %rbx
    2f6b:	41 5c                	pop    %r12
    2f6d:	5d                   	pop    %rbp
    2f6e:	c3                   	ret
    2f6f:	90                   	nop
    2f70:	f2 0f 10 0d 98 56 00 	movsd  0x5698(%rip),%xmm1        # 8610 <_IO_stdin_used+0x610>
    2f77:	00 
    2f78:	e9 c3 fe ff ff       	jmp    2e40 <tcase_create+0xa0>
    2f7d:	0f 1f 00             	nopl   (%rax)
    2f80:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    2f84:	e9 0f ff ff ff       	jmp    2e98 <tcase_create+0xf8>
    2f89:	e8 22 f6 ff ff       	call   25b0 <__stack_chk_fail@plt>
    2f8e:	66 90                	xchg   %ax,%ax

0000000000002f90 <tag_string_to_list>:
    2f90:	f3 0f 1e fa          	endbr64
    2f94:	55                   	push   %rbp
    2f95:	48 89 e5             	mov    %rsp,%rbp
    2f98:	41 55                	push   %r13
    2f9a:	41 54                	push   %r12
    2f9c:	49 89 fc             	mov    %rdi,%r12
    2f9f:	53                   	push   %rbx
    2fa0:	48 83 ec 08          	sub    $0x8,%rsp
    2fa4:	e8 07 0d 00 00       	call   3cb0 <check_list_create>
    2fa9:	48 89 c3             	mov    %rax,%rbx
    2fac:	4d 85 e4             	test   %r12,%r12
    2faf:	74 59                	je     300a <tag_string_to_list+0x7a>
    2fb1:	4c 89 e7             	mov    %r12,%rdi
    2fb4:	4c 8d 25 4c 54 00 00 	lea    0x544c(%rip),%r12        # 8407 <_IO_stdin_used+0x407>
    2fbb:	e8 90 f8 ff ff       	call   2850 <strdup@plt>
    2fc0:	4c 89 e6             	mov    %r12,%rsi
    2fc3:	48 89 c7             	mov    %rax,%rdi
    2fc6:	49 89 c5             	mov    %rax,%r13
    2fc9:	e8 12 f8 ff ff       	call   27e0 <strtok@plt>
    2fce:	48 89 c7             	mov    %rax,%rdi
    2fd1:	48 85 c0             	test   %rax,%rax
    2fd4:	74 2c                	je     3002 <tag_string_to_list+0x72>
    2fd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fdd:	00 00 00 
    2fe0:	e8 6b f8 ff ff       	call   2850 <strdup@plt>
    2fe5:	48 89 df             	mov    %rbx,%rdi
    2fe8:	48 89 c6             	mov    %rax,%rsi
    2feb:	e8 90 0d 00 00       	call   3d80 <check_list_add_end>
    2ff0:	31 ff                	xor    %edi,%edi
    2ff2:	4c 89 e6             	mov    %r12,%rsi
    2ff5:	e8 e6 f7 ff ff       	call   27e0 <strtok@plt>
    2ffa:	48 89 c7             	mov    %rax,%rdi
    2ffd:	48 85 c0             	test   %rax,%rax
    3000:	75 de                	jne    2fe0 <tag_string_to_list+0x50>
    3002:	4c 89 ef             	mov    %r13,%rdi
    3005:	e8 56 f4 ff ff       	call   2460 <free@plt>
    300a:	48 83 c4 08          	add    $0x8,%rsp
    300e:	48 89 d8             	mov    %rbx,%rax
    3011:	5b                   	pop    %rbx
    3012:	41 5c                	pop    %r12
    3014:	41 5d                	pop    %r13
    3016:	5d                   	pop    %rbp
    3017:	c3                   	ret
    3018:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    301f:	00 

0000000000003020 <tcase_set_tags>:
    3020:	f3 0f 1e fa          	endbr64
    3024:	55                   	push   %rbp
    3025:	48 89 e5             	mov    %rsp,%rbp
    3028:	41 54                	push   %r12
    302a:	49 89 f4             	mov    %rsi,%r12
    302d:	53                   	push   %rbx
    302e:	48 89 fb             	mov    %rdi,%rbx
    3031:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
    3035:	48 85 ff             	test   %rdi,%rdi
    3038:	74 15                	je     304f <tcase_set_tags+0x2f>
    303a:	48 8b 35 7f 8f 00 00 	mov    0x8f7f(%rip),%rsi        # bfc0 <free@GLIBC_2.2.5>
    3041:	e8 8a 0e 00 00       	call   3ed0 <check_list_apply>
    3046:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    304a:	e8 f1 0d 00 00       	call   3e40 <check_list_free>
    304f:	4c 89 e7             	mov    %r12,%rdi
    3052:	e8 39 ff ff ff       	call   2f90 <tag_string_to_list>
    3057:	48 89 43 40          	mov    %rax,0x40(%rbx)
    305b:	5b                   	pop    %rbx
    305c:	41 5c                	pop    %r12
    305e:	5d                   	pop    %rbp
    305f:	c3                   	ret

0000000000003060 <tcase_matching_tag>:
    3060:	f3 0f 1e fa          	endbr64
    3064:	48 85 f6             	test   %rsi,%rsi
    3067:	0f 84 9b 00 00 00    	je     3108 <tcase_matching_tag+0xa8>
    306d:	55                   	push   %rbp
    306e:	48 89 e5             	mov    %rsp,%rbp
    3071:	41 55                	push   %r13
    3073:	49 89 f5             	mov    %rsi,%r13
    3076:	41 54                	push   %r12
    3078:	49 89 fc             	mov    %rdi,%r12
    307b:	48 89 f7             	mov    %rsi,%rdi
    307e:	53                   	push   %rbx
    307f:	48 83 ec 08          	sub    $0x8,%rsp
    3083:	e8 98 0d 00 00       	call   3e20 <check_list_front>
    3088:	4c 89 ef             	mov    %r13,%rdi
    308b:	e8 70 0d 00 00       	call   3e00 <check_list_at_end>
    3090:	85 c0                	test   %eax,%eax
    3092:	75 64                	jne    30f8 <tcase_matching_tag+0x98>
    3094:	49 8b 7c 24 40       	mov    0x40(%r12),%rdi
    3099:	e8 82 0d 00 00       	call   3e20 <check_list_front>
    309e:	eb 2b                	jmp    30cb <tcase_matching_tag+0x6b>
    30a0:	e8 db 0d 00 00       	call   3e80 <check_list_val>
    30a5:	49 8b 7c 24 40       	mov    0x40(%r12),%rdi
    30aa:	48 89 c3             	mov    %rax,%rbx
    30ad:	e8 ce 0d 00 00       	call   3e80 <check_list_val>
    30b2:	48 89 de             	mov    %rbx,%rsi
    30b5:	48 89 c7             	mov    %rax,%rdi
    30b8:	e8 c3 f5 ff ff       	call   2680 <strcmp@plt>
    30bd:	85 c0                	test   %eax,%eax
    30bf:	74 27                	je     30e8 <tcase_matching_tag+0x88>
    30c1:	49 8b 7c 24 40       	mov    0x40(%r12),%rdi
    30c6:	e8 e5 0d 00 00       	call   3eb0 <check_list_advance>
    30cb:	49 8b 7c 24 40       	mov    0x40(%r12),%rdi
    30d0:	e8 2b 0d 00 00       	call   3e00 <check_list_at_end>
    30d5:	4c 89 ef             	mov    %r13,%rdi
    30d8:	85 c0                	test   %eax,%eax
    30da:	74 c4                	je     30a0 <tcase_matching_tag+0x40>
    30dc:	e8 cf 0d 00 00       	call   3eb0 <check_list_advance>
    30e1:	eb a5                	jmp    3088 <tcase_matching_tag+0x28>
    30e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    30e8:	48 83 c4 08          	add    $0x8,%rsp
    30ec:	b8 01 00 00 00       	mov    $0x1,%eax
    30f1:	5b                   	pop    %rbx
    30f2:	41 5c                	pop    %r12
    30f4:	41 5d                	pop    %r13
    30f6:	5d                   	pop    %rbp
    30f7:	c3                   	ret
    30f8:	48 83 c4 08          	add    $0x8,%rsp
    30fc:	31 c0                	xor    %eax,%eax
    30fe:	5b                   	pop    %rbx
    30ff:	41 5c                	pop    %r12
    3101:	41 5d                	pop    %r13
    3103:	5d                   	pop    %rbp
    3104:	c3                   	ret
    3105:	0f 1f 00             	nopl   (%rax)
    3108:	31 c0                	xor    %eax,%eax
    310a:	c3                   	ret
    310b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003110 <suite_add_tcase>:
    3110:	f3 0f 1e fa          	endbr64
    3114:	48 85 ff             	test   %rdi,%rdi
    3117:	74 3f                	je     3158 <suite_add_tcase+0x48>
    3119:	55                   	push   %rbp
    311a:	48 89 e5             	mov    %rsp,%rbp
    311d:	41 54                	push   %r12
    311f:	49 89 f4             	mov    %rsi,%r12
    3122:	53                   	push   %rbx
    3123:	48 85 f6             	test   %rsi,%rsi
    3126:	74 28                	je     3150 <suite_add_tcase+0x40>
    3128:	48 89 fb             	mov    %rdi,%rbx
    312b:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    312f:	e8 0c 0e 00 00       	call   3f40 <check_list_contains>
    3134:	85 c0                	test   %eax,%eax
    3136:	75 18                	jne    3150 <suite_add_tcase+0x40>
    3138:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    313c:	4c 89 e6             	mov    %r12,%rsi
    313f:	5b                   	pop    %rbx
    3140:	41 5c                	pop    %r12
    3142:	5d                   	pop    %rbp
    3143:	e9 38 0c 00 00       	jmp    3d80 <check_list_add_end>
    3148:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    314f:	00 
    3150:	5b                   	pop    %rbx
    3151:	41 5c                	pop    %r12
    3153:	5d                   	pop    %rbp
    3154:	c3                   	ret
    3155:	0f 1f 00             	nopl   (%rax)
    3158:	c3                   	ret
    3159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003160 <_tcase_add_test>:
    3160:	f3 0f 1e fa          	endbr64
    3164:	55                   	push   %rbp
    3165:	48 89 e5             	mov    %rsp,%rbp
    3168:	41 57                	push   %r15
    316a:	41 56                	push   %r14
    316c:	41 55                	push   %r13
    316e:	41 54                	push   %r12
    3170:	53                   	push   %rbx
    3171:	48 83 ec 18          	sub    $0x18,%rsp
    3175:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
    3179:	48 85 ff             	test   %rdi,%rdi
    317c:	74 52                	je     31d0 <_tcase_add_test+0x70>
    317e:	49 89 f4             	mov    %rsi,%r12
    3181:	48 85 f6             	test   %rsi,%rsi
    3184:	74 4a                	je     31d0 <_tcase_add_test+0x70>
    3186:	48 89 fb             	mov    %rdi,%rbx
    3189:	bf 18 00 00 00       	mov    $0x18,%edi
    318e:	41 89 d6             	mov    %edx,%r14d
    3191:	41 89 cd             	mov    %ecx,%r13d
    3194:	45 89 cf             	mov    %r9d,%r15d
    3197:	e8 94 0a 00 00       	call   3c30 <emalloc>
    319c:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
    31a0:	44 88 68 14          	mov    %r13b,0x14(%rax)
    31a4:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    31a8:	48 89 c6             	mov    %rax,%rsi
    31ab:	4c 89 20             	mov    %r12,(%rax)
    31ae:	44 89 40 08          	mov    %r8d,0x8(%rax)
    31b2:	44 89 78 0c          	mov    %r15d,0xc(%rax)
    31b6:	44 89 70 10          	mov    %r14d,0x10(%rax)
    31ba:	48 83 c4 18          	add    $0x18,%rsp
    31be:	5b                   	pop    %rbx
    31bf:	41 5c                	pop    %r12
    31c1:	41 5d                	pop    %r13
    31c3:	41 5e                	pop    %r14
    31c5:	41 5f                	pop    %r15
    31c7:	5d                   	pop    %rbp
    31c8:	e9 b3 0b 00 00       	jmp    3d80 <check_list_add_end>
    31cd:	0f 1f 00             	nopl   (%rax)
    31d0:	48 83 c4 18          	add    $0x18,%rsp
    31d4:	5b                   	pop    %rbx
    31d5:	41 5c                	pop    %r12
    31d7:	41 5d                	pop    %r13
    31d9:	41 5e                	pop    %r14
    31db:	41 5f                	pop    %r15
    31dd:	5d                   	pop    %rbp
    31de:	c3                   	ret
    31df:	90                   	nop

00000000000031e0 <tcase_add_unchecked_fixture>:
    31e0:	f3 0f 1e fa          	endbr64
    31e4:	55                   	push   %rbp
    31e5:	48 89 e5             	mov    %rsp,%rbp
    31e8:	41 55                	push   %r13
    31ea:	49 89 fd             	mov    %rdi,%r13
    31ed:	41 54                	push   %r12
    31ef:	53                   	push   %rbx
    31f0:	48 89 d3             	mov    %rdx,%rbx
    31f3:	48 83 ec 08          	sub    $0x8,%rsp
    31f7:	48 85 f6             	test   %rsi,%rsi
    31fa:	74 23                	je     321f <tcase_add_unchecked_fixture+0x3f>
    31fc:	bf 10 00 00 00       	mov    $0x10,%edi
    3201:	49 89 f4             	mov    %rsi,%r12
    3204:	e8 27 0a 00 00       	call   3c30 <emalloc>
    3209:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    320d:	4c 89 60 08          	mov    %r12,0x8(%rax)
    3211:	48 89 c6             	mov    %rax,%rsi
    3214:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    321a:	e8 61 0b 00 00       	call   3d80 <check_list_add_end>
    321f:	48 85 db             	test   %rbx,%rbx
    3222:	74 2c                	je     3250 <tcase_add_unchecked_fixture+0x70>
    3224:	bf 10 00 00 00       	mov    $0x10,%edi
    3229:	e8 02 0a 00 00       	call   3c30 <emalloc>
    322e:	49 8b 7d 28          	mov    0x28(%r13),%rdi
    3232:	48 89 58 08          	mov    %rbx,0x8(%rax)
    3236:	48 89 c6             	mov    %rax,%rsi
    3239:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    323f:	48 83 c4 08          	add    $0x8,%rsp
    3243:	5b                   	pop    %rbx
    3244:	41 5c                	pop    %r12
    3246:	41 5d                	pop    %r13
    3248:	5d                   	pop    %rbp
    3249:	e9 b2 0a 00 00       	jmp    3d00 <check_list_add_front>
    324e:	66 90                	xchg   %ax,%ax
    3250:	48 83 c4 08          	add    $0x8,%rsp
    3254:	5b                   	pop    %rbx
    3255:	41 5c                	pop    %r12
    3257:	41 5d                	pop    %r13
    3259:	5d                   	pop    %rbp
    325a:	c3                   	ret
    325b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003260 <tcase_add_checked_fixture>:
    3260:	f3 0f 1e fa          	endbr64
    3264:	55                   	push   %rbp
    3265:	48 89 e5             	mov    %rsp,%rbp
    3268:	41 55                	push   %r13
    326a:	49 89 fd             	mov    %rdi,%r13
    326d:	41 54                	push   %r12
    326f:	53                   	push   %rbx
    3270:	48 89 d3             	mov    %rdx,%rbx
    3273:	48 83 ec 08          	sub    $0x8,%rsp
    3277:	48 85 f6             	test   %rsi,%rsi
    327a:	74 23                	je     329f <tcase_add_checked_fixture+0x3f>
    327c:	bf 10 00 00 00       	mov    $0x10,%edi
    3281:	49 89 f4             	mov    %rsi,%r12
    3284:	e8 a7 09 00 00       	call   3c30 <emalloc>
    3289:	49 8b 7d 30          	mov    0x30(%r13),%rdi
    328d:	4c 89 60 08          	mov    %r12,0x8(%rax)
    3291:	48 89 c6             	mov    %rax,%rsi
    3294:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    329a:	e8 e1 0a 00 00       	call   3d80 <check_list_add_end>
    329f:	48 85 db             	test   %rbx,%rbx
    32a2:	74 2c                	je     32d0 <tcase_add_checked_fixture+0x70>
    32a4:	bf 10 00 00 00       	mov    $0x10,%edi
    32a9:	e8 82 09 00 00       	call   3c30 <emalloc>
    32ae:	49 8b 7d 38          	mov    0x38(%r13),%rdi
    32b2:	48 89 58 08          	mov    %rbx,0x8(%rax)
    32b6:	48 89 c6             	mov    %rax,%rsi
    32b9:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    32bf:	48 83 c4 08          	add    $0x8,%rsp
    32c3:	5b                   	pop    %rbx
    32c4:	41 5c                	pop    %r12
    32c6:	41 5d                	pop    %r13
    32c8:	5d                   	pop    %rbp
    32c9:	e9 32 0a 00 00       	jmp    3d00 <check_list_add_front>
    32ce:	66 90                	xchg   %ax,%ax
    32d0:	48 83 c4 08          	add    $0x8,%rsp
    32d4:	5b                   	pop    %rbx
    32d5:	41 5c                	pop    %r12
    32d7:	41 5d                	pop    %r13
    32d9:	5d                   	pop    %rbp
    32da:	c3                   	ret
    32db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032e0 <tcase_set_timeout>:
    32e0:	f3 0f 1e fa          	endbr64
    32e4:	55                   	push   %rbp
    32e5:	66 0f ef d2          	pxor   %xmm2,%xmm2
    32e9:	48 89 e5             	mov    %rsp,%rbp
    32ec:	41 54                	push   %r12
    32ee:	53                   	push   %rbx
    32ef:	48 83 ec 20          	sub    $0x20,%rsp
    32f3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    32fa:	00 00 
    32fc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3300:	31 c0                	xor    %eax,%eax
    3302:	66 0f 2f c2          	comisd %xmm2,%xmm0
    3306:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
    330b:	73 23                	jae    3330 <tcase_set_timeout+0x50>
    330d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3311:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    3318:	00 00 
    331a:	0f 85 01 01 00 00    	jne    3421 <tcase_set_timeout+0x141>
    3320:	48 83 c4 20          	add    $0x20,%rsp
    3324:	5b                   	pop    %rbx
    3325:	41 5c                	pop    %r12
    3327:	5d                   	pop    %rbp
    3328:	c3                   	ret
    3329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3330:	48 89 fb             	mov    %rdi,%rbx
    3333:	48 8d 3d 04 4e 00 00 	lea    0x4e04(%rip),%rdi        # 813e <_IO_stdin_used+0x13e>
    333a:	e8 41 f1 ff ff       	call   2480 <getenv@plt>
    333f:	f2 0f 10 4d d8       	movsd  -0x28(%rbp),%xmm1
    3344:	48 85 c0             	test   %rax,%rax
    3347:	49 89 c4             	mov    %rax,%r12
    334a:	74 3c                	je     3388 <tcase_set_timeout+0xa8>
    334c:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
    3350:	48 89 c7             	mov    %rax,%rdi
    3353:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    335a:	00 
    335b:	e8 f0 f1 ff ff       	call   2550 <strtod@plt>
    3360:	66 0f ef d2          	pxor   %xmm2,%xmm2
    3364:	f2 0f 10 4d d8       	movsd  -0x28(%rbp),%xmm1
    3369:	66 0f 2f c2          	comisd %xmm2,%xmm0
    336d:	72 19                	jb     3388 <tcase_set_timeout+0xa8>
    336f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3373:	49 39 c4             	cmp    %rax,%r12
    3376:	74 10                	je     3388 <tcase_set_timeout+0xa8>
    3378:	80 38 00             	cmpb   $0x0,(%rax)
    337b:	0f 84 97 00 00 00    	je     3418 <tcase_set_timeout+0x138>
    3381:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3388:	66 0f 28 c1          	movapd %xmm1,%xmm0
    338c:	f2 0f 11 4d d8       	movsd  %xmm1,-0x28(%rbp)
    3391:	e8 5a f4 ff ff       	call   27f0 <floor@plt>
    3396:	f2 0f 10 4d d8       	movsd  -0x28(%rbp),%xmm1
    339b:	f2 0f 10 15 8d 52 00 	movsd  0x528d(%rip),%xmm2        # 8630 <_IO_stdin_used+0x630>
    33a2:	00 
    33a3:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    33a8:	f2 0f 10 25 68 52 00 	movsd  0x5268(%rip),%xmm4        # 8618 <_IO_stdin_used+0x618>
    33af:	00 
    33b0:	66 0f 28 c1          	movapd %xmm1,%xmm0
    33b4:	66 0f 28 d9          	movapd %xmm1,%xmm3
    33b8:	66 0f 54 c2          	andpd  %xmm2,%xmm0
    33bc:	66 0f 2e e0          	ucomisd %xmm0,%xmm4
    33c0:	48 89 43 08          	mov    %rax,0x8(%rbx)
    33c4:	76 33                	jbe    33f9 <tcase_set_timeout+0x119>
    33c6:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
    33cb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    33cf:	f2 0f 10 25 49 52 00 	movsd  0x5249(%rip),%xmm4        # 8620 <_IO_stdin_used+0x620>
    33d6:	00 
    33d7:	66 0f 55 d1          	andnpd %xmm1,%xmm2
    33db:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    33e0:	66 0f 28 d8          	movapd %xmm0,%xmm3
    33e4:	f2 0f c2 d9 06       	cmpnlesd %xmm1,%xmm3
    33e9:	66 0f 54 dc          	andpd  %xmm4,%xmm3
    33ed:	f2 0f 5c c3          	subsd  %xmm3,%xmm0
    33f1:	66 0f 28 d8          	movapd %xmm0,%xmm3
    33f5:	66 0f 56 da          	orpd   %xmm2,%xmm3
    33f9:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
    33fd:	f2 0f 59 0d 23 52 00 	mulsd  0x5223(%rip),%xmm1        # 8628 <_IO_stdin_used+0x628>
    3404:	00 
    3405:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
    340a:	48 89 43 10          	mov    %rax,0x10(%rbx)
    340e:	e9 fa fe ff ff       	jmp    330d <tcase_set_timeout+0x2d>
    3413:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3418:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    341c:	e9 67 ff ff ff       	jmp    3388 <tcase_set_timeout+0xa8>
    3421:	e8 8a f1 ff ff       	call   25b0 <__stack_chk_fail@plt>
    3426:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    342d:	00 00 00 

0000000000003430 <tcase_fn_start>:
    3430:	f3 0f 1e fa          	endbr64
    3434:	55                   	push   %rbp
    3435:	48 89 e5             	mov    %rsp,%rbp
    3438:	41 55                	push   %r13
    343a:	41 89 d5             	mov    %edx,%r13d
    343d:	41 54                	push   %r12
    343f:	49 89 f4             	mov    %rsi,%r12
    3442:	53                   	push   %rbx
    3443:	48 89 fb             	mov    %rdi,%rbx
    3446:	bf 02 00 00 00       	mov    $0x2,%edi
    344b:	48 83 ec 08          	sub    $0x8,%rsp
    344f:	e8 6c 0d 00 00       	call   41c0 <send_ctx_info>
    3454:	44 89 ee             	mov    %r13d,%esi
    3457:	4c 89 e7             	mov    %r12,%rdi
    345a:	e8 e1 0c 00 00       	call   4140 <send_loc_info>
    345f:	48 89 1d 0a 8c 00 00 	mov    %rbx,0x8c0a(%rip)        # c070 <current_test_name>
    3466:	48 83 c4 08          	add    $0x8,%rsp
    346a:	5b                   	pop    %rbx
    346b:	41 5c                	pop    %r12
    346d:	41 5d                	pop    %r13
    346f:	5d                   	pop    %rbp
    3470:	c3                   	ret
    3471:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    3478:	00 00 00 00 
    347c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003480 <tcase_name>:
    3480:	f3 0f 1e fa          	endbr64
    3484:	48 8b 05 e5 8b 00 00 	mov    0x8be5(%rip),%rax        # c070 <current_test_name>
    348b:	c3                   	ret
    348c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003490 <_mark_point>:
    3490:	f3 0f 1e fa          	endbr64
    3494:	e9 a7 0c 00 00       	jmp    4140 <send_loc_info>
    3499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000034a0 <_ck_assert_failed>:
    34a0:	f3 0f 1e fa          	endbr64
    34a4:	55                   	push   %rbp
    34a5:	48 89 e5             	mov    %rsp,%rbp
    34a8:	41 54                	push   %r12
    34aa:	53                   	push   %rbx
    34ab:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    34b2:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    34b7:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    34be:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    34c3:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    34ca:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
    34d1:	48 89 d3             	mov    %rdx,%rbx
    34d4:	49 89 cc             	mov    %rcx,%r12
    34d7:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
    34de:	84 c0                	test   %al,%al
    34e0:	74 23                	je     3505 <_ck_assert_failed+0x65>
    34e2:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    34e9:	0f 29 4d 80          	movaps %xmm1,-0x80(%rbp)
    34ed:	0f 29 55 90          	movaps %xmm2,-0x70(%rbp)
    34f1:	0f 29 5d a0          	movaps %xmm3,-0x60(%rbp)
    34f5:	0f 29 65 b0          	movaps %xmm4,-0x50(%rbp)
    34f9:	0f 29 6d c0          	movaps %xmm5,-0x40(%rbp)
    34fd:	0f 29 75 d0          	movaps %xmm6,-0x30(%rbp)
    3501:	0f 29 7d e0          	movaps %xmm7,-0x20(%rbp)
    3505:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    350c:	00 00 
    350e:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    3515:	31 c0                	xor    %eax,%eax
    3517:	e8 24 0c 00 00       	call   4140 <send_loc_info>
    351c:	4d 85 e4             	test   %r12,%r12
    351f:	74 55                	je     3576 <_ck_assert_failed+0xd6>
    3521:	48 8d 45 10          	lea    0x10(%rbp),%rax
    3525:	4d 89 e0             	mov    %r12,%r8
    3528:	b9 00 20 00 00       	mov    $0x2000,%ecx
    352d:	ba 02 00 00 00       	mov    $0x2,%edx
    3532:	48 8d 9d 30 df ff ff 	lea    -0x20d0(%rbp),%rbx
    3539:	48 89 85 18 df ff ff 	mov    %rax,-0x20e8(%rbp)
    3540:	be 00 20 00 00       	mov    $0x2000,%esi
    3545:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    354c:	4c 8d 8d 10 df ff ff 	lea    -0x20f0(%rbp),%r9
    3553:	48 89 df             	mov    %rbx,%rdi
    3556:	c7 85 10 df ff ff 20 	movl   $0x20,-0x20f0(%rbp)
    355d:	00 00 00 
    3560:	c7 85 14 df ff ff 30 	movl   $0x30,-0x20ec(%rbp)
    3567:	00 00 00 
    356a:	48 89 85 20 df ff ff 	mov    %rax,-0x20e0(%rbp)
    3571:	e8 9a f1 ff ff       	call   2710 <__vsnprintf_chk@plt>
    3576:	48 89 df             	mov    %rbx,%rdi
    3579:	e8 d2 0a 00 00       	call   4050 <send_failure_info>
    357e:	83 3d 9f 8a 00 00 01 	cmpl   $0x1,0x8a9f(%rip)        # c024 <_fstat>
    3585:	74 11                	je     3598 <_ck_assert_failed+0xf8>
    3587:	be 01 00 00 00       	mov    $0x1,%esi
    358c:	48 8d 3d ed 8a 00 00 	lea    0x8aed(%rip),%rdi        # c080 <error_jmp_buffer>
    3593:	e8 d8 f1 ff ff       	call   2770 <__longjmp_chk@plt>
    3598:	bf 01 00 00 00       	mov    $0x1,%edi
    359d:	e8 6e ef ff ff       	call   2510 <_exit@plt>
    35a2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    35a9:	00 00 00 00 
    35ad:	0f 1f 00             	nopl   (%rax)

00000000000035b0 <srunner_create>:
    35b0:	f3 0f 1e fa          	endbr64
    35b4:	55                   	push   %rbp
    35b5:	48 89 e5             	mov    %rsp,%rbp
    35b8:	41 54                	push   %r12
    35ba:	49 89 fc             	mov    %rdi,%r12
    35bd:	bf 40 00 00 00       	mov    $0x40,%edi
    35c2:	53                   	push   %rbx
    35c3:	e8 68 06 00 00       	call   3c30 <emalloc>
    35c8:	48 89 c3             	mov    %rax,%rbx
    35cb:	e8 e0 06 00 00       	call   3cb0 <check_list_create>
    35d0:	48 89 03             	mov    %rax,(%rbx)
    35d3:	4d 85 e4             	test   %r12,%r12
    35d6:	74 0b                	je     35e3 <srunner_create+0x33>
    35d8:	4c 89 e6             	mov    %r12,%rsi
    35db:	48 89 c7             	mov    %rax,%rdi
    35de:	e8 9d 07 00 00       	call   3d80 <check_list_add_end>
    35e3:	bf 0c 00 00 00       	mov    $0xc,%edi
    35e8:	e8 43 06 00 00       	call   3c30 <emalloc>
    35ed:	48 89 43 08          	mov    %rax,0x8(%rbx)
    35f1:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    35f8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    35ff:	e8 ac 06 00 00       	call   3cb0 <check_list_create>
    3604:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    360b:	00 
    360c:	48 89 43 10          	mov    %rax,0x10(%rbx)
    3610:	48 89 d8             	mov    %rbx,%rax
    3613:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    361a:	00 
    361b:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
    3622:	00 
    3623:	48 c7 43 30 00 00 00 	movq   $0x0,0x30(%rbx)
    362a:	00 
    362b:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%rbx)
    3632:	5b                   	pop    %rbx
    3633:	41 5c                	pop    %r12
    3635:	5d                   	pop    %rbp
    3636:	c3                   	ret
    3637:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    363e:	00 00 

0000000000003640 <srunner_add_suite>:
    3640:	f3 0f 1e fa          	endbr64
    3644:	48 85 f6             	test   %rsi,%rsi
    3647:	74 0f                	je     3658 <srunner_add_suite+0x18>
    3649:	48 8b 3f             	mov    (%rdi),%rdi
    364c:	e9 2f 07 00 00       	jmp    3d80 <check_list_add_end>
    3651:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3658:	c3                   	ret
    3659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003660 <srunner_free>:
    3660:	f3 0f 1e fa          	endbr64
    3664:	55                   	push   %rbp
    3665:	48 89 e5             	mov    %rsp,%rbp
    3668:	41 57                	push   %r15
    366a:	41 56                	push   %r14
    366c:	41 55                	push   %r13
    366e:	41 54                	push   %r12
    3670:	53                   	push   %rbx
    3671:	48 83 ec 18          	sub    $0x18,%rsp
    3675:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3679:	48 85 ff             	test   %rdi,%rdi
    367c:	0f 84 aa 01 00 00    	je     382c <srunner_free+0x1cc>
    3682:	48 89 fb             	mov    %rdi,%rbx
    3685:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    3689:	e8 d2 ed ff ff       	call   2460 <free@plt>
    368e:	4c 8b 33             	mov    (%rbx),%r14
    3691:	4c 89 f7             	mov    %r14,%rdi
    3694:	e8 87 07 00 00       	call   3e20 <check_list_front>
    3699:	4c 89 f7             	mov    %r14,%rdi
    369c:	e8 5f 07 00 00       	call   3e00 <check_list_at_end>
    36a1:	85 c0                	test   %eax,%eax
    36a3:	0f 85 08 01 00 00    	jne    37b1 <srunner_free+0x151>
    36a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    36b0:	4c 89 f7             	mov    %r14,%rdi
    36b3:	e8 c8 07 00 00       	call   3e80 <check_list_val>
    36b8:	49 89 c5             	mov    %rax,%r13
    36bb:	48 85 c0             	test   %rax,%rax
    36be:	0f 84 d5 00 00 00    	je     3799 <srunner_free+0x139>
    36c4:	4c 8b 60 08          	mov    0x8(%rax),%r12
    36c8:	4c 89 e7             	mov    %r12,%rdi
    36cb:	e8 50 07 00 00       	call   3e20 <check_list_front>
    36d0:	e9 a3 00 00 00       	jmp    3778 <srunner_free+0x118>
    36d5:	0f 1f 00             	nopl   (%rax)
    36d8:	4c 89 e7             	mov    %r12,%rdi
    36db:	e8 a0 07 00 00       	call   3e80 <check_list_val>
    36e0:	48 8b 1d d9 88 00 00 	mov    0x88d9(%rip),%rbx        # bfc0 <free@GLIBC_2.2.5>
    36e7:	48 8b 78 18          	mov    0x18(%rax),%rdi
    36eb:	49 89 c7             	mov    %rax,%r15
    36ee:	48 89 de             	mov    %rbx,%rsi
    36f1:	e8 da 07 00 00       	call   3ed0 <check_list_apply>
    36f6:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    36fa:	48 89 de             	mov    %rbx,%rsi
    36fd:	e8 ce 07 00 00       	call   3ed0 <check_list_apply>
    3702:	49 8b 7f 30          	mov    0x30(%r15),%rdi
    3706:	48 89 de             	mov    %rbx,%rsi
    3709:	e8 c2 07 00 00       	call   3ed0 <check_list_apply>
    370e:	49 8b 7f 28          	mov    0x28(%r15),%rdi
    3712:	48 89 de             	mov    %rbx,%rsi
    3715:	e8 b6 07 00 00       	call   3ed0 <check_list_apply>
    371a:	49 8b 7f 38          	mov    0x38(%r15),%rdi
    371e:	48 89 de             	mov    %rbx,%rsi
    3721:	e8 aa 07 00 00       	call   3ed0 <check_list_apply>
    3726:	49 8b 7f 40          	mov    0x40(%r15),%rdi
    372a:	48 89 de             	mov    %rbx,%rsi
    372d:	e8 9e 07 00 00       	call   3ed0 <check_list_apply>
    3732:	49 8b 7f 18          	mov    0x18(%r15),%rdi
    3736:	e8 05 07 00 00       	call   3e40 <check_list_free>
    373b:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    373f:	e8 fc 06 00 00       	call   3e40 <check_list_free>
    3744:	49 8b 7f 30          	mov    0x30(%r15),%rdi
    3748:	e8 f3 06 00 00       	call   3e40 <check_list_free>
    374d:	49 8b 7f 28          	mov    0x28(%r15),%rdi
    3751:	e8 ea 06 00 00       	call   3e40 <check_list_free>
    3756:	49 8b 7f 38          	mov    0x38(%r15),%rdi
    375a:	e8 e1 06 00 00       	call   3e40 <check_list_free>
    375f:	49 8b 7f 40          	mov    0x40(%r15),%rdi
    3763:	e8 d8 06 00 00       	call   3e40 <check_list_free>
    3768:	4c 89 ff             	mov    %r15,%rdi
    376b:	e8 f0 ec ff ff       	call   2460 <free@plt>
    3770:	4c 89 e7             	mov    %r12,%rdi
    3773:	e8 38 07 00 00       	call   3eb0 <check_list_advance>
    3778:	4c 89 e7             	mov    %r12,%rdi
    377b:	e8 80 06 00 00       	call   3e00 <check_list_at_end>
    3780:	85 c0                	test   %eax,%eax
    3782:	0f 84 50 ff ff ff    	je     36d8 <srunner_free+0x78>
    3788:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    378c:	e8 af 06 00 00       	call   3e40 <check_list_free>
    3791:	4c 89 ef             	mov    %r13,%rdi
    3794:	e8 c7 ec ff ff       	call   2460 <free@plt>
    3799:	4c 89 f7             	mov    %r14,%rdi
    379c:	e8 0f 07 00 00       	call   3eb0 <check_list_advance>
    37a1:	4c 89 f7             	mov    %r14,%rdi
    37a4:	e8 57 06 00 00       	call   3e00 <check_list_at_end>
    37a9:	85 c0                	test   %eax,%eax
    37ab:	0f 84 ff fe ff ff    	je     36b0 <srunner_free+0x50>
    37b1:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    37b5:	48 8b 3b             	mov    (%rbx),%rdi
    37b8:	e8 83 06 00 00       	call   3e40 <check_list_free>
    37bd:	4c 8b 63 10          	mov    0x10(%rbx),%r12
    37c1:	4c 89 e7             	mov    %r12,%rdi
    37c4:	e8 57 06 00 00       	call   3e20 <check_list_front>
    37c9:	eb 32                	jmp    37fd <srunner_free+0x19d>
    37cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    37d0:	4c 89 e7             	mov    %r12,%rdi
    37d3:	e8 a8 06 00 00       	call   3e80 <check_list_val>
    37d8:	48 8b 78 08          	mov    0x8(%rax),%rdi
    37dc:	48 89 c3             	mov    %rax,%rbx
    37df:	e8 7c ec ff ff       	call   2460 <free@plt>
    37e4:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    37e8:	e8 73 ec ff ff       	call   2460 <free@plt>
    37ed:	48 89 df             	mov    %rbx,%rdi
    37f0:	e8 6b ec ff ff       	call   2460 <free@plt>
    37f5:	4c 89 e7             	mov    %r12,%rdi
    37f8:	e8 b3 06 00 00       	call   3eb0 <check_list_advance>
    37fd:	4c 89 e7             	mov    %r12,%rdi
    3800:	e8 fb 05 00 00       	call   3e00 <check_list_at_end>
    3805:	85 c0                	test   %eax,%eax
    3807:	74 c7                	je     37d0 <srunner_free+0x170>
    3809:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    380d:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    3811:	e8 2a 06 00 00       	call   3e40 <check_list_free>
    3816:	48 83 c4 18          	add    $0x18,%rsp
    381a:	48 89 df             	mov    %rbx,%rdi
    381d:	5b                   	pop    %rbx
    381e:	41 5c                	pop    %r12
    3820:	41 5d                	pop    %r13
    3822:	41 5e                	pop    %r14
    3824:	41 5f                	pop    %r15
    3826:	5d                   	pop    %rbp
    3827:	e9 34 ec ff ff       	jmp    2460 <free@plt>
    382c:	48 83 c4 18          	add    $0x18,%rsp
    3830:	5b                   	pop    %rbx
    3831:	41 5c                	pop    %r12
    3833:	41 5d                	pop    %r13
    3835:	41 5e                	pop    %r14
    3837:	41 5f                	pop    %r15
    3839:	5d                   	pop    %rbp
    383a:	c3                   	ret
    383b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003840 <srunner_ntests_failed>:
    3840:	f3 0f 1e fa          	endbr64
    3844:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    3848:	8b 42 08             	mov    0x8(%rdx),%eax
    384b:	03 42 04             	add    0x4(%rdx),%eax
    384e:	c3                   	ret
    384f:	90                   	nop

0000000000003850 <srunner_ntests_run>:
    3850:	f3 0f 1e fa          	endbr64
    3854:	48 8b 47 08          	mov    0x8(%rdi),%rax
    3858:	8b 00                	mov    (%rax),%eax
    385a:	c3                   	ret
    385b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003860 <srunner_failures>:
    3860:	f3 0f 1e fa          	endbr64
    3864:	55                   	push   %rbp
    3865:	48 89 e5             	mov    %rsp,%rbp
    3868:	41 55                	push   %r13
    386a:	41 54                	push   %r12
    386c:	45 31 e4             	xor    %r12d,%r12d
    386f:	53                   	push   %rbx
    3870:	48 89 fb             	mov    %rdi,%rbx
    3873:	48 83 ec 08          	sub    $0x8,%rsp
    3877:	48 8b 47 08          	mov    0x8(%rdi),%rax
    387b:	8b 78 08             	mov    0x8(%rax),%edi
    387e:	03 78 04             	add    0x4(%rax),%edi
    3881:	48 63 ff             	movslq %edi,%rdi
    3884:	48 c1 e7 03          	shl    $0x3,%rdi
    3888:	e8 a3 03 00 00       	call   3c30 <emalloc>
    388d:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    3891:	49 89 c5             	mov    %rax,%r13
    3894:	48 89 df             	mov    %rbx,%rdi
    3897:	e8 84 05 00 00       	call   3e20 <check_list_front>
    389c:	eb 23                	jmp    38c1 <srunner_failures+0x61>
    389e:	66 90                	xchg   %ax,%ax
    38a0:	48 89 df             	mov    %rbx,%rdi
    38a3:	e8 d8 05 00 00       	call   3e80 <check_list_val>
    38a8:	83 38 01             	cmpl   $0x1,(%rax)
    38ab:	74 0c                	je     38b9 <srunner_failures+0x59>
    38ad:	49 63 d4             	movslq %r12d,%rdx
    38b0:	41 83 c4 01          	add    $0x1,%r12d
    38b4:	49 89 44 d5 00       	mov    %rax,0x0(%r13,%rdx,8)
    38b9:	48 89 df             	mov    %rbx,%rdi
    38bc:	e8 ef 05 00 00       	call   3eb0 <check_list_advance>
    38c1:	48 89 df             	mov    %rbx,%rdi
    38c4:	e8 37 05 00 00       	call   3e00 <check_list_at_end>
    38c9:	85 c0                	test   %eax,%eax
    38cb:	74 d3                	je     38a0 <srunner_failures+0x40>
    38cd:	48 83 c4 08          	add    $0x8,%rsp
    38d1:	4c 89 e8             	mov    %r13,%rax
    38d4:	5b                   	pop    %rbx
    38d5:	41 5c                	pop    %r12
    38d7:	41 5d                	pop    %r13
    38d9:	5d                   	pop    %rbp
    38da:	c3                   	ret
    38db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000038e0 <srunner_results>:
    38e0:	f3 0f 1e fa          	endbr64
    38e4:	55                   	push   %rbp
    38e5:	48 89 e5             	mov    %rsp,%rbp
    38e8:	41 55                	push   %r13
    38ea:	41 54                	push   %r12
    38ec:	53                   	push   %rbx
    38ed:	48 89 fb             	mov    %rdi,%rbx
    38f0:	48 83 ec 08          	sub    $0x8,%rsp
    38f4:	48 8b 47 08          	mov    0x8(%rdi),%rax
    38f8:	48 63 38             	movslq (%rax),%rdi
    38fb:	48 c1 e7 03          	shl    $0x3,%rdi
    38ff:	e8 2c 03 00 00       	call   3c30 <emalloc>
    3904:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    3908:	49 89 c5             	mov    %rax,%r13
    390b:	48 89 df             	mov    %rbx,%rdi
    390e:	4d 89 ec             	mov    %r13,%r12
    3911:	e8 0a 05 00 00       	call   3e20 <check_list_front>
    3916:	eb 21                	jmp    3939 <srunner_results+0x59>
    3918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    391f:	00 
    3920:	48 89 df             	mov    %rbx,%rdi
    3923:	49 83 c4 08          	add    $0x8,%r12
    3927:	e8 54 05 00 00       	call   3e80 <check_list_val>
    392c:	48 89 df             	mov    %rbx,%rdi
    392f:	49 89 44 24 f8       	mov    %rax,-0x8(%r12)
    3934:	e8 77 05 00 00       	call   3eb0 <check_list_advance>
    3939:	48 89 df             	mov    %rbx,%rdi
    393c:	e8 bf 04 00 00       	call   3e00 <check_list_at_end>
    3941:	85 c0                	test   %eax,%eax
    3943:	74 db                	je     3920 <srunner_results+0x40>
    3945:	48 83 c4 08          	add    $0x8,%rsp
    3949:	4c 89 e8             	mov    %r13,%rax
    394c:	5b                   	pop    %rbx
    394d:	41 5c                	pop    %r12
    394f:	41 5d                	pop    %r13
    3951:	5d                   	pop    %rbp
    3952:	c3                   	ret
    3953:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    395a:	00 00 00 00 
    395e:	66 90                	xchg   %ax,%ax

0000000000003960 <tr_create>:
    3960:	f3 0f 1e fa          	endbr64
    3964:	55                   	push   %rbp
    3965:	bf 38 00 00 00       	mov    $0x38,%edi
    396a:	48 89 e5             	mov    %rsp,%rbp
    396d:	e8 be 02 00 00       	call   3c30 <emalloc>
    3972:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3976:	c7 40 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rax)
    397d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3984:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    398b:	00 
    398c:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3993:	00 
    3994:	c7 40 18 ff ff ff ff 	movl   $0xffffffff,0x18(%rax)
    399b:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    399f:	5d                   	pop    %rbp
    39a0:	c3                   	ret
    39a1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    39a8:	00 00 00 00 
    39ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000039b0 <tr_free>:
    39b0:	f3 0f 1e fa          	endbr64
    39b4:	55                   	push   %rbp
    39b5:	48 89 e5             	mov    %rsp,%rbp
    39b8:	53                   	push   %rbx
    39b9:	48 89 fb             	mov    %rdi,%rbx
    39bc:	48 83 ec 08          	sub    $0x8,%rsp
    39c0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    39c4:	e8 97 ea ff ff       	call   2460 <free@plt>
    39c9:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    39cd:	e8 8e ea ff ff       	call   2460 <free@plt>
    39d2:	48 89 df             	mov    %rbx,%rdi
    39d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    39d9:	c9                   	leave
    39da:	e9 81 ea ff ff       	jmp    2460 <free@plt>
    39df:	90                   	nop

00000000000039e0 <tr_msg>:
    39e0:	f3 0f 1e fa          	endbr64
    39e4:	48 8b 47 30          	mov    0x30(%rdi),%rax
    39e8:	c3                   	ret
    39e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000039f0 <tr_lno>:
    39f0:	f3 0f 1e fa          	endbr64
    39f4:	8b 47 10             	mov    0x10(%rdi),%eax
    39f7:	c3                   	ret
    39f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    39ff:	00 

0000000000003a00 <tr_lfile>:
    3a00:	f3 0f 1e fa          	endbr64
    3a04:	48 8b 47 08          	mov    0x8(%rdi),%rax
    3a08:	c3                   	ret
    3a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003a10 <tr_rtype>:
    3a10:	f3 0f 1e fa          	endbr64
    3a14:	8b 07                	mov    (%rdi),%eax
    3a16:	c3                   	ret
    3a17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3a1e:	00 00 

0000000000003a20 <tr_ctx>:
    3a20:	f3 0f 1e fa          	endbr64
    3a24:	8b 47 04             	mov    0x4(%rdi),%eax
    3a27:	c3                   	ret
    3a28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3a2f:	00 

0000000000003a30 <tr_tcname>:
    3a30:	f3 0f 1e fa          	endbr64
    3a34:	48 8b 47 20          	mov    0x20(%rdi),%rax
    3a38:	c3                   	ret
    3a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003a40 <set_fork_status>:
    3a40:	f3 0f 1e fa          	endbr64
    3a44:	83 ff 02             	cmp    $0x2,%edi
    3a47:	77 07                	ja     3a50 <set_fork_status+0x10>
    3a49:	89 3d d5 85 00 00    	mov    %edi,0x85d5(%rip)        # c024 <_fstat>
    3a4f:	c3                   	ret
    3a50:	55                   	push   %rbp
    3a51:	ba 48 02 00 00       	mov    $0x248,%edx
    3a56:	48 8d 35 f7 46 00 00 	lea    0x46f7(%rip),%rsi        # 8154 <_IO_stdin_used+0x154>
    3a5d:	31 c0                	xor    %eax,%eax
    3a5f:	48 8d 3d 00 47 00 00 	lea    0x4700(%rip),%rdi        # 8166 <_IO_stdin_used+0x166>
    3a66:	48 89 e5             	mov    %rsp,%rbp
    3a69:	e8 82 00 00 00       	call   3af0 <eprintf>
    3a6e:	66 90                	xchg   %ax,%ax

0000000000003a70 <cur_fork_status>:
    3a70:	f3 0f 1e fa          	endbr64
    3a74:	8b 05 aa 85 00 00    	mov    0x85aa(%rip),%eax        # c024 <_fstat>
    3a7a:	c3                   	ret
    3a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003a80 <check_get_clockid>:
    3a80:	f3 0f 1e fa          	endbr64
    3a84:	55                   	push   %rbp
    3a85:	31 f6                	xor    %esi,%esi
    3a87:	bf 01 00 00 00       	mov    $0x1,%edi
    3a8c:	48 89 e5             	mov    %rsp,%rbp
    3a8f:	48 83 ec 10          	sub    $0x10,%rsp
    3a93:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3a9a:	00 00 
    3a9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3aa0:	31 c0                	xor    %eax,%eax
    3aa2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    3aa6:	e8 25 eb ff ff       	call   25d0 <timer_create@plt>
    3aab:	89 c2                	mov    %eax,%edx
    3aad:	31 c0                	xor    %eax,%eax
    3aaf:	85 d2                	test   %edx,%edx
    3ab1:	74 1d                	je     3ad0 <check_get_clockid+0x50>
    3ab3:	89 05 67 85 00 00    	mov    %eax,0x8567(%rip)        # c020 <clockid.0>
    3ab9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3abd:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    3ac4:	00 00 
    3ac6:	75 18                	jne    3ae0 <check_get_clockid+0x60>
    3ac8:	c9                   	leave
    3ac9:	c3                   	ret
    3aca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3ad0:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    3ad4:	e8 b7 eb ff ff       	call   2690 <timer_delete@plt>
    3ad9:	b8 01 00 00 00       	mov    $0x1,%eax
    3ade:	eb d3                	jmp    3ab3 <check_get_clockid+0x33>
    3ae0:	e8 cb ea ff ff       	call   25b0 <__stack_chk_fail@plt>
    3ae5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3aec:	00 00 00 
    3aef:	90                   	nop

0000000000003af0 <eprintf>:
    3af0:	f3 0f 1e fa          	endbr64
    3af4:	55                   	push   %rbp
    3af5:	48 89 e5             	mov    %rsp,%rbp
    3af8:	41 55                	push   %r13
    3afa:	41 89 d5             	mov    %edx,%r13d
    3afd:	41 54                	push   %r12
    3aff:	49 89 f4             	mov    %rsi,%r12
    3b02:	53                   	push   %rbx
    3b03:	48 89 fb             	mov    %rdi,%rbx
    3b06:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    3b0d:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
    3b14:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
    3b1b:	4c 89 8d 58 ff ff ff 	mov    %r9,-0xa8(%rbp)
    3b22:	84 c0                	test   %al,%al
    3b24:	74 26                	je     3b4c <eprintf+0x5c>
    3b26:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    3b2d:	0f 29 8d 70 ff ff ff 	movaps %xmm1,-0x90(%rbp)
    3b34:	0f 29 55 80          	movaps %xmm2,-0x80(%rbp)
    3b38:	0f 29 5d 90          	movaps %xmm3,-0x70(%rbp)
    3b3c:	0f 29 65 a0          	movaps %xmm4,-0x60(%rbp)
    3b40:	0f 29 6d b0          	movaps %xmm5,-0x50(%rbp)
    3b44:	0f 29 75 c0          	movaps %xmm6,-0x40(%rbp)
    3b48:	0f 29 7d d0          	movaps %xmm7,-0x30(%rbp)
    3b4c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3b53:	00 00 
    3b55:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    3b5c:	31 c0                	xor    %eax,%eax
    3b5e:	48 8b 3d fb 84 00 00 	mov    0x84fb(%rip),%rdi        # c060 <stderr@GLIBC_2.2.5>
    3b65:	e8 76 eb ff ff       	call   26e0 <fflush@plt>
    3b6a:	45 89 e8             	mov    %r13d,%r8d
    3b6d:	4c 89 e1             	mov    %r12,%rcx
    3b70:	be 02 00 00 00       	mov    $0x2,%esi
    3b75:	48 8b 3d e4 84 00 00 	mov    0x84e4(%rip),%rdi        # c060 <stderr@GLIBC_2.2.5>
    3b7c:	48 8d 15 01 46 00 00 	lea    0x4601(%rip),%rdx        # 8184 <_IO_stdin_used+0x184>
    3b83:	31 c0                	xor    %eax,%eax
    3b85:	e8 a6 ec ff ff       	call   2830 <__fprintf_chk@plt>
    3b8a:	48 8d 45 10          	lea    0x10(%rbp),%rax
    3b8e:	48 89 da             	mov    %rbx,%rdx
    3b91:	be 02 00 00 00       	mov    $0x2,%esi
    3b96:	48 8b 3d c3 84 00 00 	mov    0x84c3(%rip),%rdi        # c060 <stderr@GLIBC_2.2.5>
    3b9d:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    3ba4:	48 8d 8d 10 ff ff ff 	lea    -0xf0(%rbp),%rcx
    3bab:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    3bb2:	c7 85 10 ff ff ff 18 	movl   $0x18,-0xf0(%rbp)
    3bb9:	00 00 00 
    3bbc:	c7 85 14 ff ff ff 30 	movl   $0x30,-0xec(%rbp)
    3bc3:	00 00 00 
    3bc6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    3bcd:	e8 ee e8 ff ff       	call   24c0 <__vfprintf_chk@plt>
    3bd2:	80 3b 00             	cmpb   $0x0,(%rbx)
    3bd5:	74 0f                	je     3be6 <eprintf+0xf6>
    3bd7:	48 89 df             	mov    %rbx,%rdi
    3bda:	e8 b1 e9 ff ff       	call   2590 <strlen@plt>
    3bdf:	80 7c 03 ff 3a       	cmpb   $0x3a,-0x1(%rbx,%rax,1)
    3be4:	74 1b                	je     3c01 <eprintf+0x111>
    3be6:	48 8b 35 73 84 00 00 	mov    0x8473(%rip),%rsi        # c060 <stderr@GLIBC_2.2.5>
    3bed:	bf 0a 00 00 00       	mov    $0xa,%edi
    3bf2:	e8 69 ea ff ff       	call   2660 <fputc@plt>
    3bf7:	bf 02 00 00 00       	mov    $0x2,%edi
    3bfc:	e8 0f ec ff ff       	call   2810 <exit@plt>
    3c01:	e8 da e8 ff ff       	call   24e0 <__errno_location@plt>
    3c06:	8b 38                	mov    (%rax),%edi
    3c08:	e8 53 ec ff ff       	call   2860 <strerror@plt>
    3c0d:	48 8b 3d 4c 84 00 00 	mov    0x844c(%rip),%rdi        # c060 <stderr@GLIBC_2.2.5>
    3c14:	be 02 00 00 00       	mov    $0x2,%esi
    3c19:	48 8d 15 6c 45 00 00 	lea    0x456c(%rip),%rdx        # 818c <_IO_stdin_used+0x18c>
    3c20:	48 89 c1             	mov    %rax,%rcx
    3c23:	31 c0                	xor    %eax,%eax
    3c25:	e8 06 ec ff ff       	call   2830 <__fprintf_chk@plt>
    3c2a:	eb ba                	jmp    3be6 <eprintf+0xf6>
    3c2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003c30 <emalloc>:
    3c30:	f3 0f 1e fa          	endbr64
    3c34:	55                   	push   %rbp
    3c35:	48 89 e5             	mov    %rsp,%rbp
    3c38:	53                   	push   %rbx
    3c39:	48 89 fb             	mov    %rdi,%rbx
    3c3c:	48 83 ec 08          	sub    $0x8,%rsp
    3c40:	e8 8b ea ff ff       	call   26d0 <malloc@plt>
    3c45:	48 85 c0             	test   %rax,%rax
    3c48:	74 06                	je     3c50 <emalloc+0x20>
    3c4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3c4e:	c9                   	leave
    3c4f:	c3                   	ret
    3c50:	48 89 d9             	mov    %rbx,%rcx
    3c53:	ba 3e 00 00 00       	mov    $0x3e,%edx
    3c58:	48 8d 35 31 45 00 00 	lea    0x4531(%rip),%rsi        # 8190 <_IO_stdin_used+0x190>
    3c5f:	48 8d 3d 42 45 00 00 	lea    0x4542(%rip),%rdi        # 81a8 <_IO_stdin_used+0x1a8>
    3c66:	e8 85 fe ff ff       	call   3af0 <eprintf>
    3c6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003c70 <erealloc>:
    3c70:	f3 0f 1e fa          	endbr64
    3c74:	55                   	push   %rbp
    3c75:	48 89 e5             	mov    %rsp,%rbp
    3c78:	53                   	push   %rbx
    3c79:	48 89 f3             	mov    %rsi,%rbx
    3c7c:	48 83 ec 08          	sub    $0x8,%rsp
    3c80:	e8 ab ea ff ff       	call   2730 <realloc@plt>
    3c85:	48 85 c0             	test   %rax,%rax
    3c88:	74 06                	je     3c90 <erealloc+0x20>
    3c8a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3c8e:	c9                   	leave
    3c8f:	c3                   	ret
    3c90:	48 89 d9             	mov    %rbx,%rcx
    3c93:	ba 48 00 00 00       	mov    $0x48,%edx
    3c98:	48 8d 35 f1 44 00 00 	lea    0x44f1(%rip),%rsi        # 8190 <_IO_stdin_used+0x190>
    3c9f:	48 8d 3d 1e 45 00 00 	lea    0x451e(%rip),%rdi        # 81c4 <_IO_stdin_used+0x1c4>
    3ca6:	e8 45 fe ff ff       	call   3af0 <eprintf>
    3cab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003cb0 <check_list_create>:
    3cb0:	f3 0f 1e fa          	endbr64
    3cb4:	55                   	push   %rbp
    3cb5:	bf 18 00 00 00       	mov    $0x18,%edi
    3cba:	48 89 e5             	mov    %rsp,%rbp
    3cbd:	53                   	push   %rbx
    3cbe:	48 83 ec 08          	sub    $0x8,%rsp
    3cc2:	e8 69 ff ff ff       	call   3c30 <emalloc>
    3cc7:	bf 08 00 00 00       	mov    $0x8,%edi
    3ccc:	48 89 c3             	mov    %rax,%rbx
    3ccf:	48 8b 05 62 49 00 00 	mov    0x4962(%rip),%rax        # 8638 <_IO_stdin_used+0x638>
    3cd6:	48 89 03             	mov    %rax,(%rbx)
    3cd9:	e8 52 ff ff ff       	call   3c30 <emalloc>
    3cde:	48 c7 43 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rbx)
    3ce5:	ff 
    3ce6:	48 89 43 10          	mov    %rax,0x10(%rbx)
    3cea:	48 89 d8             	mov    %rbx,%rax
    3ced:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3cf1:	c9                   	leave
    3cf2:	c3                   	ret
    3cf3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    3cfa:	00 00 00 00 
    3cfe:	66 90                	xchg   %ax,%ax

0000000000003d00 <check_list_add_front>:
    3d00:	f3 0f 1e fa          	endbr64
    3d04:	48 85 ff             	test   %rdi,%rdi
    3d07:	74 67                	je     3d70 <check_list_add_front+0x70>
    3d09:	55                   	push   %rbp
    3d0a:	48 89 e5             	mov    %rsp,%rbp
    3d0d:	41 54                	push   %r12
    3d0f:	49 89 f4             	mov    %rsi,%r12
    3d12:	53                   	push   %rbx
    3d13:	8b 17                	mov    (%rdi),%edx
    3d15:	48 89 fb             	mov    %rdi,%rbx
    3d18:	8b 47 04             	mov    0x4(%rdi),%eax
    3d1b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    3d1f:	39 c2                	cmp    %eax,%edx
    3d21:	73 2d                	jae    3d50 <check_list_add_front+0x50>
    3d23:	48 8d 47 08          	lea    0x8(%rdi),%rax
    3d27:	48 89 fe             	mov    %rdi,%rsi
    3d2a:	48 c1 e2 03          	shl    $0x3,%rdx
    3d2e:	48 89 c7             	mov    %rax,%rdi
    3d31:	e8 5a ea ff ff       	call   2790 <memmove@plt>
    3d36:	48 8b 43 10          	mov    0x10(%rbx),%rax
    3d3a:	83 43 0c 01          	addl   $0x1,0xc(%rbx)
    3d3e:	83 03 01             	addl   $0x1,(%rbx)
    3d41:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
    3d48:	4c 89 20             	mov    %r12,(%rax)
    3d4b:	5b                   	pop    %rbx
    3d4c:	41 5c                	pop    %r12
    3d4e:	5d                   	pop    %rbp
    3d4f:	c3                   	ret
    3d50:	01 c0                	add    %eax,%eax
    3d52:	89 43 04             	mov    %eax,0x4(%rbx)
    3d55:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
    3d5c:	00 
    3d5d:	e8 0e ff ff ff       	call   3c70 <erealloc>
    3d62:	8b 13                	mov    (%rbx),%edx
    3d64:	48 89 43 10          	mov    %rax,0x10(%rbx)
    3d68:	48 89 c7             	mov    %rax,%rdi
    3d6b:	eb b6                	jmp    3d23 <check_list_add_front+0x23>
    3d6d:	0f 1f 00             	nopl   (%rax)
    3d70:	c3                   	ret
    3d71:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    3d78:	00 00 00 00 
    3d7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003d80 <check_list_add_end>:
    3d80:	f3 0f 1e fa          	endbr64
    3d84:	48 85 ff             	test   %rdi,%rdi
    3d87:	74 67                	je     3df0 <check_list_add_end+0x70>
    3d89:	55                   	push   %rbp
    3d8a:	48 89 e5             	mov    %rsp,%rbp
    3d8d:	41 54                	push   %r12
    3d8f:	49 89 f4             	mov    %rsi,%r12
    3d92:	53                   	push   %rbx
    3d93:	8b 0f                	mov    (%rdi),%ecx
    3d95:	48 89 fb             	mov    %rdi,%rbx
    3d98:	8b 57 04             	mov    0x4(%rdi),%edx
    3d9b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    3d9f:	39 d1                	cmp    %edx,%ecx
    3da1:	73 2d                	jae    3dd0 <check_list_add_end+0x50>
    3da3:	8b 43 0c             	mov    0xc(%rbx),%eax
    3da6:	83 c1 01             	add    $0x1,%ecx
    3da9:	89 0b                	mov    %ecx,(%rbx)
    3dab:	8d 50 01             	lea    0x1(%rax),%edx
    3dae:	66 0f 6e ca          	movd   %edx,%xmm1
    3db2:	48 63 d2             	movslq %edx,%rdx
    3db5:	66 0f 70 c1 e0       	pshufd $0xe0,%xmm1,%xmm0
    3dba:	66 0f d6 43 08       	movq   %xmm0,0x8(%rbx)
    3dbf:	4c 89 24 d7          	mov    %r12,(%rdi,%rdx,8)
    3dc3:	5b                   	pop    %rbx
    3dc4:	41 5c                	pop    %r12
    3dc6:	5d                   	pop    %rbp
    3dc7:	c3                   	ret
    3dc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3dcf:	00 
    3dd0:	01 d2                	add    %edx,%edx
    3dd2:	89 53 04             	mov    %edx,0x4(%rbx)
    3dd5:	48 8d 34 d5 00 00 00 	lea    0x0(,%rdx,8),%rsi
    3ddc:	00 
    3ddd:	e8 8e fe ff ff       	call   3c70 <erealloc>
    3de2:	8b 0b                	mov    (%rbx),%ecx
    3de4:	48 89 43 10          	mov    %rax,0x10(%rbx)
    3de8:	48 89 c7             	mov    %rax,%rdi
    3deb:	eb b6                	jmp    3da3 <check_list_add_end+0x23>
    3ded:	0f 1f 00             	nopl   (%rax)
    3df0:	c3                   	ret
    3df1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    3df8:	00 00 00 00 
    3dfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003e00 <check_list_at_end>:
    3e00:	f3 0f 1e fa          	endbr64
    3e04:	8b 57 08             	mov    0x8(%rdi),%edx
    3e07:	b8 01 00 00 00       	mov    $0x1,%eax
    3e0c:	83 fa ff             	cmp    $0xffffffff,%edx
    3e0f:	74 08                	je     3e19 <check_list_at_end+0x19>
    3e11:	31 c0                	xor    %eax,%eax
    3e13:	3b 57 0c             	cmp    0xc(%rdi),%edx
    3e16:	0f 9f c0             	setg   %al
    3e19:	c3                   	ret
    3e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003e20 <check_list_front>:
    3e20:	f3 0f 1e fa          	endbr64
    3e24:	83 7f 08 ff          	cmpl   $0xffffffff,0x8(%rdi)
    3e28:	74 07                	je     3e31 <check_list_front+0x11>
    3e2a:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
    3e31:	c3                   	ret
    3e32:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    3e39:	00 00 00 00 
    3e3d:	0f 1f 00             	nopl   (%rax)

0000000000003e40 <check_list_free>:
    3e40:	f3 0f 1e fa          	endbr64
    3e44:	48 85 ff             	test   %rdi,%rdi
    3e47:	74 27                	je     3e70 <check_list_free+0x30>
    3e49:	55                   	push   %rbp
    3e4a:	48 89 e5             	mov    %rsp,%rbp
    3e4d:	53                   	push   %rbx
    3e4e:	48 89 fb             	mov    %rdi,%rbx
    3e51:	48 83 ec 08          	sub    $0x8,%rsp
    3e55:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    3e59:	e8 02 e6 ff ff       	call   2460 <free@plt>
    3e5e:	48 89 df             	mov    %rbx,%rdi
    3e61:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3e65:	c9                   	leave
    3e66:	e9 f5 e5 ff ff       	jmp    2460 <free@plt>
    3e6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3e70:	c3                   	ret
    3e71:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    3e78:	00 00 00 00 
    3e7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003e80 <check_list_val>:
    3e80:	f3 0f 1e fa          	endbr64
    3e84:	48 85 ff             	test   %rdi,%rdi
    3e87:	74 17                	je     3ea0 <check_list_val+0x20>
    3e89:	48 63 47 08          	movslq 0x8(%rdi),%rax
    3e8d:	83 f8 ff             	cmp    $0xffffffff,%eax
    3e90:	74 0e                	je     3ea0 <check_list_val+0x20>
    3e92:	3b 47 0c             	cmp    0xc(%rdi),%eax
    3e95:	7f 09                	jg     3ea0 <check_list_val+0x20>
    3e97:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    3e9b:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    3e9f:	c3                   	ret
    3ea0:	31 c0                	xor    %eax,%eax
    3ea2:	c3                   	ret
    3ea3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    3eaa:	00 00 00 00 
    3eae:	66 90                	xchg   %ax,%ax

0000000000003eb0 <check_list_advance>:
    3eb0:	f3 0f 1e fa          	endbr64
    3eb4:	48 85 ff             	test   %rdi,%rdi
    3eb7:	74 13                	je     3ecc <check_list_advance+0x1c>
    3eb9:	8b 47 08             	mov    0x8(%rdi),%eax
    3ebc:	83 f8 ff             	cmp    $0xffffffff,%eax
    3ebf:	74 0b                	je     3ecc <check_list_advance+0x1c>
    3ec1:	3b 47 0c             	cmp    0xc(%rdi),%eax
    3ec4:	7f 06                	jg     3ecc <check_list_advance+0x1c>
    3ec6:	83 c0 01             	add    $0x1,%eax
    3ec9:	89 47 08             	mov    %eax,0x8(%rdi)
    3ecc:	c3                   	ret
    3ecd:	0f 1f 00             	nopl   (%rax)

0000000000003ed0 <check_list_apply>:
    3ed0:	f3 0f 1e fa          	endbr64
    3ed4:	48 85 ff             	test   %rdi,%rdi
    3ed7:	74 57                	je     3f30 <check_list_apply+0x60>
    3ed9:	55                   	push   %rbp
    3eda:	48 89 e5             	mov    %rsp,%rbp
    3edd:	41 54                	push   %r12
    3edf:	49 89 f4             	mov    %rsi,%r12
    3ee2:	53                   	push   %rbx
    3ee3:	48 85 f6             	test   %rsi,%rsi
    3ee6:	74 40                	je     3f28 <check_list_apply+0x58>
    3ee8:	83 7f 08 ff          	cmpl   $0xffffffff,0x8(%rdi)
    3eec:	48 89 fb             	mov    %rdi,%rbx
    3eef:	74 37                	je     3f28 <check_list_apply+0x58>
    3ef1:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
    3ef8:	8b 57 0c             	mov    0xc(%rdi),%edx
    3efb:	31 c0                	xor    %eax,%eax
    3efd:	39 c2                	cmp    %eax,%edx
    3eff:	7c 27                	jl     3f28 <check_list_apply+0x58>
    3f01:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    3f05:	48 98                	cltq
    3f07:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
    3f0b:	41 ff d4             	call   *%r12
    3f0e:	8b 43 08             	mov    0x8(%rbx),%eax
    3f11:	83 f8 ff             	cmp    $0xffffffff,%eax
    3f14:	74 12                	je     3f28 <check_list_apply+0x58>
    3f16:	8b 53 0c             	mov    0xc(%rbx),%edx
    3f19:	39 c2                	cmp    %eax,%edx
    3f1b:	7c 0b                	jl     3f28 <check_list_apply+0x58>
    3f1d:	83 c0 01             	add    $0x1,%eax
    3f20:	89 43 08             	mov    %eax,0x8(%rbx)
    3f23:	83 f8 ff             	cmp    $0xffffffff,%eax
    3f26:	75 d5                	jne    3efd <check_list_apply+0x2d>
    3f28:	5b                   	pop    %rbx
    3f29:	41 5c                	pop    %r12
    3f2b:	5d                   	pop    %rbp
    3f2c:	c3                   	ret
    3f2d:	0f 1f 00             	nopl   (%rax)
    3f30:	c3                   	ret
    3f31:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    3f38:	00 00 00 00 
    3f3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003f40 <check_list_contains>:
    3f40:	f3 0f 1e fa          	endbr64
    3f44:	83 7f 08 ff          	cmpl   $0xffffffff,0x8(%rdi)
    3f48:	74 25                	je     3f6f <check_list_contains+0x2f>
    3f4a:	8b 4f 0c             	mov    0xc(%rdi),%ecx
    3f4d:	31 c0                	xor    %eax,%eax
    3f4f:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
    3f56:	39 c1                	cmp    %eax,%ecx
    3f58:	7c 15                	jl     3f6f <check_list_contains+0x2f>
    3f5a:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    3f5e:	48 3b 34 c2          	cmp    (%rdx,%rax,8),%rsi
    3f62:	74 14                	je     3f78 <check_list_contains+0x38>
    3f64:	48 83 c0 01          	add    $0x1,%rax
    3f68:	89 47 08             	mov    %eax,0x8(%rdi)
    3f6b:	39 c1                	cmp    %eax,%ecx
    3f6d:	7d eb                	jge    3f5a <check_list_contains+0x1a>
    3f6f:	31 c0                	xor    %eax,%eax
    3f71:	c3                   	ret
    3f72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3f78:	b8 01 00 00 00       	mov    $0x1,%eax
    3f7d:	c3                   	ret
    3f7e:	66 90                	xchg   %ax,%ax

0000000000003f80 <get_pipe.part.0>:
    3f80:	55                   	push   %rbp
    3f81:	ba 50 00 00 00       	mov    $0x50,%edx
    3f86:	48 8d 35 54 42 00 00 	lea    0x4254(%rip),%rsi        # 81e1 <_IO_stdin_used+0x1e1>
    3f8d:	31 c0                	xor    %eax,%eax
    3f8f:	48 8d 3d b2 46 00 00 	lea    0x46b2(%rip),%rdi        # 8648 <_IO_stdin_used+0x648>
    3f96:	48 89 e5             	mov    %rsp,%rbp
    3f99:	e8 52 fb ff ff       	call   3af0 <eprintf>
    3f9e:	66 90                	xchg   %ax,%ax

0000000000003fa0 <teardown_pipe>:
    3fa0:	55                   	push   %rbp
    3fa1:	48 8b 3d a8 81 00 00 	mov    0x81a8(%rip),%rdi        # c150 <send_file2>
    3fa8:	48 89 e5             	mov    %rsp,%rbp
    3fab:	48 85 ff             	test   %rdi,%rdi
    3fae:	74 40                	je     3ff0 <teardown_pipe+0x50>
    3fb0:	e8 cb e5 ff ff       	call   2580 <fclose@plt>
    3fb5:	48 8b 3d 8c 81 00 00 	mov    0x818c(%rip),%rdi        # c148 <send_file2_name>
    3fbc:	48 c7 05 89 81 00 00 	movq   $0x0,0x8189(%rip)        # c150 <send_file2>
    3fc3:	00 00 00 00 
    3fc7:	48 85 ff             	test   %rdi,%rdi
    3fca:	74 1c                	je     3fe8 <teardown_pipe+0x48>
    3fcc:	e8 1f e5 ff ff       	call   24f0 <unlink@plt>
    3fd1:	48 8b 3d 70 81 00 00 	mov    0x8170(%rip),%rdi        # c148 <send_file2_name>
    3fd8:	e8 83 e4 ff ff       	call   2460 <free@plt>
    3fdd:	48 c7 05 60 81 00 00 	movq   $0x0,0x8160(%rip)        # c148 <send_file2_name>
    3fe4:	00 00 00 00 
    3fe8:	5d                   	pop    %rbp
    3fe9:	c3                   	ret
    3fea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3ff0:	48 8b 3d 69 81 00 00 	mov    0x8169(%rip),%rdi        # c160 <send_file1>
    3ff7:	48 85 ff             	test   %rdi,%rdi
    3ffa:	74 3a                	je     4036 <teardown_pipe+0x96>
    3ffc:	e8 7f e5 ff ff       	call   2580 <fclose@plt>
    4001:	48 8b 3d 50 81 00 00 	mov    0x8150(%rip),%rdi        # c158 <send_file1_name>
    4008:	48 c7 05 4d 81 00 00 	movq   $0x0,0x814d(%rip)        # c160 <send_file1>
    400f:	00 00 00 00 
    4013:	48 85 ff             	test   %rdi,%rdi
    4016:	74 d0                	je     3fe8 <teardown_pipe+0x48>
    4018:	e8 d3 e4 ff ff       	call   24f0 <unlink@plt>
    401d:	48 8b 3d 34 81 00 00 	mov    0x8134(%rip),%rdi        # c158 <send_file1_name>
    4024:	e8 37 e4 ff ff       	call   2460 <free@plt>
    4029:	5d                   	pop    %rbp
    402a:	48 c7 05 23 81 00 00 	movq   $0x0,0x8123(%rip)        # c158 <send_file1_name>
    4031:	00 00 00 00 
    4035:	c3                   	ret
    4036:	ba 6a 01 00 00       	mov    $0x16a,%edx
    403b:	48 8d 35 9f 41 00 00 	lea    0x419f(%rip),%rsi        # 81e1 <_IO_stdin_used+0x1e1>
    4042:	48 8d 3d ae 41 00 00 	lea    0x41ae(%rip),%rdi        # 81f7 <_IO_stdin_used+0x1f7>
    4049:	31 c0                	xor    %eax,%eax
    404b:	e8 a0 fa ff ff       	call   3af0 <eprintf>

0000000000004050 <send_failure_info>:
    4050:	f3 0f 1e fa          	endbr64
    4054:	55                   	push   %rbp
    4055:	48 89 e5             	mov    %rsp,%rbp
    4058:	48 83 ec 10          	sub    $0x10,%rsp
    405c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4063:	00 00 
    4065:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4069:	31 c0                	xor    %eax,%eax
    406b:	e8 e0 e7 ff ff       	call   2850 <strdup@plt>
    4070:	48 8b 3d d9 80 00 00 	mov    0x80d9(%rip),%rdi        # c150 <send_file2>
    4077:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    407b:	48 85 ff             	test   %rdi,%rdi
    407e:	74 30                	je     40b0 <send_failure_info+0x60>
    4080:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4084:	be 01 00 00 00       	mov    $0x1,%esi
    4089:	e8 a2 0a 00 00       	call   4b30 <ppack>
    408e:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    4092:	e8 c9 e3 ff ff       	call   2460 <free@plt>
    4097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    409b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    40a2:	00 00 
    40a4:	75 1b                	jne    40c1 <send_failure_info+0x71>
    40a6:	c9                   	leave
    40a7:	c3                   	ret
    40a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    40af:	00 
    40b0:	48 8b 3d a9 80 00 00 	mov    0x80a9(%rip),%rdi        # c160 <send_file1>
    40b7:	48 85 ff             	test   %rdi,%rdi
    40ba:	75 c4                	jne    4080 <send_failure_info+0x30>
    40bc:	e8 bf fe ff ff       	call   3f80 <get_pipe.part.0>
    40c1:	e8 ea e4 ff ff       	call   25b0 <__stack_chk_fail@plt>
    40c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    40cd:	00 00 00 

00000000000040d0 <send_duration_info>:
    40d0:	f3 0f 1e fa          	endbr64
    40d4:	55                   	push   %rbp
    40d5:	48 89 e5             	mov    %rsp,%rbp
    40d8:	48 83 ec 10          	sub    $0x10,%rsp
    40dc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    40e3:	00 00 
    40e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    40e9:	31 c0                	xor    %eax,%eax
    40eb:	89 7d f4             	mov    %edi,-0xc(%rbp)
    40ee:	48 8b 3d 5b 80 00 00 	mov    0x805b(%rip),%rdi        # c150 <send_file2>
    40f5:	48 85 ff             	test   %rdi,%rdi
    40f8:	74 26                	je     4120 <send_duration_info+0x50>
    40fa:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
    40fe:	be 03 00 00 00       	mov    $0x3,%esi
    4103:	e8 28 0a 00 00       	call   4b30 <ppack>
    4108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    410c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    4113:	00 00 
    4115:	75 1a                	jne    4131 <send_duration_info+0x61>
    4117:	c9                   	leave
    4118:	c3                   	ret
    4119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4120:	48 8b 3d 39 80 00 00 	mov    0x8039(%rip),%rdi        # c160 <send_file1>
    4127:	48 85 ff             	test   %rdi,%rdi
    412a:	75 ce                	jne    40fa <send_duration_info+0x2a>
    412c:	e8 4f fe ff ff       	call   3f80 <get_pipe.part.0>
    4131:	e8 7a e4 ff ff       	call   25b0 <__stack_chk_fail@plt>
    4136:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    413d:	00 00 00 

0000000000004140 <send_loc_info>:
    4140:	f3 0f 1e fa          	endbr64
    4144:	55                   	push   %rbp
    4145:	48 89 e5             	mov    %rsp,%rbp
    4148:	53                   	push   %rbx
    4149:	89 f3                	mov    %esi,%ebx
    414b:	48 83 ec 28          	sub    $0x28,%rsp
    414f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4156:	00 00 
    4158:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    415c:	31 c0                	xor    %eax,%eax
    415e:	e8 ed e6 ff ff       	call   2850 <strdup@plt>
    4163:	48 8b 3d e6 7f 00 00 	mov    0x7fe6(%rip),%rdi        # c150 <send_file2>
    416a:	89 5d d0             	mov    %ebx,-0x30(%rbp)
    416d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4171:	48 85 ff             	test   %rdi,%rdi
    4174:	74 32                	je     41a8 <send_loc_info+0x68>
    4176:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    417a:	be 02 00 00 00       	mov    $0x2,%esi
    417f:	e8 ac 09 00 00       	call   4b30 <ppack>
    4184:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    4188:	e8 d3 e2 ff ff       	call   2460 <free@plt>
    418d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4191:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    4198:	00 00 
    419a:	75 1d                	jne    41b9 <send_loc_info+0x79>
    419c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    41a0:	c9                   	leave
    41a1:	c3                   	ret
    41a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    41a8:	48 8b 3d b1 7f 00 00 	mov    0x7fb1(%rip),%rdi        # c160 <send_file1>
    41af:	48 85 ff             	test   %rdi,%rdi
    41b2:	75 c2                	jne    4176 <send_loc_info+0x36>
    41b4:	e8 c7 fd ff ff       	call   3f80 <get_pipe.part.0>
    41b9:	e8 f2 e3 ff ff       	call   25b0 <__stack_chk_fail@plt>
    41be:	66 90                	xchg   %ax,%ax

00000000000041c0 <send_ctx_info>:
    41c0:	f3 0f 1e fa          	endbr64
    41c4:	55                   	push   %rbp
    41c5:	48 89 e5             	mov    %rsp,%rbp
    41c8:	48 83 ec 10          	sub    $0x10,%rsp
    41cc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    41d3:	00 00 
    41d5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    41d9:	31 c0                	xor    %eax,%eax
    41db:	89 7d f4             	mov    %edi,-0xc(%rbp)
    41de:	48 8b 3d 6b 7f 00 00 	mov    0x7f6b(%rip),%rdi        # c150 <send_file2>
    41e5:	48 85 ff             	test   %rdi,%rdi
    41e8:	74 26                	je     4210 <send_ctx_info+0x50>
    41ea:	31 f6                	xor    %esi,%esi
    41ec:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
    41f0:	e8 3b 09 00 00       	call   4b30 <ppack>
    41f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41f9:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    4200:	00 00 
    4202:	75 1d                	jne    4221 <send_ctx_info+0x61>
    4204:	c9                   	leave
    4205:	c3                   	ret
    4206:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    420d:	00 00 00 
    4210:	48 8b 3d 49 7f 00 00 	mov    0x7f49(%rip),%rdi        # c160 <send_file1>
    4217:	48 85 ff             	test   %rdi,%rdi
    421a:	75 ce                	jne    41ea <send_ctx_info+0x2a>
    421c:	e8 5f fd ff ff       	call   3f80 <get_pipe.part.0>
    4221:	e8 8a e3 ff ff       	call   25b0 <__stack_chk_fail@plt>
    4226:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    422d:	00 00 00 

0000000000004230 <teardown_messaging>:
    4230:	f3 0f 1e fa          	endbr64
    4234:	e9 67 fd ff ff       	jmp    3fa0 <teardown_pipe>
    4239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004240 <open_tmp_file>:
    4240:	f3 0f 1e fa          	endbr64
    4244:	55                   	push   %rbp
    4245:	48 89 e5             	mov    %rsp,%rbp
    4248:	41 54                	push   %r12
    424a:	53                   	push   %rbx
    424b:	48 89 fb             	mov    %rdi,%rbx
    424e:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    4255:	48 8d 3d b3 3f 00 00 	lea    0x3fb3(%rip),%rdi        # 820f <_IO_stdin_used+0x20f>
    425c:	e8 1f e2 ff ff       	call   2480 <getenv@plt>
    4261:	48 8d 3d ac 3f 00 00 	lea    0x3fac(%rip),%rdi        # 8214 <_IO_stdin_used+0x214>
    4268:	48 85 c0             	test   %rax,%rax
    426b:	48 89 c6             	mov    %rax,%rsi
    426e:	48 8d 05 95 3f 00 00 	lea    0x3f95(%rip),%rax        # 820a <_IO_stdin_used+0x20a>
    4275:	48 0f 44 f0          	cmove  %rax,%rsi
    4279:	31 c0                	xor    %eax,%eax
    427b:	45 31 e4             	xor    %r12d,%r12d
    427e:	e8 8d 21 00 00       	call   6410 <ck_strdup_printf>
    4283:	48 89 03             	mov    %rax,(%rbx)
    4286:	48 89 c7             	mov    %rax,%rdi
    4289:	e8 72 e4 ff ff       	call   2700 <mkstemp@plt>
    428e:	85 c0                	test   %eax,%eax
    4290:	78 22                	js     42b4 <open_tmp_file+0x74>
    4292:	89 c7                	mov    %eax,%edi
    4294:	48 8d 35 89 3f 00 00 	lea    0x3f89(%rip),%rsi        # 8224 <_IO_stdin_used+0x224>
    429b:	e8 b0 e4 ff ff       	call   2750 <fdopen@plt>
    42a0:	48 8b 3b             	mov    (%rbx),%rdi
    42a3:	49 89 c4             	mov    %rax,%r12
    42a6:	e8 45 e2 ff ff       	call   24f0 <unlink@plt>
    42ab:	4d 85 e4             	test   %r12,%r12
    42ae:	74 10                	je     42c0 <open_tmp_file+0x80>
    42b0:	85 c0                	test   %eax,%eax
    42b2:	74 0c                	je     42c0 <open_tmp_file+0x80>
    42b4:	4c 89 e0             	mov    %r12,%rax
    42b7:	5b                   	pop    %rbx
    42b8:	41 5c                	pop    %r12
    42ba:	5d                   	pop    %rbp
    42bb:	c3                   	ret
    42bc:	0f 1f 40 00          	nopl   0x0(%rax)
    42c0:	48 8b 3b             	mov    (%rbx),%rdi
    42c3:	e8 98 e1 ff ff       	call   2460 <free@plt>
    42c8:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    42cf:	4c 89 e0             	mov    %r12,%rax
    42d2:	5b                   	pop    %rbx
    42d3:	41 5c                	pop    %r12
    42d5:	5d                   	pop    %rbp
    42d6:	c3                   	ret
    42d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    42de:	00 00 

00000000000042e0 <receive_test_result>:
    42e0:	f3 0f 1e fa          	endbr64
    42e4:	55                   	push   %rbp
    42e5:	48 89 e5             	mov    %rsp,%rbp
    42e8:	41 55                	push   %r13
    42ea:	41 89 fd             	mov    %edi,%r13d
    42ed:	41 54                	push   %r12
    42ef:	53                   	push   %rbx
    42f0:	48 83 ec 08          	sub    $0x8,%rsp
    42f4:	48 8b 1d 55 7e 00 00 	mov    0x7e55(%rip),%rbx        # c150 <send_file2>
    42fb:	48 85 db             	test   %rbx,%rbx
    42fe:	0f 84 14 01 00 00    	je     4418 <receive_test_result+0x138>
    4304:	48 89 df             	mov    %rbx,%rdi
    4307:	e8 e4 e2 ff ff       	call   25f0 <rewind@plt>
    430c:	48 89 df             	mov    %rbx,%rdi
    430f:	e8 2c 0a 00 00       	call   4d40 <punpack>
    4314:	48 89 c3             	mov    %rax,%rbx
    4317:	48 85 c0             	test   %rax,%rax
    431a:	0f 84 64 01 00 00    	je     4484 <receive_test_result+0x1a4>
    4320:	e8 7b fc ff ff       	call   3fa0 <teardown_pipe>
    4325:	48 83 3d 33 7e 00 00 	cmpq   $0x0,0x7e33(%rip)        # c160 <send_file1>
    432c:	00 
    432d:	0f 84 1d 01 00 00    	je     4450 <receive_test_result+0x170>
    4333:	48 83 3d 15 7e 00 00 	cmpq   $0x0,0x7e15(%rip)        # c150 <send_file2>
    433a:	00 
    433b:	0f 85 75 01 00 00    	jne    44b6 <receive_test_result+0x1d6>
    4341:	48 8d 3d 00 7e 00 00 	lea    0x7e00(%rip),%rdi        # c148 <send_file2_name>
    4348:	e8 f3 fe ff ff       	call   4240 <open_tmp_file>
    434d:	48 89 05 fc 7d 00 00 	mov    %rax,0x7dfc(%rip)        # c150 <send_file2>
    4354:	48 85 c0             	test   %rax,%rax
    4357:	0f 84 41 01 00 00    	je     449e <receive_test_result+0x1be>
    435d:	e8 fe f5 ff ff       	call   3960 <tr_create>
    4362:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    4366:	49 89 c4             	mov    %rax,%r12
    4369:	45 85 ed             	test   %r13d,%r13d
    436c:	75 09                	jne    4377 <receive_test_result+0x97>
    436e:	48 85 d2             	test   %rdx,%rdx
    4371:	0f 84 b9 00 00 00    	je     4430 <receive_test_result+0x150>
    4377:	8b 43 04             	mov    0x4(%rbx),%eax
    437a:	85 c0                	test   %eax,%eax
    437c:	74 52                	je     43d0 <receive_test_result+0xf0>
    437e:	41 89 44 24 04       	mov    %eax,0x4(%r12)
    4383:	49 89 54 24 30       	mov    %rdx,0x30(%r12)
    4388:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
    438f:	00 
    4390:	83 f8 02             	cmp    $0x2,%eax
    4393:	74 5a                	je     43ef <receive_test_result+0x10f>
    4395:	48 8b 43 08          	mov    0x8(%rbx),%rax
    4399:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    439e:	8b 43 10             	mov    0x10(%rbx),%eax
    43a1:	41 89 44 24 10       	mov    %eax,0x10(%r12)
    43a6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    43ad:	00 
    43ae:	c7 43 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rbx)
    43b5:	48 89 df             	mov    %rbx,%rdi
    43b8:	e8 43 09 00 00       	call   4d00 <rcvmsg_free>
    43bd:	48 83 c4 08          	add    $0x8,%rsp
    43c1:	4c 89 e0             	mov    %r12,%rax
    43c4:	5b                   	pop    %rbx
    43c5:	41 5c                	pop    %r12
    43c7:	41 5d                	pop    %r13
    43c9:	5d                   	pop    %rbp
    43ca:	c3                   	ret
    43cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    43d0:	8b 03                	mov    (%rbx),%eax
    43d2:	eb aa                	jmp    437e <receive_test_result+0x9e>
    43d4:	0f 1f 40 00          	nopl   0x0(%rax)
    43d8:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    43df:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    43e6:	00 
    43e7:	8b 43 30             	mov    0x30(%rbx),%eax
    43ea:	41 89 44 24 18       	mov    %eax,0x18(%r12)
    43ef:	48 8b 43 18          	mov    0x18(%rbx),%rax
    43f3:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    43f8:	8b 43 20             	mov    0x20(%rbx),%eax
    43fb:	41 89 44 24 10       	mov    %eax,0x10(%r12)
    4400:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    4407:	00 
    4408:	c7 43 20 ff ff ff ff 	movl   $0xffffffff,0x20(%rbx)
    440f:	eb a4                	jmp    43b5 <receive_test_result+0xd5>
    4411:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4418:	48 8b 1d 41 7d 00 00 	mov    0x7d41(%rip),%rbx        # c160 <send_file1>
    441f:	48 85 db             	test   %rbx,%rbx
    4422:	0f 85 dc fe ff ff    	jne    4304 <receive_test_result+0x24>
    4428:	e8 53 fb ff ff       	call   3f80 <get_pipe.part.0>
    442d:	0f 1f 00             	nopl   (%rax)
    4430:	83 3b 01             	cmpl   $0x1,(%rbx)
    4433:	75 a3                	jne    43d8 <receive_test_result+0xf8>
    4435:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    443c:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    4443:	00 
    4444:	e9 4c ff ff ff       	jmp    4395 <receive_test_result+0xb5>
    4449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4450:	48 8d 3d 01 7d 00 00 	lea    0x7d01(%rip),%rdi        # c158 <send_file1_name>
    4457:	e8 e4 fd ff ff       	call   4240 <open_tmp_file>
    445c:	48 89 05 fd 7c 00 00 	mov    %rax,0x7cfd(%rip)        # c160 <send_file1>
    4463:	48 85 c0             	test   %rax,%rax
    4466:	0f 85 f1 fe ff ff    	jne    435d <receive_test_result+0x7d>
    446c:	ba 3d 01 00 00       	mov    $0x13d,%edx
    4471:	48 8d 35 69 3d 00 00 	lea    0x3d69(%rip),%rsi        # 81e1 <_IO_stdin_used+0x1e1>
    4478:	48 8d 3d 41 42 00 00 	lea    0x4241(%rip),%rdi        # 86c0 <_IO_stdin_used+0x6c0>
    447f:	e8 6c f6 ff ff       	call   3af0 <eprintf>
    4484:	ba 85 00 00 00       	mov    $0x85,%edx
    4489:	48 8d 35 51 3d 00 00 	lea    0x3d51(%rip),%rsi        # 81e1 <_IO_stdin_used+0x1e1>
    4490:	48 8d 3d 91 3d 00 00 	lea    0x3d91(%rip),%rdi        # 8228 <_IO_stdin_used+0x228>
    4497:	31 c0                	xor    %eax,%eax
    4499:	e8 52 f6 ff ff       	call   3af0 <eprintf>
    449e:	ba 46 01 00 00       	mov    $0x146,%edx
    44a3:	48 8d 35 37 3d 00 00 	lea    0x3d37(%rip),%rsi        # 81e1 <_IO_stdin_used+0x1e1>
    44aa:	48 8d 3d 0f 42 00 00 	lea    0x420f(%rip),%rdi        # 86c0 <_IO_stdin_used+0x6c0>
    44b1:	e8 3a f6 ff ff       	call   3af0 <eprintf>
    44b6:	ba 4d 01 00 00       	mov    $0x14d,%edx
    44bb:	48 8d 35 1f 3d 00 00 	lea    0x3d1f(%rip),%rsi        # 81e1 <_IO_stdin_used+0x1e1>
    44c2:	48 8d 3d 4f 42 00 00 	lea    0x424f(%rip),%rdi        # 8718 <_IO_stdin_used+0x718>
    44c9:	31 c0                	xor    %eax,%eax
    44cb:	e8 20 f6 ff ff       	call   3af0 <eprintf>

00000000000044d0 <setup_messaging>:
    44d0:	f3 0f 1e fa          	endbr64
    44d4:	55                   	push   %rbp
    44d5:	48 83 3d 83 7c 00 00 	cmpq   $0x0,0x7c83(%rip)        # c160 <send_file1>
    44dc:	00 
    44dd:	48 89 e5             	mov    %rsp,%rbp
    44e0:	74 2e                	je     4510 <setup_messaging+0x40>
    44e2:	48 83 3d 66 7c 00 00 	cmpq   $0x0,0x7c66(%rip)        # c150 <send_file2>
    44e9:	00 
    44ea:	75 6c                	jne    4558 <setup_messaging+0x88>
    44ec:	48 8d 3d 55 7c 00 00 	lea    0x7c55(%rip),%rdi        # c148 <send_file2_name>
    44f3:	e8 48 fd ff ff       	call   4240 <open_tmp_file>
    44f8:	48 89 05 51 7c 00 00 	mov    %rax,0x7c51(%rip)        # c150 <send_file2>
    44ff:	48 85 c0             	test   %rax,%rax
    4502:	74 3c                	je     4540 <setup_messaging+0x70>
    4504:	5d                   	pop    %rbp
    4505:	c3                   	ret
    4506:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    450d:	00 00 00 
    4510:	48 8d 3d 41 7c 00 00 	lea    0x7c41(%rip),%rdi        # c158 <send_file1_name>
    4517:	e8 24 fd ff ff       	call   4240 <open_tmp_file>
    451c:	48 89 05 3d 7c 00 00 	mov    %rax,0x7c3d(%rip)        # c160 <send_file1>
    4523:	48 85 c0             	test   %rax,%rax
    4526:	75 dc                	jne    4504 <setup_messaging+0x34>
    4528:	ba 3d 01 00 00       	mov    $0x13d,%edx
    452d:	48 8d 35 ad 3c 00 00 	lea    0x3cad(%rip),%rsi        # 81e1 <_IO_stdin_used+0x1e1>
    4534:	48 8d 3d 85 41 00 00 	lea    0x4185(%rip),%rdi        # 86c0 <_IO_stdin_used+0x6c0>
    453b:	e8 b0 f5 ff ff       	call   3af0 <eprintf>
    4540:	ba 46 01 00 00       	mov    $0x146,%edx
    4545:	48 8d 35 95 3c 00 00 	lea    0x3c95(%rip),%rsi        # 81e1 <_IO_stdin_used+0x1e1>
    454c:	48 8d 3d 6d 41 00 00 	lea    0x416d(%rip),%rdi        # 86c0 <_IO_stdin_used+0x6c0>
    4553:	e8 98 f5 ff ff       	call   3af0 <eprintf>
    4558:	ba 4d 01 00 00       	mov    $0x14d,%edx
    455d:	48 8d 35 7d 3c 00 00 	lea    0x3c7d(%rip),%rsi        # 81e1 <_IO_stdin_used+0x1e1>
    4564:	48 8d 3d ad 41 00 00 	lea    0x41ad(%rip),%rdi        # 8718 <_IO_stdin_used+0x718>
    456b:	31 c0                	xor    %eax,%eax
    456d:	e8 7e f5 ff ff       	call   3af0 <eprintf>
    4572:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4579:	00 00 00 
    457c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004580 <ppack_cleanup>:
    4580:	f3 0f 1e fa          	endbr64
    4584:	e9 37 e1 ff ff       	jmp    26c0 <pthread_mutex_unlock@plt>
    4589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004590 <read_buf>:
    4590:	55                   	push   %rbp
    4591:	48 89 e5             	mov    %rsp,%rbp
    4594:	41 54                	push   %r12
    4596:	53                   	push   %rbx
    4597:	48 89 fb             	mov    %rdi,%rbx
    459a:	48 89 d7             	mov    %rdx,%rdi
    459d:	48 89 f2             	mov    %rsi,%rdx
    45a0:	48 89 d9             	mov    %rbx,%rcx
    45a3:	be 01 00 00 00       	mov    $0x1,%esi
    45a8:	e8 93 df ff ff       	call   2540 <fread@plt>
    45ad:	48 89 df             	mov    %rbx,%rdi
    45b0:	49 89 c4             	mov    %rax,%r12
    45b3:	e8 68 df ff ff       	call   2520 <ferror@plt>
    45b8:	85 c0                	test   %eax,%eax
    45ba:	75 08                	jne    45c4 <read_buf+0x34>
    45bc:	4c 89 e0             	mov    %r12,%rax
    45bf:	5b                   	pop    %rbx
    45c0:	41 5c                	pop    %r12
    45c2:	5d                   	pop    %rbp
    45c3:	c3                   	ret
    45c4:	ba 8b 01 00 00       	mov    $0x18b,%edx
    45c9:	48 8d 35 71 3c 00 00 	lea    0x3c71(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    45d0:	48 8d 3d 81 3c 00 00 	lea    0x3c81(%rip),%rdi        # 8258 <_IO_stdin_used+0x258>
    45d7:	31 c0                	xor    %eax,%eax
    45d9:	e8 12 f5 ff ff       	call   3af0 <eprintf>
    45de:	66 90                	xchg   %ax,%ax

00000000000045e0 <upack_ctx>:
    45e0:	f3 0f 1e fa          	endbr64
    45e4:	48 8b 07             	mov    (%rdi),%rax
    45e7:	8b 10                	mov    (%rax),%edx
    45e9:	48 83 c0 04          	add    $0x4,%rax
    45ed:	48 89 07             	mov    %rax,(%rdi)
    45f0:	0f ca                	bswap  %edx
    45f2:	89 16                	mov    %edx,(%rsi)
    45f4:	c3                   	ret
    45f5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    45fc:	00 00 00 00 

0000000000004600 <pack_ctx>:
    4600:	f3 0f 1e fa          	endbr64
    4604:	55                   	push   %rbp
    4605:	48 89 e5             	mov    %rsp,%rbp
    4608:	41 54                	push   %r12
    460a:	49 89 fc             	mov    %rdi,%r12
    460d:	bf 08 00 00 00       	mov    $0x8,%edi
    4612:	53                   	push   %rbx
    4613:	48 89 f3             	mov    %rsi,%rbx
    4616:	e8 15 f6 ff ff       	call   3c30 <emalloc>
    461b:	49 89 04 24          	mov    %rax,(%r12)
    461f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    4625:	8b 13                	mov    (%rbx),%edx
    4627:	0f ca                	bswap  %edx
    4629:	89 50 04             	mov    %edx,0x4(%rax)
    462c:	b8 08 00 00 00       	mov    $0x8,%eax
    4631:	5b                   	pop    %rbx
    4632:	41 5c                	pop    %r12
    4634:	5d                   	pop    %rbp
    4635:	c3                   	ret
    4636:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    463d:	00 00 00 

0000000000004640 <upack_duration>:
    4640:	f3 0f 1e fa          	endbr64
    4644:	48 8b 07             	mov    (%rdi),%rax
    4647:	8b 08                	mov    (%rax),%ecx
    4649:	48 83 c0 04          	add    $0x4,%rax
    464d:	48 89 07             	mov    %rax,(%rdi)
    4650:	0f c9                	bswap  %ecx
    4652:	85 c9                	test   %ecx,%ecx
    4654:	78 03                	js     4659 <upack_duration+0x19>
    4656:	89 0e                	mov    %ecx,(%rsi)
    4658:	c3                   	ret
    4659:	55                   	push   %rbp
    465a:	41 b8 ff ff ff 7f    	mov    $0x7fffffff,%r8d
    4660:	ba 26 01 00 00       	mov    $0x126,%edx
    4665:	31 c0                	xor    %eax,%eax
    4667:	48 8d 35 d3 3b 00 00 	lea    0x3bd3(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    466e:	48 8d 3d d3 40 00 00 	lea    0x40d3(%rip),%rdi        # 8748 <_IO_stdin_used+0x748>
    4675:	48 89 e5             	mov    %rsp,%rbp
    4678:	e8 73 f4 ff ff       	call   3af0 <eprintf>
    467d:	0f 1f 00             	nopl   (%rax)

0000000000004680 <pack_duration>:
    4680:	f3 0f 1e fa          	endbr64
    4684:	55                   	push   %rbp
    4685:	48 89 e5             	mov    %rsp,%rbp
    4688:	41 54                	push   %r12
    468a:	49 89 fc             	mov    %rdi,%r12
    468d:	bf 08 00 00 00       	mov    $0x8,%edi
    4692:	53                   	push   %rbx
    4693:	48 89 f3             	mov    %rsi,%rbx
    4696:	e8 95 f5 ff ff       	call   3c30 <emalloc>
    469b:	49 89 04 24          	mov    %rax,(%r12)
    469f:	c7 00 00 00 00 03    	movl   $0x3000000,(%rax)
    46a5:	8b 0b                	mov    (%rbx),%ecx
    46a7:	85 c9                	test   %ecx,%ecx
    46a9:	78 11                	js     46bc <pack_duration+0x3c>
    46ab:	89 ca                	mov    %ecx,%edx
    46ad:	0f ca                	bswap  %edx
    46af:	89 50 04             	mov    %edx,0x4(%rax)
    46b2:	b8 08 00 00 00       	mov    $0x8,%eax
    46b7:	5b                   	pop    %rbx
    46b8:	41 5c                	pop    %r12
    46ba:	5d                   	pop    %rbp
    46bb:	c3                   	ret
    46bc:	41 83 c8 ff          	or     $0xffffffff,%r8d
    46c0:	ba 1e 01 00 00       	mov    $0x11e,%edx
    46c5:	48 8d 35 75 3b 00 00 	lea    0x3b75(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    46cc:	31 c0                	xor    %eax,%eax
    46ce:	48 8d 3d b3 40 00 00 	lea    0x40b3(%rip),%rdi        # 8788 <_IO_stdin_used+0x788>
    46d5:	e8 16 f4 ff ff       	call   3af0 <eprintf>
    46da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000046e0 <pack_str>:
    46e0:	55                   	push   %rbp
    46e1:	48 89 e5             	mov    %rsp,%rbp
    46e4:	41 55                	push   %r13
    46e6:	41 54                	push   %r12
    46e8:	53                   	push   %rbx
    46e9:	48 89 fb             	mov    %rdi,%rbx
    46ec:	48 83 ec 08          	sub    $0x8,%rsp
    46f0:	48 85 f6             	test   %rsi,%rsi
    46f3:	74 5b                	je     4750 <pack_str+0x70>
    46f5:	48 89 f7             	mov    %rsi,%rdi
    46f8:	49 89 f5             	mov    %rsi,%r13
    46fb:	e8 90 de ff ff       	call   2590 <strlen@plt>
    4700:	49 89 c4             	mov    %rax,%r12
    4703:	48 c1 e8 20          	shr    $0x20,%rax
    4707:	75 5f                	jne    4768 <pack_str+0x88>
    4709:	48 8b 13             	mov    (%rbx),%rdx
    470c:	44 89 e0             	mov    %r12d,%eax
    470f:	0f c8                	bswap  %eax
    4711:	89 02                	mov    %eax,(%rdx)
    4713:	48 8b 03             	mov    (%rbx),%rax
    4716:	48 8d 78 04          	lea    0x4(%rax),%rdi
    471a:	48 89 3b             	mov    %rdi,(%rbx)
    471d:	4d 85 e4             	test   %r12,%r12
    4720:	75 0e                	jne    4730 <pack_str+0x50>
    4722:	48 83 c4 08          	add    $0x8,%rsp
    4726:	5b                   	pop    %rbx
    4727:	41 5c                	pop    %r12
    4729:	41 5d                	pop    %r13
    472b:	5d                   	pop    %rbp
    472c:	c3                   	ret
    472d:	0f 1f 00             	nopl   (%rax)
    4730:	4c 89 e2             	mov    %r12,%rdx
    4733:	4c 89 ee             	mov    %r13,%rsi
    4736:	e8 75 df ff ff       	call   26b0 <memcpy@plt>
    473b:	4c 01 23             	add    %r12,(%rbx)
    473e:	48 83 c4 08          	add    $0x8,%rsp
    4742:	5b                   	pop    %rbx
    4743:	41 5c                	pop    %r12
    4745:	41 5d                	pop    %r13
    4747:	5d                   	pop    %rbp
    4748:	c3                   	ret
    4749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4750:	48 8b 07             	mov    (%rdi),%rax
    4753:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    4759:	48 83 07 04          	addq   $0x4,(%rdi)
    475d:	48 83 c4 08          	add    $0x8,%rsp
    4761:	5b                   	pop    %rbx
    4762:	41 5c                	pop    %r12
    4764:	41 5d                	pop    %r13
    4766:	5d                   	pop    %rbp
    4767:	c3                   	ret
    4768:	41 83 c8 ff          	or     $0xffffffff,%r8d
    476c:	4c 89 e1             	mov    %r12,%rcx
    476f:	ba cf 00 00 00       	mov    $0xcf,%edx
    4774:	31 c0                	xor    %eax,%eax
    4776:	48 8d 35 c4 3a 00 00 	lea    0x3ac4(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    477d:	48 8d 3d 44 40 00 00 	lea    0x4044(%rip),%rdi        # 87c8 <_IO_stdin_used+0x7c8>
    4784:	e8 67 f3 ff ff       	call   3af0 <eprintf>
    4789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004790 <pack_loc>:
    4790:	f3 0f 1e fa          	endbr64
    4794:	55                   	push   %rbp
    4795:	48 89 e5             	mov    %rsp,%rbp
    4798:	41 55                	push   %r13
    479a:	49 89 fd             	mov    %rdi,%r13
    479d:	41 54                	push   %r12
    479f:	53                   	push   %rbx
    47a0:	48 89 f3             	mov    %rsi,%rbx
    47a3:	48 83 ec 18          	sub    $0x18,%rsp
    47a7:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    47ab:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    47b2:	00 00 
    47b4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    47b8:	31 c0                	xor    %eax,%eax
    47ba:	48 85 ff             	test   %rdi,%rdi
    47bd:	74 61                	je     4820 <pack_loc+0x90>
    47bf:	e8 cc dd ff ff       	call   2590 <strlen@plt>
    47c4:	4c 8d 60 0c          	lea    0xc(%rax),%r12
    47c8:	4c 89 e7             	mov    %r12,%rdi
    47cb:	e8 60 f4 ff ff       	call   3c30 <emalloc>
    47d0:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
    47d4:	49 89 45 00          	mov    %rax,0x0(%r13)
    47d8:	48 83 c0 04          	add    $0x4,%rax
    47dc:	c7 40 fc 00 00 00 02 	movl   $0x2000000,-0x4(%rax)
    47e3:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    47e7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    47eb:	e8 f0 fe ff ff       	call   46e0 <pack_str>
    47f0:	8b 0b                	mov    (%rbx),%ecx
    47f2:	89 c8                	mov    %ecx,%eax
    47f4:	0f c8                	bswap  %eax
    47f6:	85 c9                	test   %ecx,%ecx
    47f8:	78 2e                	js     4828 <pack_loc+0x98>
    47fa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    47fe:	89 02                	mov    %eax,(%rdx)
    4800:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4804:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    480b:	00 00 
    480d:	75 37                	jne    4846 <pack_loc+0xb6>
    480f:	48 83 c4 18          	add    $0x18,%rsp
    4813:	4c 89 e0             	mov    %r12,%rax
    4816:	5b                   	pop    %rbx
    4817:	41 5c                	pop    %r12
    4819:	41 5d                	pop    %r13
    481b:	5d                   	pop    %rbp
    481c:	c3                   	ret
    481d:	0f 1f 00             	nopl   (%rax)
    4820:	41 bc 0c 00 00 00    	mov    $0xc,%r12d
    4826:	eb a0                	jmp    47c8 <pack_loc+0x38>
    4828:	41 83 c8 ff          	or     $0xffffffff,%r8d
    482c:	ba 39 01 00 00       	mov    $0x139,%edx
    4831:	48 8d 35 09 3a 00 00 	lea    0x3a09(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    4838:	31 c0                	xor    %eax,%eax
    483a:	48 8d 3d b7 3f 00 00 	lea    0x3fb7(%rip),%rdi        # 87f8 <_IO_stdin_used+0x7f8>
    4841:	e8 aa f2 ff ff       	call   3af0 <eprintf>
    4846:	e8 65 dd ff ff       	call   25b0 <__stack_chk_fail@plt>
    484b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004850 <pack_fail>:
    4850:	f3 0f 1e fa          	endbr64
    4854:	55                   	push   %rbp
    4855:	48 89 e5             	mov    %rsp,%rbp
    4858:	41 55                	push   %r13
    485a:	49 89 fd             	mov    %rdi,%r13
    485d:	41 54                	push   %r12
    485f:	53                   	push   %rbx
    4860:	48 89 f3             	mov    %rsi,%rbx
    4863:	48 83 ec 18          	sub    $0x18,%rsp
    4867:	48 8b 3e             	mov    (%rsi),%rdi
    486a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4871:	00 00 
    4873:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4877:	31 c0                	xor    %eax,%eax
    4879:	48 85 ff             	test   %rdi,%rdi
    487c:	74 52                	je     48d0 <pack_fail+0x80>
    487e:	e8 0d dd ff ff       	call   2590 <strlen@plt>
    4883:	4c 8d 60 08          	lea    0x8(%rax),%r12
    4887:	4c 89 e7             	mov    %r12,%rdi
    488a:	e8 a1 f3 ff ff       	call   3c30 <emalloc>
    488f:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
    4893:	49 89 45 00          	mov    %rax,0x0(%r13)
    4897:	48 83 c0 04          	add    $0x4,%rax
    489b:	c7 40 fc 00 00 00 01 	movl   $0x1000000,-0x4(%rax)
    48a2:	48 8b 33             	mov    (%rbx),%rsi
    48a5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    48a9:	e8 32 fe ff ff       	call   46e0 <pack_str>
    48ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    48b2:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    48b9:	00 00 
    48bb:	75 1b                	jne    48d8 <pack_fail+0x88>
    48bd:	48 83 c4 18          	add    $0x18,%rsp
    48c1:	4c 89 e0             	mov    %r12,%rax
    48c4:	5b                   	pop    %rbx
    48c5:	41 5c                	pop    %r12
    48c7:	41 5d                	pop    %r13
    48c9:	5d                   	pop    %rbp
    48ca:	c3                   	ret
    48cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    48d0:	41 bc 08 00 00 00    	mov    $0x8,%r12d
    48d6:	eb af                	jmp    4887 <pack_fail+0x37>
    48d8:	e8 d3 dc ff ff       	call   25b0 <__stack_chk_fail@plt>
    48dd:	0f 1f 00             	nopl   (%rax)

00000000000048e0 <upack_str>:
    48e0:	55                   	push   %rbp
    48e1:	48 89 e5             	mov    %rsp,%rbp
    48e4:	41 54                	push   %r12
    48e6:	53                   	push   %rbx
    48e7:	48 8b 07             	mov    (%rdi),%rax
    48ea:	8b 18                	mov    (%rax),%ebx
    48ec:	48 83 c0 04          	add    $0x4,%rax
    48f0:	48 89 07             	mov    %rax,(%rdi)
    48f3:	0f cb                	bswap  %ebx
    48f5:	89 db                	mov    %ebx,%ebx
    48f7:	48 85 db             	test   %rbx,%rbx
    48fa:	74 34                	je     4930 <upack_str+0x50>
    48fc:	49 89 fc             	mov    %rdi,%r12
    48ff:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
    4903:	e8 28 f3 ff ff       	call   3c30 <emalloc>
    4908:	49 8b 34 24          	mov    (%r12),%rsi
    490c:	48 89 da             	mov    %rbx,%rdx
    490f:	48 89 c7             	mov    %rax,%rdi
    4912:	e8 99 dd ff ff       	call   26b0 <memcpy@plt>
    4917:	48 89 c1             	mov    %rax,%rcx
    491a:	c6 04 18 00          	movb   $0x0,(%rax,%rbx,1)
    491e:	48 89 c8             	mov    %rcx,%rax
    4921:	49 01 1c 24          	add    %rbx,(%r12)
    4925:	5b                   	pop    %rbx
    4926:	41 5c                	pop    %r12
    4928:	5d                   	pop    %rbp
    4929:	c3                   	ret
    492a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4930:	bf 01 00 00 00       	mov    $0x1,%edi
    4935:	e8 f6 f2 ff ff       	call   3c30 <emalloc>
    493a:	48 89 c1             	mov    %rax,%rcx
    493d:	c6 00 00             	movb   $0x0,(%rax)
    4940:	5b                   	pop    %rbx
    4941:	48 89 c8             	mov    %rcx,%rax
    4944:	41 5c                	pop    %r12
    4946:	5d                   	pop    %rbp
    4947:	c3                   	ret
    4948:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    494f:	00 

0000000000004950 <upack_loc>:
    4950:	f3 0f 1e fa          	endbr64
    4954:	55                   	push   %rbp
    4955:	48 89 e5             	mov    %rsp,%rbp
    4958:	41 54                	push   %r12
    495a:	49 89 f4             	mov    %rsi,%r12
    495d:	53                   	push   %rbx
    495e:	48 89 fb             	mov    %rdi,%rbx
    4961:	e8 7a ff ff ff       	call   48e0 <upack_str>
    4966:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    496b:	48 8b 03             	mov    (%rbx),%rax
    496e:	8b 08                	mov    (%rax),%ecx
    4970:	48 83 c0 04          	add    $0x4,%rax
    4974:	48 89 03             	mov    %rax,(%rbx)
    4977:	0f c9                	bswap  %ecx
    4979:	85 c9                	test   %ecx,%ecx
    497b:	78 09                	js     4986 <upack_loc+0x36>
    497d:	41 89 0c 24          	mov    %ecx,(%r12)
    4981:	5b                   	pop    %rbx
    4982:	41 5c                	pop    %r12
    4984:	5d                   	pop    %rbp
    4985:	c3                   	ret
    4986:	41 b8 ff ff ff 7f    	mov    $0x7fffffff,%r8d
    498c:	ba 43 01 00 00       	mov    $0x143,%edx
    4991:	48 8d 35 a9 38 00 00 	lea    0x38a9(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    4998:	31 c0                	xor    %eax,%eax
    499a:	48 8d 3d 8f 3e 00 00 	lea    0x3e8f(%rip),%rdi        # 8830 <_IO_stdin_used+0x830>
    49a1:	e8 4a f1 ff ff       	call   3af0 <eprintf>
    49a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    49ad:	00 00 00 

00000000000049b0 <upack_fail>:
    49b0:	f3 0f 1e fa          	endbr64
    49b4:	55                   	push   %rbp
    49b5:	48 89 e5             	mov    %rsp,%rbp
    49b8:	53                   	push   %rbx
    49b9:	48 89 f3             	mov    %rsi,%rbx
    49bc:	48 83 ec 08          	sub    $0x8,%rsp
    49c0:	e8 1b ff ff ff       	call   48e0 <upack_str>
    49c5:	48 89 03             	mov    %rax,(%rbx)
    49c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    49cc:	c9                   	leave
    49cd:	c3                   	ret
    49ce:	66 90                	xchg   %ax,%ax

00000000000049d0 <check_set_max_msg_size>:
    49d0:	f3 0f 1e fa          	endbr64
    49d4:	48 89 3d cd 77 00 00 	mov    %rdi,0x77cd(%rip)        # c1a8 <ck_max_msg_size>
    49db:	c3                   	ret
    49dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000049e0 <pack>:
    49e0:	f3 0f 1e fa          	endbr64
    49e4:	89 f9                	mov    %edi,%ecx
    49e6:	48 89 f7             	mov    %rsi,%rdi
    49e9:	48 85 f6             	test   %rsi,%rsi
    49ec:	74 2d                	je     4a1b <pack+0x3b>
    49ee:	48 89 d6             	mov    %rdx,%rsi
    49f1:	48 85 d2             	test   %rdx,%rdx
    49f4:	74 22                	je     4a18 <pack+0x38>
    49f6:	55                   	push   %rbp
    49f7:	48 89 e5             	mov    %rsp,%rbp
    49fa:	83 f9 03             	cmp    $0x3,%ecx
    49fd:	77 45                	ja     4a44 <pack+0x64>
    49ff:	48 8d 05 5a 71 00 00 	lea    0x715a(%rip),%rax        # bb60 <pftab>
    4a06:	ff 14 c8             	call   *(%rax,%rcx,8)
    4a09:	48 3d ff ff ff 7f    	cmp    $0x7fffffff,%rax
    4a0f:	77 10                	ja     4a21 <pack+0x41>
    4a11:	5d                   	pop    %rbp
    4a12:	c3                   	ret
    4a13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4a18:	31 c0                	xor    %eax,%eax
    4a1a:	c3                   	ret
    4a1b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4a20:	c3                   	ret
    4a21:	48 89 c1             	mov    %rax,%rcx
    4a24:	41 b8 ff ff ff 7f    	mov    $0x7fffffff,%r8d
    4a2a:	31 c0                	xor    %eax,%eax
    4a2c:	ba 89 00 00 00       	mov    $0x89,%edx
    4a31:	48 8d 35 09 38 00 00 	lea    0x3809(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    4a38:	48 8d 3d 31 3e 00 00 	lea    0x3e31(%rip),%rdi        # 8870 <_IO_stdin_used+0x870>
    4a3f:	e8 ac f0 ff ff       	call   3af0 <eprintf>
    4a44:	ba 87 00 00 00       	mov    $0x87,%edx
    4a49:	48 8d 35 f1 37 00 00 	lea    0x37f1(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    4a50:	48 8d 3d 19 38 00 00 	lea    0x3819(%rip),%rdi        # 8270 <_IO_stdin_used+0x270>
    4a57:	31 c0                	xor    %eax,%eax
    4a59:	e8 92 f0 ff ff       	call   3af0 <eprintf>
    4a5e:	66 90                	xchg   %ax,%ax

0000000000004a60 <upack>:
    4a60:	f3 0f 1e fa          	endbr64
    4a64:	55                   	push   %rbp
    4a65:	48 89 e5             	mov    %rsp,%rbp
    4a68:	53                   	push   %rbx
    4a69:	48 83 ec 18          	sub    $0x18,%rsp
    4a6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4a71:	48 85 ff             	test   %rdi,%rdi
    4a74:	74 46                	je     4abc <upack+0x5c>
    4a76:	8b 0f                	mov    (%rdi),%ecx
    4a78:	48 8d 47 04          	lea    0x4(%rdi),%rax
    4a7c:	48 89 fb             	mov    %rdi,%rbx
    4a7f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4a83:	0f c9                	bswap  %ecx
    4a85:	89 0a                	mov    %ecx,(%rdx)
    4a87:	83 f9 03             	cmp    $0x3,%ecx
    4a8a:	77 7d                	ja     4b09 <upack+0xa9>
    4a8c:	48 8d 05 ad 70 00 00 	lea    0x70ad(%rip),%rax        # bb40 <upftab>
    4a93:	89 c9                	mov    %ecx,%ecx
    4a95:	48 8d 7d e8          	lea    -0x18(%rbp),%rdi
    4a99:	ff 14 c8             	call   *(%rax,%rcx,8)
    4a9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4aa0:	ba 00 00 00 80       	mov    $0x80000000,%edx
    4aa5:	48 29 d8             	sub    %rbx,%rax
    4aa8:	48 39 d0             	cmp    %rdx,%rax
    4aab:	7d 39                	jge    4ae6 <upack+0x86>
    4aad:	48 01 c2             	add    %rax,%rdx
    4ab0:	48 c1 ea 20          	shr    $0x20,%rdx
    4ab4:	75 0d                	jne    4ac3 <upack+0x63>
    4ab6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4aba:	c9                   	leave
    4abb:	c3                   	ret
    4abc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4ac1:	eb f3                	jmp    4ab6 <upack+0x56>
    4ac3:	48 89 c1             	mov    %rax,%rcx
    4ac6:	41 b8 00 00 00 80    	mov    $0x80000000,%r8d
    4acc:	31 c0                	xor    %eax,%eax
    4ace:	ba a0 00 00 00       	mov    $0xa0,%edx
    4ad3:	48 8d 35 67 37 00 00 	lea    0x3767(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    4ada:	48 8d 3d ef 3d 00 00 	lea    0x3def(%rip),%rdi        # 88d0 <_IO_stdin_used+0x8d0>
    4ae1:	e8 0a f0 ff ff       	call   3af0 <eprintf>
    4ae6:	48 89 c1             	mov    %rax,%rcx
    4ae9:	41 b8 ff ff ff 7f    	mov    $0x7fffffff,%r8d
    4aef:	31 c0                	xor    %eax,%eax
    4af1:	ba a0 00 00 00       	mov    $0xa0,%edx
    4af6:	48 8d 35 44 37 00 00 	lea    0x3744(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    4afd:	48 8d 3d 9c 3d 00 00 	lea    0x3d9c(%rip),%rdi        # 88a0 <_IO_stdin_used+0x8a0>
    4b04:	e8 e7 ef ff ff       	call   3af0 <eprintf>
    4b09:	ba 9c 00 00 00       	mov    $0x9c,%edx
    4b0e:	48 8d 35 2c 37 00 00 	lea    0x372c(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    4b15:	48 8d 3d 54 37 00 00 	lea    0x3754(%rip),%rdi        # 8270 <_IO_stdin_used+0x270>
    4b1c:	31 c0                	xor    %eax,%eax
    4b1e:	e8 cd ef ff ff       	call   3af0 <eprintf>
    4b23:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    4b2a:	00 00 00 00 
    4b2e:	66 90                	xchg   %ax,%ax

0000000000004b30 <ppack>:
    4b30:	f3 0f 1e fa          	endbr64
    4b34:	55                   	push   %rbp
    4b35:	48 89 e5             	mov    %rsp,%rbp
    4b38:	41 57                	push   %r15
    4b3a:	41 56                	push   %r14
    4b3c:	41 55                	push   %r13
    4b3e:	41 54                	push   %r12
    4b40:	53                   	push   %rbx
    4b41:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    4b48:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
    4b4f:	89 f7                	mov    %esi,%edi
    4b51:	48 8d b5 58 ff ff ff 	lea    -0xa8(%rbp),%rsi
    4b58:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4b5f:	00 00 
    4b61:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4b65:	31 c0                	xor    %eax,%eax
    4b67:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
    4b6e:	00 00 00 00 
    4b72:	e8 69 fe ff ff       	call   49e0 <pack>
    4b77:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
    4b7d:	85 c0                	test   %eax,%eax
    4b7f:	0f 88 57 01 00 00    	js     4cdc <ppack+0x1ac>
    4b85:	48 8d 3d 08 37 00 00 	lea    0x3708(%rip),%rdi        # 8294 <_IO_stdin_used+0x294>
    4b8c:	48 63 9d 4c ff ff ff 	movslq -0xb4(%rbp),%rbx
    4b93:	e8 e8 d8 ff ff       	call   2480 <getenv@plt>
    4b98:	48 85 c0             	test   %rax,%rax
    4b9b:	0f 84 cf 00 00 00    	je     4c70 <ppack+0x140>
    4ba1:	31 f6                	xor    %esi,%esi
    4ba3:	ba 0a 00 00 00       	mov    $0xa,%edx
    4ba8:	48 89 c7             	mov    %rax,%rdi
    4bab:	e8 e0 d8 ff ff       	call   2490 <__isoc23_strtoul@plt>
    4bb0:	48 85 c0             	test   %rax,%rax
    4bb3:	0f 84 b7 00 00 00    	je     4c70 <ppack+0x140>
    4bb9:	48 39 d8             	cmp    %rbx,%rax
    4bbc:	0f 82 00 01 00 00    	jb     4cc2 <ppack+0x192>
    4bc2:	48 8d bd 60 ff ff ff 	lea    -0xa0(%rbp),%rdi
    4bc9:	31 f6                	xor    %esi,%esi
    4bcb:	e8 a0 dc ff ff       	call   2870 <__sigsetjmp@plt>
    4bd0:	f3 0f 1e fa          	endbr64
    4bd4:	85 c0                	test   %eax,%eax
    4bd6:	0f 85 b4 00 00 00    	jne    4c90 <ppack+0x160>
    4bdc:	4c 8d ad 60 ff ff ff 	lea    -0xa0(%rbp),%r13
    4be3:	4c 8d 35 96 75 00 00 	lea    0x7596(%rip),%r14        # c180 <ck_mutex_lock>
    4bea:	4c 89 ef             	mov    %r13,%rdi
    4bed:	e8 4e dc ff ff       	call   2840 <__pthread_register_cancel@plt>
    4bf2:	4c 89 f7             	mov    %r14,%rdi
    4bf5:	e8 96 dc ff ff       	call   2890 <pthread_mutex_lock@plt>
    4bfa:	48 63 9d 4c ff ff ff 	movslq -0xb4(%rbp),%rbx
    4c01:	be 01 00 00 00       	mov    $0x1,%esi
    4c06:	4c 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%r15
    4c0d:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
    4c14:	4c 89 f9             	mov    %r15,%rcx
    4c17:	48 89 da             	mov    %rbx,%rdx
    4c1a:	e8 01 dc ff ff       	call   2820 <fwrite@plt>
    4c1f:	4c 89 ff             	mov    %r15,%rdi
    4c22:	49 89 c4             	mov    %rax,%r12
    4c25:	e8 b6 da ff ff       	call   26e0 <fflush@plt>
    4c2a:	4c 89 f7             	mov    %r14,%rdi
    4c2d:	e8 8e da ff ff       	call   26c0 <pthread_mutex_unlock@plt>
    4c32:	4c 89 ef             	mov    %r13,%rdi
    4c35:	e8 c6 d9 ff ff       	call   2600 <__pthread_unregister_cancel@plt>
    4c3a:	4c 39 e3             	cmp    %r12,%rbx
    4c3d:	75 69                	jne    4ca8 <ppack+0x178>
    4c3f:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
    4c46:	e8 15 d8 ff ff       	call   2460 <free@plt>
    4c4b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4c4f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    4c56:	00 00 
    4c58:	0f 85 98 00 00 00    	jne    4cf6 <ppack+0x1c6>
    4c5e:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    4c65:	5b                   	pop    %rbx
    4c66:	41 5c                	pop    %r12
    4c68:	41 5d                	pop    %r13
    4c6a:	41 5e                	pop    %r14
    4c6c:	41 5f                	pop    %r15
    4c6e:	5d                   	pop    %rbp
    4c6f:	c3                   	ret
    4c70:	48 8b 05 31 75 00 00 	mov    0x7531(%rip),%rax        # c1a8 <ck_max_msg_size>
    4c77:	ba 00 10 00 00       	mov    $0x1000,%edx
    4c7c:	48 85 c0             	test   %rax,%rax
    4c7f:	48 0f 44 c2          	cmove  %rdx,%rax
    4c83:	e9 31 ff ff ff       	jmp    4bb9 <ppack+0x89>
    4c88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4c8f:	00 
    4c90:	48 8d 3d e9 74 00 00 	lea    0x74e9(%rip),%rdi        # c180 <ck_mutex_lock>
    4c97:	e8 e4 f8 ff ff       	call   4580 <ppack_cleanup>
    4c9c:	48 8d bd 60 ff ff ff 	lea    -0xa0(%rbp),%rdi
    4ca3:	e8 98 da ff ff       	call   2740 <__pthread_unwind_next@plt>
    4ca8:	ba 7d 01 00 00       	mov    $0x17d,%edx
    4cad:	48 8d 35 8d 35 00 00 	lea    0x358d(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    4cb4:	48 8d 3d 01 36 00 00 	lea    0x3601(%rip),%rdi        # 82bc <_IO_stdin_used+0x2bc>
    4cbb:	31 c0                	xor    %eax,%eax
    4cbd:	e8 2e ee ff ff       	call   3af0 <eprintf>
    4cc2:	ba 74 01 00 00       	mov    $0x174,%edx
    4cc7:	48 8d 35 73 35 00 00 	lea    0x3573(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    4cce:	48 8d 3d cf 35 00 00 	lea    0x35cf(%rip),%rdi        # 82a4 <_IO_stdin_used+0x2a4>
    4cd5:	31 c0                	xor    %eax,%eax
    4cd7:	e8 14 ee ff ff       	call   3af0 <eprintf>
    4cdc:	ba 74 01 00 00       	mov    $0x174,%edx
    4ce1:	48 8d 35 59 35 00 00 	lea    0x3559(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    4ce8:	48 8d 3d 99 35 00 00 	lea    0x3599(%rip),%rdi        # 8288 <_IO_stdin_used+0x288>
    4cef:	31 c0                	xor    %eax,%eax
    4cf1:	e8 fa ed ff ff       	call   3af0 <eprintf>
    4cf6:	e8 b5 d8 ff ff       	call   25b0 <__stack_chk_fail@plt>
    4cfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004d00 <rcvmsg_free>:
    4d00:	f3 0f 1e fa          	endbr64
    4d04:	55                   	push   %rbp
    4d05:	48 89 e5             	mov    %rsp,%rbp
    4d08:	53                   	push   %rbx
    4d09:	48 89 fb             	mov    %rdi,%rbx
    4d0c:	48 83 ec 08          	sub    $0x8,%rsp
    4d10:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    4d14:	e8 47 d7 ff ff       	call   2460 <free@plt>
    4d19:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    4d1d:	e8 3e d7 ff ff       	call   2460 <free@plt>
    4d22:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    4d26:	e8 35 d7 ff ff       	call   2460 <free@plt>
    4d2b:	48 89 df             	mov    %rbx,%rdi
    4d2e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4d32:	c9                   	leave
    4d33:	e9 28 d7 ff ff       	jmp    2460 <free@plt>
    4d38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4d3f:	00 

0000000000004d40 <punpack>:
    4d40:	f3 0f 1e fa          	endbr64
    4d44:	55                   	push   %rbp
    4d45:	48 89 e5             	mov    %rsp,%rbp
    4d48:	41 57                	push   %r15
    4d4a:	41 56                	push   %r14
    4d4c:	41 55                	push   %r13
    4d4e:	41 54                	push   %r12
    4d50:	53                   	push   %rbx
    4d51:	48 8d 1d 3c 35 00 00 	lea    0x353c(%rip),%rbx        # 8294 <_IO_stdin_used+0x294>
    4d58:	48 83 ec 58          	sub    $0x58,%rsp
    4d5c:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    4d60:	bf 38 00 00 00       	mov    $0x38,%edi
    4d65:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4d6c:	00 00 
    4d6e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4d72:	31 c0                	xor    %eax,%eax
    4d74:	e8 b7 ee ff ff       	call   3c30 <emalloc>
    4d79:	48 89 df             	mov    %rbx,%rdi
    4d7c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4d83:	49 89 c5             	mov    %rax,%r13
    4d86:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    4d8d:	00 
    4d8e:	c7 40 30 ff ff ff ff 	movl   $0xffffffff,0x30(%rax)
    4d95:	c7 40 20 ff ff ff ff 	movl   $0xffffffff,0x20(%rax)
    4d9c:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    4da3:	00 
    4da4:	c7 40 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rax)
    4dab:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4db2:	00 
    4db3:	e8 c8 d6 ff ff       	call   2480 <getenv@plt>
    4db8:	48 85 c0             	test   %rax,%rax
    4dbb:	74 18                	je     4dd5 <punpack+0x95>
    4dbd:	31 f6                	xor    %esi,%esi
    4dbf:	ba 0a 00 00 00       	mov    $0xa,%edx
    4dc4:	48 89 c7             	mov    %rax,%rdi
    4dc7:	e8 c4 d6 ff ff       	call   2490 <__isoc23_strtoul@plt>
    4dcc:	48 85 c0             	test   %rax,%rax
    4dcf:	0f 85 53 02 00 00    	jne    5028 <punpack+0x2e8>
    4dd5:	48 8b 05 cc 73 00 00 	mov    0x73cc(%rip),%rax        # c1a8 <ck_max_msg_size>
    4ddc:	48 8d 3c 00          	lea    (%rax,%rax,1),%rdi
    4de0:	48 85 c0             	test   %rax,%rax
    4de3:	b8 00 20 00 00       	mov    $0x2000,%eax
    4de8:	48 0f 44 f8          	cmove  %rax,%rdi
    4dec:	e8 3f ee ff ff       	call   3c30 <emalloc>
    4df1:	48 89 df             	mov    %rbx,%rdi
    4df4:	49 89 c4             	mov    %rax,%r12
    4df7:	e8 84 d6 ff ff       	call   2480 <getenv@plt>
    4dfc:	48 85 c0             	test   %rax,%rax
    4dff:	74 18                	je     4e19 <punpack+0xd9>
    4e01:	31 f6                	xor    %esi,%esi
    4e03:	ba 0a 00 00 00       	mov    $0xa,%edx
    4e08:	48 89 c7             	mov    %rax,%rdi
    4e0b:	e8 80 d6 ff ff       	call   2490 <__isoc23_strtoul@plt>
    4e10:	48 85 c0             	test   %rax,%rax
    4e13:	0f 85 ff 01 00 00    	jne    5018 <punpack+0x2d8>
    4e19:	48 8b 05 88 73 00 00 	mov    0x7388(%rip),%rax        # c1a8 <ck_max_msg_size>
    4e20:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
    4e24:	48 85 c0             	test   %rax,%rax
    4e27:	b8 00 20 00 00       	mov    $0x2000,%eax
    4e2c:	48 0f 44 f0          	cmove  %rax,%rsi
    4e30:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    4e34:	4c 89 e2             	mov    %r12,%rdx
    4e37:	e8 54 f7 ff ff       	call   4590 <read_buf>
    4e3c:	49 89 c6             	mov    %rax,%r14
    4e3f:	48 89 c3             	mov    %rax,%rbx
    4e42:	48 8d 45 ac          	lea    -0x54(%rbp),%rax
    4e46:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4e4a:	eb 46                	jmp    4e92 <punpack+0x152>
    4e4c:	0f 1f 40 00          	nopl   0x0(%rax)
    4e50:	83 f8 02             	cmp    $0x2,%eax
    4e53:	74 7b                	je     4ed0 <punpack+0x190>
    4e55:	83 f8 01             	cmp    $0x1,%eax
    4e58:	0f 84 8a 00 00 00    	je     4ee8 <punpack+0x1a8>
    4e5e:	83 f8 03             	cmp    $0x3,%eax
    4e61:	0f 85 0e 02 00 00    	jne    5075 <punpack+0x335>
    4e67:	8b 45 b0             	mov    -0x50(%rbp),%eax
    4e6a:	41 89 45 30          	mov    %eax,0x30(%r13)
    4e6e:	4c 39 fb             	cmp    %r15,%rbx
    4e71:	0f 8c e4 01 00 00    	jl     505b <punpack+0x31b>
    4e77:	4c 29 fb             	sub    %r15,%rbx
    4e7a:	4b 8d 34 3c          	lea    (%r12,%r15,1),%rsi
    4e7e:	4c 89 e7             	mov    %r12,%rdi
    4e81:	48 89 da             	mov    %rbx,%rdx
    4e84:	e8 07 d9 ff ff       	call   2790 <memmove@plt>
    4e89:	4d 85 f6             	test   %r14,%r14
    4e8c:	0f 85 1e 01 00 00    	jne    4fb0 <punpack+0x270>
    4e92:	48 85 db             	test   %rbx,%rbx
    4e95:	0f 84 d5 00 00 00    	je     4f70 <punpack+0x230>
    4e9b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    4e9f:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
    4ea3:	4c 89 e7             	mov    %r12,%rdi
    4ea6:	e8 b5 fb ff ff       	call   4a60 <upack>
    4eab:	85 c0                	test   %eax,%eax
    4ead:	0f 88 8e 01 00 00    	js     5041 <punpack+0x301>
    4eb3:	4c 63 f8             	movslq %eax,%r15
    4eb6:	8b 45 ac             	mov    -0x54(%rbp),%eax
    4eb9:	85 c0                	test   %eax,%eax
    4ebb:	75 93                	jne    4e50 <punpack+0x110>
    4ebd:	41 8b 4d 00          	mov    0x0(%r13),%ecx
    4ec1:	8b 45 b0             	mov    -0x50(%rbp),%eax
    4ec4:	85 c9                	test   %ecx,%ecx
    4ec6:	75 40                	jne    4f08 <punpack+0x1c8>
    4ec8:	41 89 45 00          	mov    %eax,0x0(%r13)
    4ecc:	eb a0                	jmp    4e6e <punpack+0x12e>
    4ece:	66 90                	xchg   %ax,%ax
    4ed0:	41 8b 55 04          	mov    0x4(%r13),%edx
    4ed4:	85 d2                	test   %edx,%edx
    4ed6:	74 58                	je     4f30 <punpack+0x1f0>
    4ed8:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    4edc:	e8 7f d5 ff ff       	call   2460 <free@plt>
    4ee1:	eb 8b                	jmp    4e6e <punpack+0x12e>
    4ee3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4ee8:	49 83 7d 28 00       	cmpq   $0x0,0x28(%r13)
    4eed:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    4ef1:	0f 84 d9 00 00 00    	je     4fd0 <punpack+0x290>
    4ef7:	e8 64 d5 ff ff       	call   2460 <free@plt>
    4efc:	e9 6d ff ff ff       	jmp    4e6e <punpack+0x12e>
    4f01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4f08:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4f0c:	89 45 90             	mov    %eax,-0x70(%rbp)
    4f0f:	e8 4c d5 ff ff       	call   2460 <free@plt>
    4f14:	41 c7 45 10 ff ff ff 	movl   $0xffffffff,0x10(%r13)
    4f1b:	ff 
    4f1c:	8b 45 90             	mov    -0x70(%rbp),%eax
    4f1f:	49 c7 45 08 00 00 00 	movq   $0x0,0x8(%r13)
    4f26:	00 
    4f27:	eb 9f                	jmp    4ec8 <punpack+0x188>
    4f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4f30:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f34:	41 83 7d 00 02       	cmpl   $0x2,0x0(%r13)
    4f39:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4f3d:	8b 45 b0             	mov    -0x50(%rbp),%eax
    4f40:	89 45 84             	mov    %eax,-0x7c(%rbp)
    4f43:	0f 84 a7 00 00 00    	je     4ff0 <punpack+0x2b0>
    4f49:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4f4d:	e8 0e d5 ff ff       	call   2460 <free@plt>
    4f52:	8b 45 84             	mov    -0x7c(%rbp),%eax
    4f55:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
    4f59:	41 89 45 10          	mov    %eax,0x10(%r13)
    4f5d:	e8 ee d8 ff ff       	call   2850 <strdup@plt>
    4f62:	49 89 45 08          	mov    %rax,0x8(%r13)
    4f66:	e9 6d ff ff ff       	jmp    4ed8 <punpack+0x198>
    4f6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4f70:	4c 89 e7             	mov    %r12,%rdi
    4f73:	e8 e8 d4 ff ff       	call   2460 <free@plt>
    4f78:	41 8b 45 00          	mov    0x0(%r13),%eax
    4f7c:	85 c0                	test   %eax,%eax
    4f7e:	0f 84 ad 00 00 00    	je     5031 <punpack+0x2f1>
    4f84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4f88:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    4f8f:	00 00 
    4f91:	0f 85 fa 00 00 00    	jne    5091 <punpack+0x351>
    4f97:	48 83 c4 58          	add    $0x58,%rsp
    4f9b:	4c 89 e8             	mov    %r13,%rax
    4f9e:	5b                   	pop    %rbx
    4f9f:	41 5c                	pop    %r12
    4fa1:	41 5d                	pop    %r13
    4fa3:	41 5e                	pop    %r14
    4fa5:	41 5f                	pop    %r15
    4fa7:	5d                   	pop    %rbp
    4fa8:	c3                   	ret
    4fa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4fb0:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    4fb4:	49 8d 14 1c          	lea    (%r12,%rbx,1),%rdx
    4fb8:	4c 89 fe             	mov    %r15,%rsi
    4fbb:	e8 d0 f5 ff ff       	call   4590 <read_buf>
    4fc0:	49 89 c6             	mov    %rax,%r14
    4fc3:	48 01 c3             	add    %rax,%rbx
    4fc6:	e9 c7 fe ff ff       	jmp    4e92 <punpack+0x152>
    4fcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4fd0:	48 89 7d 90          	mov    %rdi,-0x70(%rbp)
    4fd4:	e8 77 d8 ff ff       	call   2850 <strdup@plt>
    4fd9:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
    4fdd:	49 89 45 28          	mov    %rax,0x28(%r13)
    4fe1:	41 8b 45 00          	mov    0x0(%r13),%eax
    4fe5:	41 89 45 04          	mov    %eax,0x4(%r13)
    4fe9:	e9 09 ff ff ff       	jmp    4ef7 <punpack+0x1b7>
    4fee:	66 90                	xchg   %ax,%ax
    4ff0:	49 8b 7d 18          	mov    0x18(%r13),%rdi
    4ff4:	e8 67 d4 ff ff       	call   2460 <free@plt>
    4ff9:	8b 45 84             	mov    -0x7c(%rbp),%eax
    4ffc:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
    5000:	41 89 45 20          	mov    %eax,0x20(%r13)
    5004:	e8 47 d8 ff ff       	call   2850 <strdup@plt>
    5009:	49 89 45 18          	mov    %rax,0x18(%r13)
    500d:	e9 c6 fe ff ff       	jmp    4ed8 <punpack+0x198>
    5012:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5018:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
    501c:	e9 0f fe ff ff       	jmp    4e30 <punpack+0xf0>
    5021:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5028:	48 8d 3c 00          	lea    (%rax,%rax,1),%rdi
    502c:	e9 bb fd ff ff       	jmp    4dec <punpack+0xac>
    5031:	4c 89 ef             	mov    %r13,%rdi
    5034:	45 31 ed             	xor    %r13d,%r13d
    5037:	e8 24 d4 ff ff       	call   2460 <free@plt>
    503c:	e9 43 ff ff ff       	jmp    4f84 <punpack+0x244>
    5041:	ba 9c 01 00 00       	mov    $0x19c,%edx
    5046:	48 8d 35 f4 31 00 00 	lea    0x31f4(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    504d:	48 8d 3d 81 32 00 00 	lea    0x3281(%rip),%rdi        # 82d5 <_IO_stdin_used+0x2d5>
    5054:	31 c0                	xor    %eax,%eax
    5056:	e8 95 ea ff ff       	call   3af0 <eprintf>
    505b:	ba 16 02 00 00       	mov    $0x216,%edx
    5060:	48 8d 35 da 31 00 00 	lea    0x31da(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    5067:	48 8d 3d 7e 32 00 00 	lea    0x327e(%rip),%rdi        # 82ec <_IO_stdin_used+0x2ec>
    506e:	31 c0                	xor    %eax,%eax
    5070:	e8 7b ea ff ff       	call   3af0 <eprintf>
    5075:	89 c1                	mov    %eax,%ecx
    5077:	ba c7 01 00 00       	mov    $0x1c7,%edx
    507c:	48 8d 35 be 31 00 00 	lea    0x31be(%rip),%rsi        # 8241 <_IO_stdin_used+0x241>
    5083:	31 c0                	xor    %eax,%eax
    5085:	48 8d 3d e4 31 00 00 	lea    0x31e4(%rip),%rdi        # 8270 <_IO_stdin_used+0x270>
    508c:	e8 5f ea ff ff       	call   3af0 <eprintf>
    5091:	e8 1a d5 ff ff       	call   25b0 <__stack_chk_fail@plt>
    5096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    509d:	00 00 00 

00000000000050a0 <srunner_run_teardown>:
    50a0:	55                   	push   %rbp
    50a1:	48 89 e5             	mov    %rsp,%rbp
    50a4:	48 83 ec 20          	sub    $0x20,%rsp
    50a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50ac:	89 75 f4             	mov    %esi,-0xc(%rbp)
    50af:	e8 6c ed ff ff       	call   3e20 <check_list_front>
    50b4:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    50b8:	e8 43 ed ff ff       	call   3e00 <check_list_at_end>
    50bd:	85 c0                	test   %eax,%eax
    50bf:	74 07                	je     50c8 <srunner_run_teardown+0x28>
    50c1:	c9                   	leave
    50c2:	c3                   	ret
    50c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    50c8:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    50cc:	e8 af ed ff ff       	call   3e80 <check_list_val>
    50d1:	bf 03 00 00 00       	mov    $0x3,%edi
    50d6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    50da:	e8 e1 f0 ff ff       	call   41c0 <send_ctx_info>
    50df:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
    50e3:	74 1b                	je     5100 <srunner_run_teardown+0x60>
    50e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50e9:	ff 50 08             	call   *0x8(%rax)
    50ec:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    50f0:	e8 bb ed ff ff       	call   3eb0 <check_list_advance>
    50f5:	eb bd                	jmp    50b4 <srunner_run_teardown+0x14>
    50f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    50fe:	00 00 
    5100:	48 8d 3d 79 6f 00 00 	lea    0x6f79(%rip),%rdi        # c080 <error_jmp_buffer>
    5107:	e8 64 d5 ff ff       	call   2670 <_setjmp@plt>
    510c:	f3 0f 1e fa          	endbr64
    5110:	85 c0                	test   %eax,%eax
    5112:	74 d1                	je     50e5 <srunner_run_teardown+0x45>
    5114:	c9                   	leave
    5115:	c3                   	ret
    5116:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    511d:	00 00 00 

0000000000005120 <srunner_add_failure>:
    5120:	55                   	push   %rbp
    5121:	48 89 e5             	mov    %rsp,%rbp
    5124:	41 54                	push   %r12
    5126:	49 89 fc             	mov    %rdi,%r12
    5129:	53                   	push   %rbx
    512a:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    512e:	48 89 f3             	mov    %rsi,%rbx
    5131:	e8 4a ec ff ff       	call   3d80 <check_list_add_end>
    5136:	49 8b 44 24 08       	mov    0x8(%r12),%rax
    513b:	8b 13                	mov    (%rbx),%edx
    513d:	83 00 01             	addl   $0x1,(%rax)
    5140:	83 fa 02             	cmp    $0x2,%edx
    5143:	74 1b                	je     5160 <srunner_add_failure+0x40>
    5145:	83 fa 03             	cmp    $0x3,%edx
    5148:	74 06                	je     5150 <srunner_add_failure+0x30>
    514a:	5b                   	pop    %rbx
    514b:	41 5c                	pop    %r12
    514d:	5d                   	pop    %rbp
    514e:	c3                   	ret
    514f:	90                   	nop
    5150:	83 40 08 01          	addl   $0x1,0x8(%rax)
    5154:	5b                   	pop    %rbx
    5155:	41 5c                	pop    %r12
    5157:	5d                   	pop    %rbp
    5158:	c3                   	ret
    5159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5160:	83 40 04 01          	addl   $0x1,0x4(%rax)
    5164:	5b                   	pop    %rbx
    5165:	41 5c                	pop    %r12
    5167:	5d                   	pop    %rbp
    5168:	c3                   	ret
    5169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005170 <signal_error_msg>:
    5170:	55                   	push   %rbp
    5171:	48 89 e5             	mov    %rsp,%rbp
    5174:	41 57                	push   %r15
    5176:	41 89 ff             	mov    %edi,%r15d
    5179:	bf 64 00 00 00       	mov    $0x64,%edi
    517e:	41 56                	push   %r14
    5180:	41 55                	push   %r13
    5182:	41 89 f5             	mov    %esi,%r13d
    5185:	41 54                	push   %r12
    5187:	53                   	push   %rbx
    5188:	48 83 ec 08          	sub    $0x8,%rsp
    518c:	e8 9f ea ff ff       	call   3c30 <emalloc>
    5191:	44 89 ff             	mov    %r15d,%edi
    5194:	48 89 c3             	mov    %rax,%rbx
    5197:	e8 84 d5 ff ff       	call   2720 <strsignal@plt>
    519c:	48 89 c7             	mov    %rax,%rdi
    519f:	e8 ac d6 ff ff       	call   2850 <strdup@plt>
    51a4:	44 89 ef             	mov    %r13d,%edi
    51a7:	49 89 c6             	mov    %rax,%r14
    51aa:	e8 71 d5 ff ff       	call   2720 <strsignal@plt>
    51af:	48 89 c7             	mov    %rax,%rdi
    51b2:	e8 99 d6 ff ff       	call   2850 <strdup@plt>
    51b7:	8b 0d bf 73 00 00    	mov    0x73bf(%rip),%ecx        # c57c <alarm_received>
    51bd:	49 89 c4             	mov    %rax,%r12
    51c0:	85 c9                	test   %ecx,%ecx
    51c2:	74 54                	je     5218 <signal_error_msg+0xa8>
    51c4:	48 83 ec 08          	sub    $0x8,%rsp
    51c8:	ba 02 00 00 00       	mov    $0x2,%edx
    51cd:	45 89 e9             	mov    %r13d,%r9d
    51d0:	48 89 df             	mov    %rbx,%rdi
    51d3:	50                   	push   %rax
    51d4:	4c 8d 05 25 37 00 00 	lea    0x3725(%rip),%r8        # 8900 <_IO_stdin_used+0x900>
    51db:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    51e2:	31 c0                	xor    %eax,%eax
    51e4:	be 64 00 00 00       	mov    $0x64,%esi
    51e9:	e8 c2 d2 ff ff       	call   24b0 <__snprintf_chk@plt>
    51ee:	58                   	pop    %rax
    51ef:	5a                   	pop    %rdx
    51f0:	4c 89 f7             	mov    %r14,%rdi
    51f3:	e8 68 d2 ff ff       	call   2460 <free@plt>
    51f8:	4c 89 e7             	mov    %r12,%rdi
    51fb:	e8 60 d2 ff ff       	call   2460 <free@plt>
    5200:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    5204:	48 89 d8             	mov    %rbx,%rax
    5207:	5b                   	pop    %rbx
    5208:	41 5c                	pop    %r12
    520a:	41 5d                	pop    %r13
    520c:	41 5e                	pop    %r14
    520e:	41 5f                	pop    %r15
    5210:	5d                   	pop    %rbp
    5211:	c3                   	ret
    5212:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5218:	48 83 ec 08          	sub    $0x8,%rsp
    521c:	45 89 f9             	mov    %r15d,%r9d
    521f:	ba 02 00 00 00       	mov    $0x2,%edx
    5224:	48 89 df             	mov    %rbx,%rdi
    5227:	50                   	push   %rax
    5228:	4c 8d 05 01 37 00 00 	lea    0x3701(%rip),%r8        # 8930 <_IO_stdin_used+0x930>
    522f:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    5236:	31 c0                	xor    %eax,%eax
    5238:	41 55                	push   %r13
    523a:	be 64 00 00 00       	mov    $0x64,%esi
    523f:	41 56                	push   %r14
    5241:	e8 6a d2 ff ff       	call   24b0 <__snprintf_chk@plt>
    5246:	48 83 c4 20          	add    $0x20,%rsp
    524a:	eb a4                	jmp    51f0 <signal_error_msg+0x80>
    524c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005250 <sig_handler>:
    5250:	f3 0f 1e fa          	endbr64
    5254:	83 ff 0e             	cmp    $0xe,%edi
    5257:	74 77                	je     52d0 <sig_handler+0x80>
    5259:	55                   	push   %rbp
    525a:	48 89 e5             	mov    %rsp,%rbp
    525d:	53                   	push   %rbx
    525e:	89 fb                	mov    %edi,%ebx
    5260:	48 83 ec 08          	sub    $0x8,%rsp
    5264:	83 ff 0f             	cmp    $0xf,%edi
    5267:	74 27                	je     5290 <sig_handler+0x40>
    5269:	83 ff 02             	cmp    $0x2,%edi
    526c:	75 7c                	jne    52ea <sig_handler+0x9a>
    526e:	48 8d 35 6b 72 00 00 	lea    0x726b(%rip),%rsi        # c4e0 <sigint_old_action>
    5275:	31 d2                	xor    %edx,%edx
    5277:	bf 02 00 00 00       	mov    $0x2,%edi
    527c:	e8 af d2 ff ff       	call   2530 <sigaction@plt>
    5281:	be 09 00 00 00       	mov    $0x9,%esi
    5286:	eb 20                	jmp    52a8 <sig_handler+0x58>
    5288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    528f:	00 
    5290:	48 8d 35 a9 71 00 00 	lea    0x71a9(%rip),%rsi        # c440 <sigterm_old_action>
    5297:	31 d2                	xor    %edx,%edx
    5299:	bf 0f 00 00 00       	mov    $0xf,%edi
    529e:	e8 8d d2 ff ff       	call   2530 <sigaction@plt>
    52a3:	be 0f 00 00 00       	mov    $0xf,%esi
    52a8:	8b 3d ca 72 00 00    	mov    0x72ca(%rip),%edi        # c578 <group_pid>
    52ae:	e8 3d d4 ff ff       	call   26f0 <killpg@plt>
    52b3:	e8 f8 d4 ff ff       	call   27b0 <getpgrp@plt>
    52b8:	89 de                	mov    %ebx,%esi
    52ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52be:	c9                   	leave
    52bf:	89 c7                	mov    %eax,%edi
    52c1:	e9 2a d4 ff ff       	jmp    26f0 <killpg@plt>
    52c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    52cd:	00 00 00 
    52d0:	8b 3d a2 72 00 00    	mov    0x72a2(%rip),%edi        # c578 <group_pid>
    52d6:	be 09 00 00 00       	mov    $0x9,%esi
    52db:	c7 05 97 72 00 00 01 	movl   $0x1,0x7297(%rip)        # c57c <alarm_received>
    52e2:	00 00 00 
    52e5:	e9 06 d4 ff ff       	jmp    26f0 <killpg@plt>
    52ea:	89 f9                	mov    %edi,%ecx
    52ec:	ba 8e 00 00 00       	mov    $0x8e,%edx
    52f1:	48 8d 35 10 30 00 00 	lea    0x3010(%rip),%rsi        # 8308 <_IO_stdin_used+0x308>
    52f8:	31 c0                	xor    %eax,%eax
    52fa:	48 8d 3d 1d 30 00 00 	lea    0x301d(%rip),%rdi        # 831e <_IO_stdin_used+0x31e>
    5301:	e8 ea e7 ff ff       	call   3af0 <eprintf>
    5306:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    530d:	00 00 00 

0000000000005310 <srunner_run_setup>:
    5310:	55                   	push   %rbp
    5311:	48 89 e5             	mov    %rsp,%rbp
    5314:	53                   	push   %rbx
    5315:	48 83 ec 38          	sub    $0x38,%rsp
    5319:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    531d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    5320:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    5324:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    5328:	83 fe 01             	cmp    $0x1,%esi
    532b:	75 0a                	jne    5337 <srunner_run_setup+0x27>
    532d:	bf 01 00 00 00       	mov    $0x1,%edi
    5332:	e8 89 ee ff ff       	call   41c0 <send_ctx_info>
    5337:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    533b:	e8 e0 ea ff ff       	call   3e20 <check_list_front>
    5340:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    5344:	e8 b7 ea ff ff       	call   3e00 <check_list_at_end>
    5349:	85 c0                	test   %eax,%eax
    534b:	75 30                	jne    537d <srunner_run_setup+0x6d>
    534d:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    5351:	e8 2a eb ff ff       	call   3e80 <check_list_val>
    5356:	83 7d e4 02          	cmpl   $0x2,-0x1c(%rbp)
    535a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    535e:	74 30                	je     5390 <srunner_run_setup+0x80>
    5360:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5364:	ff 50 08             	call   *0x8(%rax)
    5367:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    536b:	e8 40 eb ff ff       	call   3eb0 <check_list_advance>
    5370:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    5374:	e8 87 ea ff ff       	call   3e00 <check_list_at_end>
    5379:	85 c0                	test   %eax,%eax
    537b:	74 d0                	je     534d <srunner_run_setup+0x3d>
    537d:	31 db                	xor    %ebx,%ebx
    537f:	48 89 d8             	mov    %rbx,%rax
    5382:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5386:	c9                   	leave
    5387:	c3                   	ret
    5388:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    538f:	00 
    5390:	bf 01 00 00 00       	mov    $0x1,%edi
    5395:	e8 26 ee ff ff       	call   41c0 <send_ctx_info>
    539a:	48 8d 3d df 6c 00 00 	lea    0x6cdf(%rip),%rdi        # c080 <error_jmp_buffer>
    53a1:	e8 ca d2 ff ff       	call   2670 <_setjmp@plt>
    53a6:	f3 0f 1e fa          	endbr64
    53aa:	85 c0                	test   %eax,%eax
    53ac:	75 07                	jne    53b5 <srunner_run_setup+0xa5>
    53ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    53b2:	ff 50 08             	call   *0x8(%rax)
    53b5:	31 ff                	xor    %edi,%edi
    53b7:	e8 24 ef ff ff       	call   42e0 <receive_test_result>
    53bc:	48 89 c3             	mov    %rax,%rbx
    53bf:	48 85 c0             	test   %rax,%rax
    53c2:	74 5b                	je     541f <srunner_run_setup+0x10f>
    53c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    53c8:	48 83 7b 30 00       	cmpq   $0x0,0x30(%rbx)
    53cd:	48 89 43 20          	mov    %rax,0x20(%rbx)
    53d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    53d5:	48 89 43 28          	mov    %rax,0x28(%rbx)
    53d9:	48 8b 05 60 32 00 00 	mov    0x3260(%rip),%rax        # 8640 <_IO_stdin_used+0x640>
    53e0:	48 89 43 14          	mov    %rax,0x14(%rbx)
    53e4:	74 0a                	je     53f0 <srunner_run_setup+0xe0>
    53e6:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)
    53ec:	eb 91                	jmp    537f <srunner_run_setup+0x6f>
    53ee:	66 90                	xchg   %ax,%ax
    53f0:	48 8d 3d 5a 2f 00 00 	lea    0x2f5a(%rip),%rdi        # 8351 <_IO_stdin_used+0x351>
    53f7:	e8 54 d4 ff ff       	call   2850 <strdup@plt>
    53fc:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    5400:	48 89 43 30          	mov    %rax,0x30(%rbx)
    5404:	e8 57 d0 ff ff       	call   2460 <free@plt>
    5409:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    540d:	e8 4e d0 ff ff       	call   2460 <free@plt>
    5412:	48 89 df             	mov    %rbx,%rdi
    5415:	e8 46 d0 ff ff       	call   2460 <free@plt>
    541a:	e9 48 ff ff ff       	jmp    5367 <srunner_run_setup+0x57>
    541f:	ba b8 01 00 00       	mov    $0x1b8,%edx
    5424:	48 8d 35 dd 2e 00 00 	lea    0x2edd(%rip),%rsi        # 8308 <_IO_stdin_used+0x308>
    542b:	48 8d 3d 01 2f 00 00 	lea    0x2f01(%rip),%rdi        # 8333 <_IO_stdin_used+0x333>
    5432:	31 c0                	xor    %eax,%eax
    5434:	e8 b7 e6 ff ff       	call   3af0 <eprintf>
    5439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005440 <tcase_run_tfun_nofork>:
    5440:	55                   	push   %rbp
    5441:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5445:	48 89 e5             	mov    %rsp,%rbp
    5448:	41 54                	push   %r12
    544a:	53                   	push   %rbx
    544b:	48 89 f3             	mov    %rsi,%rbx
    544e:	48 83 ec 60          	sub    $0x60,%rsp
    5452:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    5456:	8b 77 38             	mov    0x38(%rdi),%esi
    5459:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    545d:	48 8b 1b             	mov    (%rbx),%rbx
    5460:	89 4d ac             	mov    %ecx,-0x54(%rbp)
    5463:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    546a:	00 00 
    546c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5470:	31 c0                	xor    %eax,%eax
    5472:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    5476:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    547a:	85 f6                	test   %esi,%esi
    547c:	74 42                	je     54c0 <tcase_run_tfun_nofork+0x80>
    547e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5482:	48 89 da             	mov    %rbx,%rdx
    5485:	48 8d 0d 0f 2f 00 00 	lea    0x2f0f(%rip),%rcx        # 839b <_IO_stdin_used+0x39b>
    548c:	48 8b 78 30          	mov    0x30(%rax),%rdi
    5490:	e8 7b fe ff ff       	call   5310 <srunner_run_setup>
    5495:	48 89 c3             	mov    %rax,%rbx
    5498:	48 85 c0             	test   %rax,%rax
    549b:	74 63                	je     5500 <tcase_run_tfun_nofork+0xc0>
    549d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54a1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    54a8:	00 00 
    54aa:	0f 85 73 01 00 00    	jne    5623 <tcase_run_tfun_nofork+0x1e3>
    54b0:	48 83 c4 60          	add    $0x60,%rsp
    54b4:	48 89 d8             	mov    %rbx,%rax
    54b7:	5b                   	pop    %rbx
    54b8:	41 5c                	pop    %r12
    54ba:	5d                   	pop    %rbp
    54bb:	c3                   	ret
    54bc:	0f 1f 40 00          	nopl   0x0(%rax)
    54c0:	48 8d 3d 91 2e 00 00 	lea    0x2e91(%rip),%rdi        # 8358 <_IO_stdin_used+0x358>
    54c7:	e8 b4 cf ff ff       	call   2480 <getenv@plt>
    54cc:	48 85 c0             	test   %rax,%rax
    54cf:	74 1f                	je     54f0 <tcase_run_tfun_nofork+0xb0>
    54d1:	80 38 6e             	cmpb   $0x6e,(%rax)
    54d4:	75 1a                	jne    54f0 <tcase_run_tfun_nofork+0xb0>
    54d6:	80 78 01 6f          	cmpb   $0x6f,0x1(%rax)
    54da:	75 14                	jne    54f0 <tcase_run_tfun_nofork+0xb0>
    54dc:	80 78 02 00          	cmpb   $0x0,0x2(%rax)
    54e0:	be 02 00 00 00       	mov    $0x2,%esi
    54e5:	74 97                	je     547e <tcase_run_tfun_nofork+0x3e>
    54e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    54ee:	00 00 
    54f0:	be 01 00 00 00       	mov    $0x1,%esi
    54f5:	eb 87                	jmp    547e <tcase_run_tfun_nofork+0x3e>
    54f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    54fe:	00 00 
    5500:	e8 7b e5 ff ff       	call   3a80 <check_get_clockid>
    5505:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    5509:	89 c7                	mov    %eax,%edi
    550b:	e8 50 d0 ff ff       	call   2560 <clock_gettime@plt>
    5510:	48 8d 3d 69 6b 00 00 	lea    0x6b69(%rip),%rdi        # c080 <error_jmp_buffer>
    5517:	e8 54 d1 ff ff       	call   2670 <_setjmp@plt>
    551c:	f3 0f 1e fa          	endbr64
    5520:	85 c0                	test   %eax,%eax
    5522:	0f 84 b8 00 00 00    	je     55e0 <tcase_run_tfun_nofork+0x1a0>
    5528:	e8 53 e5 ff ff       	call   3a80 <check_get_clockid>
    552d:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    5531:	89 c7                	mov    %eax,%edi
    5533:	e8 28 d0 ff ff       	call   2560 <clock_gettime@plt>
    5538:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
    553c:	be 02 00 00 00       	mov    $0x2,%esi
    5541:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    5545:	e8 56 fb ff ff       	call   50a0 <srunner_run_teardown>
    554a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    554e:	f3 0f 7e 03          	movq   (%rbx),%xmm0
    5552:	31 ff                	xor    %edi,%edi
    5554:	48 be cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rsi
    555b:	9b c4 20 
    555e:	48 89 c8             	mov    %rcx,%rax
    5561:	48 c1 f9 3f          	sar    $0x3f,%rcx
    5565:	48 f7 ee             	imul   %rsi
    5568:	48 c1 fa 07          	sar    $0x7,%rdx
    556c:	49 89 d4             	mov    %rdx,%r12
    556f:	49 29 cc             	sub    %rcx,%r12
    5572:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    5576:	48 89 c8             	mov    %rcx,%rax
    5579:	48 c1 f9 3f          	sar    $0x3f,%rcx
    557d:	48 f7 ee             	imul   %rsi
    5580:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5584:	48 2b 45 c0          	sub    -0x40(%rbp),%rax
    5588:	69 c0 40 42 0f 00    	imul   $0xf4240,%eax,%eax
    558e:	48 c1 fa 07          	sar    $0x7,%rdx
    5592:	48 29 d1             	sub    %rdx,%rcx
    5595:	41 01 cc             	add    %ecx,%r12d
    5598:	41 01 c4             	add    %eax,%r12d
    559b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    559f:	48 8b 00             	mov    (%rax),%rax
    55a2:	0f 16 00             	movhps (%rax),%xmm0
    55a5:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    55a9:	e8 32 ed ff ff       	call   42e0 <receive_test_result>
    55ae:	66 0f 6f 45 90       	movdqa -0x70(%rbp),%xmm0
    55b3:	48 85 c0             	test   %rax,%rax
    55b6:	48 89 c3             	mov    %rax,%rbx
    55b9:	74 6d                	je     5628 <tcase_run_tfun_nofork+0x1e8>
    55bb:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    55bf:	8b 45 ac             	mov    -0x54(%rbp),%eax
    55c2:	48 83 7b 30 00       	cmpq   $0x0,0x30(%rbx)
    55c7:	44 89 63 18          	mov    %r12d,0x18(%rbx)
    55cb:	89 43 14             	mov    %eax,0x14(%rbx)
    55ce:	74 38                	je     5608 <tcase_run_tfun_nofork+0x1c8>
    55d0:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)
    55d6:	e9 c2 fe ff ff       	jmp    549d <tcase_run_tfun_nofork+0x5d>
    55db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    55e0:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    55e4:	48 8b 03             	mov    (%rbx),%rax
    55e7:	8b 50 18             	mov    0x18(%rax),%edx
    55ea:	48 8b 70 10          	mov    0x10(%rax),%rsi
    55ee:	48 8b 38             	mov    (%rax),%rdi
    55f1:	e8 3a de ff ff       	call   3430 <tcase_fn_start>
    55f6:	48 8b 03             	mov    (%rbx),%rax
    55f9:	8b 7d ac             	mov    -0x54(%rbp),%edi
    55fc:	ff 50 08             	call   *0x8(%rax)
    55ff:	e9 24 ff ff ff       	jmp    5528 <tcase_run_tfun_nofork+0xe8>
    5604:	0f 1f 40 00          	nopl   0x0(%rax)
    5608:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    560e:	48 8d 3d 3c 2d 00 00 	lea    0x2d3c(%rip),%rdi        # 8351 <_IO_stdin_used+0x351>
    5615:	e8 36 d2 ff ff       	call   2850 <strdup@plt>
    561a:	48 89 43 30          	mov    %rax,0x30(%rbx)
    561e:	e9 7a fe ff ff       	jmp    549d <tcase_run_tfun_nofork+0x5d>
    5623:	e8 88 cf ff ff       	call   25b0 <__stack_chk_fail@plt>
    5628:	ba b8 01 00 00       	mov    $0x1b8,%edx
    562d:	48 8d 35 d4 2c 00 00 	lea    0x2cd4(%rip),%rsi        # 8308 <_IO_stdin_used+0x308>
    5634:	48 8d 3d f8 2c 00 00 	lea    0x2cf8(%rip),%rdi        # 8333 <_IO_stdin_used+0x333>
    563b:	31 c0                	xor    %eax,%eax
    563d:	e8 ae e4 ff ff       	call   3af0 <eprintf>
    5642:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    5649:	00 00 00 00 
    564d:	0f 1f 00             	nopl   (%rax)

0000000000005650 <srunner_fork_status>:
    5650:	f3 0f 1e fa          	endbr64
    5654:	8b 47 38             	mov    0x38(%rdi),%eax
    5657:	85 c0                	test   %eax,%eax
    5659:	74 05                	je     5660 <srunner_fork_status+0x10>
    565b:	c3                   	ret
    565c:	0f 1f 40 00          	nopl   0x0(%rax)
    5660:	55                   	push   %rbp
    5661:	48 8d 3d f0 2c 00 00 	lea    0x2cf0(%rip),%rdi        # 8358 <_IO_stdin_used+0x358>
    5668:	48 89 e5             	mov    %rsp,%rbp
    566b:	e8 10 ce ff ff       	call   2480 <getenv@plt>
    5670:	48 89 c2             	mov    %rax,%rdx
    5673:	48 85 c0             	test   %rax,%rax
    5676:	74 18                	je     5690 <srunner_fork_status+0x40>
    5678:	80 38 6e             	cmpb   $0x6e,(%rax)
    567b:	75 13                	jne    5690 <srunner_fork_status+0x40>
    567d:	80 78 01 6f          	cmpb   $0x6f,0x1(%rax)
    5681:	75 0d                	jne    5690 <srunner_fork_status+0x40>
    5683:	80 7a 02 00          	cmpb   $0x0,0x2(%rdx)
    5687:	b8 02 00 00 00       	mov    $0x2,%eax
    568c:	75 02                	jne    5690 <srunner_fork_status+0x40>
    568e:	5d                   	pop    %rbp
    568f:	c3                   	ret
    5690:	b8 01 00 00 00       	mov    $0x1,%eax
    5695:	5d                   	pop    %rbp
    5696:	c3                   	ret
    5697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    569e:	00 00 

00000000000056a0 <srunner_set_fork_status>:
    56a0:	f3 0f 1e fa          	endbr64
    56a4:	89 77 38             	mov    %esi,0x38(%rdi)
    56a7:	c3                   	ret
    56a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    56af:	00 

00000000000056b0 <srunner_run_tagged>:
    56b0:	f3 0f 1e fa          	endbr64
    56b4:	55                   	push   %rbp
    56b5:	48 89 e5             	mov    %rsp,%rbp
    56b8:	41 57                	push   %r15
    56ba:	49 89 ff             	mov    %rdi,%r15
    56bd:	41 56                	push   %r14
    56bf:	41 55                	push   %r13
    56c1:	49 89 d5             	mov    %rdx,%r13
    56c4:	41 54                	push   %r12
    56c6:	53                   	push   %rbx
    56c7:	44 89 cb             	mov    %r9d,%ebx
    56ca:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    56d1:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    56d8:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
    56df:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
    56e6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    56ed:	00 00 
    56ef:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    56f3:	31 c0                	xor    %eax,%eax
    56f5:	48 85 d2             	test   %rdx,%rdx
    56f8:	0f 84 a2 09 00 00    	je     60a0 <srunner_run_tagged+0x9f0>
    56fe:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
    5705:	00 
    5706:	0f 84 b4 09 00 00    	je     60c0 <srunner_run_tagged+0xa10>
    570c:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    5713:	00 
    5714:	0f 84 ce 09 00 00    	je     60e8 <srunner_run_tagged+0xa38>
    571a:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
    5721:	00 
    5722:	0f 84 58 09 00 00    	je     6080 <srunner_run_tagged+0x9d0>
    5728:	4d 85 ff             	test   %r15,%r15
    572b:	0f 84 27 09 00 00    	je     6058 <srunner_run_tagged+0x9a8>
    5731:	83 fb 05             	cmp    $0x5,%ebx
    5734:	0f 87 83 0b 00 00    	ja     62bd <srunner_run_tagged+0xc0d>
    573a:	45 31 e4             	xor    %r12d,%r12d
    573d:	48 8d 15 64 6c 00 00 	lea    0x6c64(%rip),%rdx        # c3a8 <sigalarm_new_action.3+0x8>
    5744:	b9 12 00 00 00       	mov    $0x12,%ecx
    5749:	48 89 d7             	mov    %rdx,%rdi
    574c:	4c 89 e0             	mov    %r12,%rax
    574f:	4c 8d 35 fa fa ff ff 	lea    -0x506(%rip),%r14        # 5250 <sig_handler>
    5756:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5759:	48 8d 15 a0 6b 00 00 	lea    0x6ba0(%rip),%rdx        # c300 <sigalarm_old_action.2>
    5760:	48 8d 35 39 6c 00 00 	lea    0x6c39(%rip),%rsi        # c3a0 <sigalarm_new_action.3>
    5767:	bf 0e 00 00 00       	mov    $0xe,%edi
    576c:	4c 89 35 2d 6c 00 00 	mov    %r14,0x6c2d(%rip)        # c3a0 <sigalarm_new_action.3>
    5773:	e8 b8 cd ff ff       	call   2530 <sigaction@plt>
    5778:	48 8d 15 e9 6a 00 00 	lea    0x6ae9(%rip),%rdx        # c268 <sigint_new_action.1+0x8>
    577f:	4c 89 e0             	mov    %r12,%rax
    5782:	b9 12 00 00 00       	mov    $0x12,%ecx
    5787:	48 89 d7             	mov    %rdx,%rdi
    578a:	48 8d 35 cf 6a 00 00 	lea    0x6acf(%rip),%rsi        # c260 <sigint_new_action.1>
    5791:	48 8d 15 48 6d 00 00 	lea    0x6d48(%rip),%rdx        # c4e0 <sigint_old_action>
    5798:	4c 89 35 c1 6a 00 00 	mov    %r14,0x6ac1(%rip)        # c260 <sigint_new_action.1>
    579f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    57a2:	bf 02 00 00 00       	mov    $0x2,%edi
    57a7:	e8 84 cd ff ff       	call   2530 <sigaction@plt>
    57ac:	48 8d 15 15 6a 00 00 	lea    0x6a15(%rip),%rdx        # c1c8 <sigterm_new_action.0+0x8>
    57b3:	4c 89 e0             	mov    %r12,%rax
    57b6:	b9 12 00 00 00       	mov    $0x12,%ecx
    57bb:	48 89 d7             	mov    %rdx,%rdi
    57be:	48 8d 35 fb 69 00 00 	lea    0x69fb(%rip),%rsi        # c1c0 <sigterm_new_action.0>
    57c5:	48 8d 15 74 6c 00 00 	lea    0x6c74(%rip),%rdx        # c440 <sigterm_old_action>
    57cc:	4c 89 35 ed 69 00 00 	mov    %r14,0x69ed(%rip)        # c1c0 <sigterm_new_action.0>
    57d3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    57d6:	bf 0f 00 00 00       	mov    $0xf,%edi
    57db:	e8 50 cd ff ff       	call   2530 <sigaction@plt>
    57e0:	41 8b 7f 38          	mov    0x38(%r15),%edi
    57e4:	85 ff                	test   %edi,%edi
    57e6:	0f 84 24 07 00 00    	je     5f10 <srunner_run_tagged+0x860>
    57ec:	e8 4f e2 ff ff       	call   3a40 <set_fork_status>
    57f1:	4d 89 ee             	mov    %r13,%r14
    57f4:	e8 d7 ec ff ff       	call   44d0 <setup_messaging>
    57f9:	89 de                	mov    %ebx,%esi
    57fb:	4c 89 ff             	mov    %r15,%rdi
    57fe:	e8 0d 1a 00 00       	call   7210 <srunner_init_logging>
    5803:	4c 89 ff             	mov    %r15,%rdi
    5806:	e8 85 17 00 00       	call   6f90 <log_srunner_start>
    580b:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
    5812:	49 8b 1f             	mov    (%r15),%rbx
    5815:	e8 76 d7 ff ff       	call   2f90 <tag_string_to_list>
    581a:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
    5821:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    5828:	e8 63 d7 ff ff       	call   2f90 <tag_string_to_list>
    582d:	48 89 df             	mov    %rbx,%rdi
    5830:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    5837:	e8 e4 e5 ff ff       	call   3e20 <check_list_front>
    583c:	48 89 9d 68 ff ff ff 	mov    %rbx,-0x98(%rbp)
    5843:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
    584a:	4c 8b a5 58 ff ff ff 	mov    -0xa8(%rbp),%r12
    5851:	e8 aa e5 ff ff       	call   3e00 <check_list_at_end>
    5856:	85 c0                	test   %eax,%eax
    5858:	75 5b                	jne    58b5 <srunner_run_tagged+0x205>
    585a:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
    5861:	e8 1a e6 ff ff       	call   3e80 <check_list_val>
    5866:	48 89 c3             	mov    %rax,%rbx
    5869:	4d 85 e4             	test   %r12,%r12
    586c:	74 0f                	je     587d <srunner_run_tagged+0x1cd>
    586e:	48 8b 30             	mov    (%rax),%rsi
    5871:	4c 89 e7             	mov    %r12,%rdi
    5874:	e8 07 ce ff ff       	call   2680 <strcmp@plt>
    5879:	85 c0                	test   %eax,%eax
    587b:	75 1c                	jne    5899 <srunner_run_tagged+0x1e9>
    587d:	4d 85 f6             	test   %r14,%r14
    5880:	0f 84 ea 00 00 00    	je     5970 <srunner_run_tagged+0x2c0>
    5886:	4c 89 f6             	mov    %r14,%rsi
    5889:	48 89 df             	mov    %rbx,%rdi
    588c:	e8 8f d4 ff ff       	call   2d20 <suite_tcase>
    5891:	85 c0                	test   %eax,%eax
    5893:	0f 85 d7 00 00 00    	jne    5970 <srunner_run_tagged+0x2c0>
    5899:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
    58a0:	e8 0b e6 ff ff       	call   3eb0 <check_list_advance>
    58a5:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
    58ac:	e8 4f e5 ff ff       	call   3e00 <check_list_at_end>
    58b1:	85 c0                	test   %eax,%eax
    58b3:	74 a5                	je     585a <srunner_run_tagged+0x1aa>
    58b5:	48 8b 1d 04 67 00 00 	mov    0x6704(%rip),%rbx        # bfc0 <free@GLIBC_2.2.5>
    58bc:	4c 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%r14
    58c3:	48 89 de             	mov    %rbx,%rsi
    58c6:	4c 89 f7             	mov    %r14,%rdi
    58c9:	e8 02 e6 ff ff       	call   3ed0 <check_list_apply>
    58ce:	48 89 de             	mov    %rbx,%rsi
    58d1:	48 8b 9d 48 ff ff ff 	mov    -0xb8(%rbp),%rbx
    58d8:	48 89 df             	mov    %rbx,%rdi
    58db:	e8 f0 e5 ff ff       	call   3ed0 <check_list_apply>
    58e0:	4c 89 f7             	mov    %r14,%rdi
    58e3:	e8 58 e5 ff ff       	call   3e40 <check_list_free>
    58e8:	48 89 df             	mov    %rbx,%rdi
    58eb:	e8 50 e5 ff ff       	call   3e40 <check_list_free>
    58f0:	4c 89 ff             	mov    %r15,%rdi
    58f3:	e8 a8 16 00 00       	call   6fa0 <log_srunner_end>
    58f8:	4c 89 ff             	mov    %r15,%rdi
    58fb:	e8 20 1c 00 00       	call   7520 <srunner_end_logging>
    5900:	e8 2b e9 ff ff       	call   4230 <teardown_messaging>
    5905:	bf 01 00 00 00       	mov    $0x1,%edi
    590a:	e8 31 e1 ff ff       	call   3a40 <set_fork_status>
    590f:	31 d2                	xor    %edx,%edx
    5911:	bf 0e 00 00 00       	mov    $0xe,%edi
    5916:	48 8d 35 e3 69 00 00 	lea    0x69e3(%rip),%rsi        # c300 <sigalarm_old_action.2>
    591d:	e8 0e cc ff ff       	call   2530 <sigaction@plt>
    5922:	31 d2                	xor    %edx,%edx
    5924:	bf 02 00 00 00       	mov    $0x2,%edi
    5929:	48 8d 35 b0 6b 00 00 	lea    0x6bb0(%rip),%rsi        # c4e0 <sigint_old_action>
    5930:	e8 fb cb ff ff       	call   2530 <sigaction@plt>
    5935:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5939:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5940:	00 00 
    5942:	0f 85 c5 09 00 00    	jne    630d <srunner_run_tagged+0xc5d>
    5948:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    594c:	31 d2                	xor    %edx,%edx
    594e:	bf 0f 00 00 00       	mov    $0xf,%edi
    5953:	5b                   	pop    %rbx
    5954:	48 8d 35 e5 6a 00 00 	lea    0x6ae5(%rip),%rsi        # c440 <sigterm_old_action>
    595b:	41 5c                	pop    %r12
    595d:	41 5d                	pop    %r13
    595f:	41 5e                	pop    %r14
    5961:	41 5f                	pop    %r15
    5963:	5d                   	pop    %rbp
    5964:	e9 c7 cb ff ff       	jmp    2530 <sigaction@plt>
    5969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5970:	48 89 de             	mov    %rbx,%rsi
    5973:	4c 89 ff             	mov    %r15,%rdi
    5976:	e8 35 16 00 00       	call   6fb0 <log_suite_start>
    597b:	4c 8b 6b 08          	mov    0x8(%rbx),%r13
    597f:	4c 89 ef             	mov    %r13,%rdi
    5982:	e8 99 e4 ff ff       	call   3e20 <check_list_front>
    5987:	4c 89 a5 28 ff ff ff 	mov    %r12,-0xd8(%rbp)
    598e:	4d 89 ec             	mov    %r13,%r12
    5991:	4c 89 e7             	mov    %r12,%rdi
    5994:	48 89 9d 30 ff ff ff 	mov    %rbx,-0xd0(%rbp)
    599b:	e8 60 e4 ff ff       	call   3e00 <check_list_at_end>
    59a0:	85 c0                	test   %eax,%eax
    59a2:	0f 85 c1 00 00 00    	jne    5a69 <srunner_run_tagged+0x3b9>
    59a8:	4c 89 e7             	mov    %r12,%rdi
    59ab:	e8 d0 e4 ff ff       	call   3e80 <check_list_val>
    59b0:	49 89 c5             	mov    %rax,%r13
    59b3:	4d 85 f6             	test   %r14,%r14
    59b6:	74 13                	je     59cb <srunner_run_tagged+0x31b>
    59b8:	48 8b 30             	mov    (%rax),%rsi
    59bb:	4c 89 f7             	mov    %r14,%rdi
    59be:	e8 bd cc ff ff       	call   2680 <strcmp@plt>
    59c3:	85 c0                	test   %eax,%eax
    59c5:	0f 85 86 00 00 00    	jne    5a51 <srunner_run_tagged+0x3a1>
    59cb:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    59d2:	00 
    59d3:	74 13                	je     59e8 <srunner_run_tagged+0x338>
    59d5:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
    59dc:	4c 89 ef             	mov    %r13,%rdi
    59df:	e8 7c d6 ff ff       	call   3060 <tcase_matching_tag>
    59e4:	85 c0                	test   %eax,%eax
    59e6:	74 69                	je     5a51 <srunner_run_tagged+0x3a1>
    59e8:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
    59ef:	00 
    59f0:	74 13                	je     5a05 <srunner_run_tagged+0x355>
    59f2:	48 8b b5 48 ff ff ff 	mov    -0xb8(%rbp),%rsi
    59f9:	4c 89 ef             	mov    %r13,%rdi
    59fc:	e8 5f d6 ff ff       	call   3060 <tcase_matching_tag>
    5a01:	85 c0                	test   %eax,%eax
    5a03:	75 4c                	jne    5a51 <srunner_run_tagged+0x3a1>
    5a05:	bf 02 00 00 00       	mov    $0x2,%edi
    5a0a:	e8 31 e0 ff ff       	call   3a40 <set_fork_status>
    5a0f:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    5a13:	49 8b 55 00          	mov    0x0(%r13),%rdx
    5a17:	48 8d 0d 7b 29 00 00 	lea    0x297b(%rip),%rcx        # 8399 <_IO_stdin_used+0x399>
    5a1e:	be 02 00 00 00       	mov    $0x2,%esi
    5a23:	e8 e8 f8 ff ff       	call   5310 <srunner_run_setup>
    5a28:	41 8b 7f 38          	mov    0x38(%r15),%edi
    5a2c:	48 89 c3             	mov    %rax,%rbx
    5a2f:	85 ff                	test   %edi,%edi
    5a31:	0f 84 09 04 00 00    	je     5e40 <srunner_run_tagged+0x790>
    5a37:	e8 04 e0 ff ff       	call   3a40 <set_fork_status>
    5a3c:	48 85 db             	test   %rbx,%rbx
    5a3f:	74 4f                	je     5a90 <srunner_run_tagged+0x3e0>
    5a41:	83 3b 01             	cmpl   $0x1,(%rbx)
    5a44:	74 4a                	je     5a90 <srunner_run_tagged+0x3e0>
    5a46:	48 89 de             	mov    %rbx,%rsi
    5a49:	4c 89 ff             	mov    %r15,%rdi
    5a4c:	e8 cf f6 ff ff       	call   5120 <srunner_add_failure>
    5a51:	4c 89 e7             	mov    %r12,%rdi
    5a54:	e8 57 e4 ff ff       	call   3eb0 <check_list_advance>
    5a59:	4c 89 e7             	mov    %r12,%rdi
    5a5c:	e8 9f e3 ff ff       	call   3e00 <check_list_at_end>
    5a61:	85 c0                	test   %eax,%eax
    5a63:	0f 84 3f ff ff ff    	je     59a8 <srunner_run_tagged+0x2f8>
    5a69:	48 8b 9d 30 ff ff ff 	mov    -0xd0(%rbp),%rbx
    5a70:	4c 89 ff             	mov    %r15,%rdi
    5a73:	4c 8b a5 28 ff ff ff 	mov    -0xd8(%rbp),%r12
    5a7a:	48 89 de             	mov    %rbx,%rsi
    5a7d:	e8 3e 15 00 00       	call   6fc0 <log_suite_end>
    5a82:	e9 12 fe ff ff       	jmp    5899 <srunner_run_tagged+0x1e9>
    5a87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5a8e:	00 00 
    5a90:	49 8b 45 18          	mov    0x18(%r13),%rax
    5a94:	48 89 c7             	mov    %rax,%rdi
    5a97:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    5a9e:	e8 7d e3 ff ff       	call   3e20 <check_list_front>
    5aa3:	4c 89 a5 20 ff ff ff 	mov    %r12,-0xe0(%rbp)
    5aaa:	4c 89 ad 58 ff ff ff 	mov    %r13,-0xa8(%rbp)
    5ab1:	4c 89 b5 08 ff ff ff 	mov    %r14,-0xf8(%rbp)
    5ab8:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
    5abf:	e8 3c e3 ff ff       	call   3e00 <check_list_at_end>
    5ac4:	85 c0                	test   %eax,%eax
    5ac6:	0f 85 7e 07 00 00    	jne    624a <srunner_run_tagged+0xb9a>
    5acc:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
    5ad3:	e8 a8 e3 ff ff       	call   3e80 <check_list_val>
    5ad8:	44 8b 60 08          	mov    0x8(%rax),%r12d
    5adc:	49 89 c5             	mov    %rax,%r13
    5adf:	44 3b 60 0c          	cmp    0xc(%rax),%r12d
    5ae3:	7d 53                	jge    5b38 <srunner_run_tagged+0x488>
    5ae5:	48 8b b5 58 ff ff ff 	mov    -0xa8(%rbp),%rsi
    5aec:	4c 89 ea             	mov    %r13,%rdx
    5aef:	4c 89 ff             	mov    %r15,%rdi
    5af2:	e8 d9 14 00 00       	call   6fd0 <log_test_start>
    5af7:	41 8b 47 38          	mov    0x38(%r15),%eax
    5afb:	85 c0                	test   %eax,%eax
    5afd:	74 51                	je     5b50 <srunner_run_tagged+0x4a0>
    5aff:	83 f8 01             	cmp    $0x1,%eax
    5b02:	74 66                	je     5b6a <srunner_run_tagged+0x4ba>
    5b04:	83 f8 02             	cmp    $0x2,%eax
    5b07:	0f 85 96 07 00 00    	jne    62a3 <srunner_run_tagged+0xbf3>
    5b0d:	48 8b b5 58 ff ff ff 	mov    -0xa8(%rbp),%rsi
    5b14:	44 89 e1             	mov    %r12d,%ecx
    5b17:	4c 89 ea             	mov    %r13,%rdx
    5b1a:	4c 89 ff             	mov    %r15,%rdi
    5b1d:	e8 1e f9 ff ff       	call   5440 <tcase_run_tfun_nofork>
    5b22:	49 89 c6             	mov    %rax,%r14
    5b25:	48 85 c0             	test   %rax,%rax
    5b28:	0f 85 ef 02 00 00    	jne    5e1d <srunner_run_tagged+0x76d>
    5b2e:	41 83 c4 01          	add    $0x1,%r12d
    5b32:	45 3b 65 0c          	cmp    0xc(%r13),%r12d
    5b36:	7c ad                	jl     5ae5 <srunner_run_tagged+0x435>
    5b38:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
    5b3f:	e8 6c e3 ff ff       	call   3eb0 <check_list_advance>
    5b44:	e9 6f ff ff ff       	jmp    5ab8 <srunner_run_tagged+0x408>
    5b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5b50:	48 8d 3d 01 28 00 00 	lea    0x2801(%rip),%rdi        # 8358 <_IO_stdin_used+0x358>
    5b57:	e8 24 c9 ff ff       	call   2480 <getenv@plt>
    5b5c:	48 85 c0             	test   %rax,%rax
    5b5f:	74 09                	je     5b6a <srunner_run_tagged+0x4ba>
    5b61:	80 38 6e             	cmpb   $0x6e,(%rax)
    5b64:	0f 84 86 03 00 00    	je     5ef0 <srunner_run_tagged+0x840>
    5b6a:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
    5b71:	00 00 00 
    5b74:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5b78:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    5b7c:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    5b80:	e8 fb cc ff ff       	call   2880 <fork@plt>
    5b85:	89 c3                	mov    %eax,%ebx
    5b87:	83 f8 ff             	cmp    $0xffffffff,%eax
    5b8a:	0f 84 49 07 00 00    	je     62d9 <srunner_run_tagged+0xc29>
    5b90:	85 c0                	test   %eax,%eax
    5b92:	0f 85 e8 00 00 00    	jne    5c80 <srunner_run_tagged+0x5d0>
    5b98:	31 f6                	xor    %esi,%esi
    5b9a:	31 ff                	xor    %edi,%edi
    5b9c:	4c 8b b5 58 ff ff ff 	mov    -0xa8(%rbp),%r14
    5ba3:	e8 58 cc ff ff       	call   2800 <setpgid@plt>
    5ba8:	e8 03 cc ff ff       	call   27b0 <getpgrp@plt>
    5bad:	41 8b 77 38          	mov    0x38(%r15),%esi
    5bb1:	49 8b 1e             	mov    (%r14),%rbx
    5bb4:	89 05 be 69 00 00    	mov    %eax,0x69be(%rip)        # c578 <group_pid>
    5bba:	85 f6                	test   %esi,%esi
    5bbc:	0f 84 8e 03 00 00    	je     5f50 <srunner_run_tagged+0x8a0>
    5bc2:	49 8b 7e 30          	mov    0x30(%r14),%rdi
    5bc6:	48 8d 0d ce 27 00 00 	lea    0x27ce(%rip),%rcx        # 839b <_IO_stdin_used+0x39b>
    5bcd:	48 89 da             	mov    %rbx,%rdx
    5bd0:	e8 3b f7 ff ff       	call   5310 <srunner_run_setup>
    5bd5:	48 89 c7             	mov    %rax,%rdi
    5bd8:	e8 83 c8 ff ff       	call   2460 <free@plt>
    5bdd:	e8 9e de ff ff       	call   3a80 <check_get_clockid>
    5be2:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
    5be6:	89 c7                	mov    %eax,%edi
    5be8:	e8 73 c9 ff ff       	call   2560 <clock_gettime@plt>
    5bed:	49 8b 45 00          	mov    0x0(%r13),%rax
    5bf1:	8b 50 18             	mov    0x18(%rax),%edx
    5bf4:	48 8b 70 10          	mov    0x10(%rax),%rsi
    5bf8:	48 8b 38             	mov    (%rax),%rdi
    5bfb:	e8 30 d8 ff ff       	call   3430 <tcase_fn_start>
    5c00:	49 8b 45 00          	mov    0x0(%r13),%rax
    5c04:	44 89 e7             	mov    %r12d,%edi
    5c07:	ff 50 08             	call   *0x8(%rax)
    5c0a:	e8 71 de ff ff       	call   3a80 <check_get_clockid>
    5c0f:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
    5c13:	89 c7                	mov    %eax,%edi
    5c15:	e8 46 c9 ff ff       	call   2560 <clock_gettime@plt>
    5c1a:	49 8b 7e 38          	mov    0x38(%r14),%rdi
    5c1e:	be 02 00 00 00       	mov    $0x2,%esi
    5c23:	e8 78 f4 ff ff       	call   50a0 <srunner_run_teardown>
    5c28:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    5c2c:	48 be cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rsi
    5c33:	9b c4 20 
    5c36:	48 89 c8             	mov    %rcx,%rax
    5c39:	48 c1 f9 3f          	sar    $0x3f,%rcx
    5c3d:	48 f7 ee             	imul   %rsi
    5c40:	48 c1 fa 07          	sar    $0x7,%rdx
    5c44:	48 89 d7             	mov    %rdx,%rdi
    5c47:	48 29 cf             	sub    %rcx,%rdi
    5c4a:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    5c4e:	48 89 c8             	mov    %rcx,%rax
    5c51:	48 c1 f9 3f          	sar    $0x3f,%rcx
    5c55:	48 f7 ee             	imul   %rsi
    5c58:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5c5c:	48 2b 45 80          	sub    -0x80(%rbp),%rax
    5c60:	69 c0 40 42 0f 00    	imul   $0xf4240,%eax,%eax
    5c66:	48 c1 fa 07          	sar    $0x7,%rdx
    5c6a:	48 29 d1             	sub    %rdx,%rcx
    5c6d:	01 cf                	add    %ecx,%edi
    5c6f:	01 c7                	add    %eax,%edi
    5c71:	e8 5a e4 ff ff       	call   40d0 <send_duration_info>
    5c76:	31 ff                	xor    %edi,%edi
    5c78:	e8 93 cb ff ff       	call   2810 <exit@plt>
    5c7d:	0f 1f 00             	nopl   (%rax)
    5c80:	89 05 f2 68 00 00    	mov    %eax,0x68f2(%rip)        # c578 <group_pid>
    5c86:	c7 05 ec 68 00 00 00 	movl   $0x0,0x68ec(%rip)        # c57c <alarm_received>
    5c8d:	00 00 00 
    5c90:	e8 eb dd ff ff       	call   3a80 <check_get_clockid>
    5c95:	31 f6                	xor    %esi,%esi
    5c97:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
    5c9e:	89 c7                	mov    %eax,%edi
    5ca0:	e8 2b c9 ff ff       	call   25d0 <timer_create@plt>
    5ca5:	85 c0                	test   %eax,%eax
    5ca7:	0f 85 46 06 00 00    	jne    62f3 <srunner_run_tagged+0xc43>
    5cad:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5cb4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5cb8:	31 c9                	xor    %ecx,%ecx
    5cba:	31 f6                	xor    %esi,%esi
    5cbc:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
    5cc3:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    5cc7:	f3 0f 6f 50 08       	movdqu 0x8(%rax),%xmm2
    5ccc:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    5cd0:	0f 29 95 10 ff ff ff 	movaps %xmm2,-0xf0(%rbp)
    5cd7:	0f 29 55 b0          	movaps %xmm2,-0x50(%rbp)
    5cdb:	e8 c0 c7 ff ff       	call   24a0 <timer_settime@plt>
    5ce0:	85 c0                	test   %eax,%eax
    5ce2:	0f 85 2a 06 00 00    	jne    6312 <srunner_run_tagged+0xc62>
    5ce8:	4c 8d b5 74 ff ff ff 	lea    -0x8c(%rbp),%r14
    5cef:	90                   	nop
    5cf0:	31 d2                	xor    %edx,%edx
    5cf2:	4c 89 f6             	mov    %r14,%rsi
    5cf5:	89 df                	mov    %ebx,%edi
    5cf7:	e8 a4 ca ff ff       	call   27a0 <waitpid@plt>
    5cfc:	83 f8 ff             	cmp    $0xffffffff,%eax
    5cff:	74 ef                	je     5cf0 <srunner_run_tagged+0x640>
    5d01:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
    5d08:	e8 83 c9 ff ff       	call   2690 <timer_delete@plt>
    5d0d:	be 09 00 00 00       	mov    $0x9,%esi
    5d12:	89 df                	mov    %ebx,%edi
    5d14:	e8 d7 c9 ff ff       	call   26f0 <killpg@plt>
    5d19:	48 8b 9d 58 ff ff ff 	mov    -0xa8(%rbp),%rbx
    5d20:	8b 8d 74 ff ff ff    	mov    -0x8c(%rbp),%ecx
    5d26:	49 8b 45 00          	mov    0x0(%r13),%rax
    5d2a:	45 0f b6 45 14       	movzbl 0x14(%r13),%r8d
    5d2f:	48 8b 13             	mov    (%rbx),%rdx
    5d32:	89 cb                	mov    %ecx,%ebx
    5d34:	41 8b 75 10          	mov    0x10(%r13),%esi
    5d38:	83 e3 7f             	and    $0x7f,%ebx
    5d3b:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    5d40:	89 ca                	mov    %ecx,%edx
    5d42:	83 e2 7f             	and    $0x7f,%edx
    5d45:	0f 16 08             	movhps (%rax),%xmm1
    5d48:	83 c2 01             	add    $0x1,%edx
    5d4b:	0f 29 8d 10 ff ff ff 	movaps %xmm1,-0xf0(%rbp)
    5d52:	d0 fa                	sar    $1,%dl
    5d54:	84 d2                	test   %dl,%dl
    5d56:	0f 8f 14 01 00 00    	jg     5e70 <srunner_run_tagged+0x7c0>
    5d5c:	85 db                	test   %ebx,%ebx
    5d5e:	88 95 fe fe ff ff    	mov    %dl,-0x102(%rbp)
    5d64:	41 0f 94 c2          	sete   %r10b
    5d68:	f6 c5 ff             	test   $0xff,%ch
    5d6b:	89 b5 f8 fe ff ff    	mov    %esi,-0x108(%rbp)
    5d71:	40 0f 95 c7          	setne  %dil
    5d75:	44 88 85 ff fe ff ff 	mov    %r8b,-0x101(%rbp)
    5d7c:	40 0f b6 ff          	movzbl %dil,%edi
    5d80:	89 8d 00 ff ff ff    	mov    %ecx,-0x100(%rbp)
    5d86:	44 21 d7             	and    %r10d,%edi
    5d89:	44 88 95 04 ff ff ff 	mov    %r10b,-0xfc(%rbp)
    5d90:	e8 4b e5 ff ff       	call   42e0 <receive_test_result>
    5d95:	44 0f b6 95 04 ff ff 	movzbl -0xfc(%rbp),%r10d
    5d9c:	ff 
    5d9d:	8b 8d 00 ff ff ff    	mov    -0x100(%rbp),%ecx
    5da3:	48 85 c0             	test   %rax,%rax
    5da6:	8b b5 f8 fe ff ff    	mov    -0x108(%rbp),%esi
    5dac:	49 89 c6             	mov    %rax,%r14
    5daf:	44 0f b6 85 ff fe ff 	movzbl -0x101(%rbp),%r8d
    5db6:	ff 
    5db7:	0f b6 95 fe fe ff ff 	movzbl -0x102(%rbp),%edx
    5dbe:	0f 84 84 03 00 00    	je     6148 <srunner_run_tagged+0xa98>
    5dc4:	66 0f 6f a5 10 ff ff 	movdqa -0xf0(%rbp),%xmm4
    5dcb:	ff 
    5dcc:	44 89 60 14          	mov    %r12d,0x14(%rax)
    5dd0:	0f 11 60 20          	movups %xmm4,0x20(%rax)
    5dd4:	84 d2                	test   %dl,%dl
    5dd6:	0f 8f 24 03 00 00    	jg     6100 <srunner_run_tagged+0xa50>
    5ddc:	c1 f9 08             	sar    $0x8,%ecx
    5ddf:	85 f6                	test   %esi,%esi
    5de1:	0f 85 b1 01 00 00    	jne    5f98 <srunner_run_tagged+0x8e8>
    5de7:	41 38 c8             	cmp    %cl,%r8b
    5dea:	0f 85 f7 03 00 00    	jne    61e7 <srunner_run_tagged+0xb37>
    5df0:	45 84 d2             	test   %r10b,%r10b
    5df3:	0f 84 e5 03 00 00    	je     61de <srunner_run_tagged+0xb2e>
    5df9:	48 8b 78 30          	mov    0x30(%rax),%rdi
    5dfd:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    5e03:	48 85 ff             	test   %rdi,%rdi
    5e06:	74 05                	je     5e0d <srunner_run_tagged+0x75d>
    5e08:	e8 53 c6 ff ff       	call   2460 <free@plt>
    5e0d:	48 8d 3d 3d 25 00 00 	lea    0x253d(%rip),%rdi        # 8351 <_IO_stdin_used+0x351>
    5e14:	e8 37 ca ff ff       	call   2850 <strdup@plt>
    5e19:	49 89 46 30          	mov    %rax,0x30(%r14)
    5e1d:	4c 89 f6             	mov    %r14,%rsi
    5e20:	4c 89 ff             	mov    %r15,%rdi
    5e23:	e8 f8 f2 ff ff       	call   5120 <srunner_add_failure>
    5e28:	4c 89 f6             	mov    %r14,%rsi
    5e2b:	4c 89 ff             	mov    %r15,%rdi
    5e2e:	e8 1d 12 00 00       	call   7050 <log_test_end>
    5e33:	e9 f6 fc ff ff       	jmp    5b2e <srunner_run_tagged+0x47e>
    5e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5e3f:	00 
    5e40:	48 8d 3d 11 25 00 00 	lea    0x2511(%rip),%rdi        # 8358 <_IO_stdin_used+0x358>
    5e47:	e8 34 c6 ff ff       	call   2480 <getenv@plt>
    5e4c:	48 85 c0             	test   %rax,%rax
    5e4f:	74 0f                	je     5e60 <srunner_run_tagged+0x7b0>
    5e51:	80 38 6e             	cmpb   $0x6e,(%rax)
    5e54:	75 0a                	jne    5e60 <srunner_run_tagged+0x7b0>
    5e56:	80 78 01 6f          	cmpb   $0x6f,0x1(%rax)
    5e5a:	0f 84 20 01 00 00    	je     5f80 <srunner_run_tagged+0x8d0>
    5e60:	bf 01 00 00 00       	mov    $0x1,%edi
    5e65:	e9 cd fb ff ff       	jmp    5a37 <srunner_run_tagged+0x387>
    5e6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e70:	39 de                	cmp    %ebx,%esi
    5e72:	0f 84 e4 fe ff ff    	je     5d5c <srunner_run_tagged+0x6ac>
    5e78:	bf 01 00 00 00       	mov    $0x1,%edi
    5e7d:	89 b5 04 ff ff ff    	mov    %esi,-0xfc(%rbp)
    5e83:	e8 58 e4 ff ff       	call   42e0 <receive_test_result>
    5e88:	8b b5 04 ff ff ff    	mov    -0xfc(%rbp),%esi
    5e8e:	48 85 c0             	test   %rax,%rax
    5e91:	49 89 c6             	mov    %rax,%r14
    5e94:	0f 84 ae 02 00 00    	je     6148 <srunner_run_tagged+0xa98>
    5e9a:	66 0f 6f ad 10 ff ff 	movdqa -0xf0(%rbp),%xmm5
    5ea1:	ff 
    5ea2:	45 89 66 14          	mov    %r12d,0x14(%r14)
    5ea6:	41 0f 11 6e 20       	movups %xmm5,0x20(%r14)
    5eab:	41 c7 06 03 00 00 00 	movl   $0x3,(%r14)
    5eb2:	49 8b 7e 30          	mov    0x30(%r14),%rdi
    5eb6:	85 f6                	test   %esi,%esi
    5eb8:	0f 84 52 01 00 00    	je     6010 <srunner_run_tagged+0x960>
    5ebe:	48 85 ff             	test   %rdi,%rdi
    5ec1:	74 11                	je     5ed4 <srunner_run_tagged+0x824>
    5ec3:	89 b5 10 ff ff ff    	mov    %esi,-0xf0(%rbp)
    5ec9:	e8 92 c5 ff ff       	call   2460 <free@plt>
    5ece:	8b b5 10 ff ff ff    	mov    -0xf0(%rbp),%esi
    5ed4:	89 df                	mov    %ebx,%edi
    5ed6:	e8 95 f2 ff ff       	call   5170 <signal_error_msg>
    5edb:	49 89 c2             	mov    %rax,%r10
    5ede:	4d 89 56 30          	mov    %r10,0x30(%r14)
    5ee2:	e9 36 ff ff ff       	jmp    5e1d <srunner_run_tagged+0x76d>
    5ee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5eee:	00 00 
    5ef0:	80 78 01 6f          	cmpb   $0x6f,0x1(%rax)
    5ef4:	0f 85 70 fc ff ff    	jne    5b6a <srunner_run_tagged+0x4ba>
    5efa:	80 78 02 00          	cmpb   $0x0,0x2(%rax)
    5efe:	0f 84 09 fc ff ff    	je     5b0d <srunner_run_tagged+0x45d>
    5f04:	e9 61 fc ff ff       	jmp    5b6a <srunner_run_tagged+0x4ba>
    5f09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5f10:	48 8d 3d 41 24 00 00 	lea    0x2441(%rip),%rdi        # 8358 <_IO_stdin_used+0x358>
    5f17:	e8 64 c5 ff ff       	call   2480 <getenv@plt>
    5f1c:	48 85 c0             	test   %rax,%rax
    5f1f:	74 1f                	je     5f40 <srunner_run_tagged+0x890>
    5f21:	80 38 6e             	cmpb   $0x6e,(%rax)
    5f24:	75 1a                	jne    5f40 <srunner_run_tagged+0x890>
    5f26:	80 78 01 6f          	cmpb   $0x6f,0x1(%rax)
    5f2a:	75 14                	jne    5f40 <srunner_run_tagged+0x890>
    5f2c:	80 78 02 00          	cmpb   $0x0,0x2(%rax)
    5f30:	bf 02 00 00 00       	mov    $0x2,%edi
    5f35:	0f 84 b1 f8 ff ff    	je     57ec <srunner_run_tagged+0x13c>
    5f3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5f40:	bf 01 00 00 00       	mov    $0x1,%edi
    5f45:	e9 a2 f8 ff ff       	jmp    57ec <srunner_run_tagged+0x13c>
    5f4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5f50:	48 8d 3d 01 24 00 00 	lea    0x2401(%rip),%rdi        # 8358 <_IO_stdin_used+0x358>
    5f57:	e8 24 c5 ff ff       	call   2480 <getenv@plt>
    5f5c:	48 85 c0             	test   %rax,%rax
    5f5f:	74 0f                	je     5f70 <srunner_run_tagged+0x8c0>
    5f61:	80 38 6e             	cmpb   $0x6e,(%rax)
    5f64:	75 0a                	jne    5f70 <srunner_run_tagged+0x8c0>
    5f66:	80 78 01 6f          	cmpb   $0x6f,0x1(%rax)
    5f6a:	0f 84 5a 02 00 00    	je     61ca <srunner_run_tagged+0xb1a>
    5f70:	be 01 00 00 00       	mov    $0x1,%esi
    5f75:	e9 48 fc ff ff       	jmp    5bc2 <srunner_run_tagged+0x512>
    5f7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5f80:	80 78 02 00          	cmpb   $0x0,0x2(%rax)
    5f84:	bf 02 00 00 00       	mov    $0x2,%edi
    5f89:	0f 84 a8 fa ff ff    	je     5a37 <srunner_run_tagged+0x387>
    5f8f:	e9 cc fe ff ff       	jmp    5e60 <srunner_run_tagged+0x7b0>
    5f94:	0f 1f 40 00          	nopl   0x0(%rax)
    5f98:	85 db                	test   %ebx,%ebx
    5f9a:	0f 85 7d fe ff ff    	jne    5e1d <srunner_run_tagged+0x76d>
    5fa0:	48 8b 78 30          	mov    0x30(%rax),%rdi
    5fa4:	48 85 ff             	test   %rdi,%rdi
    5fa7:	74 11                	je     5fba <srunner_run_tagged+0x90a>
    5fa9:	89 8d 10 ff ff ff    	mov    %ecx,-0xf0(%rbp)
    5faf:	e8 ac c4 ff ff       	call   2460 <free@plt>
    5fb4:	8b 8d 10 ff ff ff    	mov    -0xf0(%rbp),%ecx
    5fba:	bf 64 00 00 00       	mov    $0x64,%edi
    5fbf:	89 8d 10 ff ff ff    	mov    %ecx,-0xf0(%rbp)
    5fc5:	e8 66 dc ff ff       	call   3c30 <emalloc>
    5fca:	8b 8d 10 ff ff ff    	mov    -0xf0(%rbp),%ecx
    5fd0:	ba 02 00 00 00       	mov    $0x2,%edx
    5fd5:	4c 8d 05 d4 29 00 00 	lea    0x29d4(%rip),%r8        # 89b0 <_IO_stdin_used+0x9b0>
    5fdc:	48 89 c3             	mov    %rax,%rbx
    5fdf:	48 89 c7             	mov    %rax,%rdi
    5fe2:	be 64 00 00 00       	mov    $0x64,%esi
    5fe7:	31 c0                	xor    %eax,%eax
    5fe9:	44 0f be c9          	movsbl %cl,%r9d
    5fed:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    5ff4:	e8 b7 c4 ff ff       	call   24b0 <__snprintf_chk@plt>
    5ff9:	49 89 5e 30          	mov    %rbx,0x30(%r14)
    5ffd:	41 c7 06 02 00 00 00 	movl   $0x2,(%r14)
    6004:	e9 14 fe ff ff       	jmp    5e1d <srunner_run_tagged+0x76d>
    6009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6010:	48 85 ff             	test   %rdi,%rdi
    6013:	74 05                	je     601a <srunner_run_tagged+0x96a>
    6015:	e8 46 c4 ff ff       	call   2460 <free@plt>
    601a:	bf 64 00 00 00       	mov    $0x64,%edi
    601f:	e8 0c dc ff ff       	call   3c30 <emalloc>
    6024:	8b 0d 52 65 00 00    	mov    0x6552(%rip),%ecx        # c57c <alarm_received>
    602a:	49 89 c2             	mov    %rax,%r10
    602d:	85 c9                	test   %ecx,%ecx
    602f:	0f 84 4b 01 00 00    	je     6180 <srunner_run_tagged+0xad0>
    6035:	66 0f 6f 05 73 2c 00 	movdqa 0x2c73(%rip),%xmm0        # 8cb0 <_IO_stdin_used+0xcb0>
    603c:	00 
    603d:	0f 11 00             	movups %xmm0,(%rax)
    6040:	48 b8 65 78 70 69 72 	movabs $0x64657269707865,%rax
    6047:	65 64 00 
    604a:	49 89 42 0d          	mov    %rax,0xd(%r10)
    604e:	e9 8b fe ff ff       	jmp    5ede <srunner_run_tagged+0x82e>
    6053:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6058:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    605c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6063:	00 00 
    6065:	0f 85 a2 02 00 00    	jne    630d <srunner_run_tagged+0xc5d>
    606b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    606f:	5b                   	pop    %rbx
    6070:	41 5c                	pop    %r12
    6072:	41 5d                	pop    %r13
    6074:	41 5e                	pop    %r14
    6076:	41 5f                	pop    %r15
    6078:	5d                   	pop    %rbp
    6079:	c3                   	ret
    607a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6080:	48 8d 3d 02 23 00 00 	lea    0x2302(%rip),%rdi        # 8389 <_IO_stdin_used+0x389>
    6087:	e8 f4 c3 ff ff       	call   2480 <getenv@plt>
    608c:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    6093:	e9 90 f6 ff ff       	jmp    5728 <srunner_run_tagged+0x78>
    6098:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    609f:	00 
    60a0:	48 8d 3d b9 22 00 00 	lea    0x22b9(%rip),%rdi        # 8360 <_IO_stdin_used+0x360>
    60a7:	e8 d4 c3 ff ff       	call   2480 <getenv@plt>
    60ac:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
    60b3:	00 
    60b4:	49 89 c5             	mov    %rax,%r13
    60b7:	0f 85 4f f6 ff ff    	jne    570c <srunner_run_tagged+0x5c>
    60bd:	0f 1f 00             	nopl   (%rax)
    60c0:	48 8d 3d a5 22 00 00 	lea    0x22a5(%rip),%rdi        # 836c <_IO_stdin_used+0x36c>
    60c7:	e8 b4 c3 ff ff       	call   2480 <getenv@plt>
    60cc:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    60d3:	00 
    60d4:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    60db:	0f 85 39 f6 ff ff    	jne    571a <srunner_run_tagged+0x6a>
    60e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    60e8:	48 8d 3d 8a 22 00 00 	lea    0x228a(%rip),%rdi        # 8379 <_IO_stdin_used+0x379>
    60ef:	e8 8c c3 ff ff       	call   2480 <getenv@plt>
    60f4:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    60fb:	e9 1a f6 ff ff       	jmp    571a <srunner_run_tagged+0x6a>
    6100:	48 8b 78 30          	mov    0x30(%rax),%rdi
    6104:	39 de                	cmp    %ebx,%esi
    6106:	0f 85 9f fd ff ff    	jne    5eab <srunner_run_tagged+0x7fb>
    610c:	44 8b 05 69 64 00 00 	mov    0x6469(%rip),%r8d        # c57c <alarm_received>
    6113:	45 85 c0             	test   %r8d,%r8d
    6116:	74 50                	je     6168 <srunner_run_tagged+0xab8>
    6118:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    611e:	48 85 ff             	test   %rdi,%rdi
    6121:	74 11                	je     6134 <srunner_run_tagged+0xa84>
    6123:	89 b5 10 ff ff ff    	mov    %esi,-0xf0(%rbp)
    6129:	e8 32 c3 ff ff       	call   2460 <free@plt>
    612e:	8b b5 10 ff ff ff    	mov    -0xf0(%rbp),%esi
    6134:	89 df                	mov    %ebx,%edi
    6136:	e8 35 f0 ff ff       	call   5170 <signal_error_msg>
    613b:	49 89 46 30          	mov    %rax,0x30(%r14)
    613f:	e9 d9 fc ff ff       	jmp    5e1d <srunner_run_tagged+0x76d>
    6144:	0f 1f 40 00          	nopl   0x0(%rax)
    6148:	ba 2c 02 00 00       	mov    $0x22c,%edx
    614d:	48 8d 35 b4 21 00 00 	lea    0x21b4(%rip),%rsi        # 8308 <_IO_stdin_used+0x308>
    6154:	48 8d 3d d8 21 00 00 	lea    0x21d8(%rip),%rdi        # 8333 <_IO_stdin_used+0x333>
    615b:	31 c0                	xor    %eax,%eax
    615d:	e8 8e d9 ff ff       	call   3af0 <eprintf>
    6162:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6168:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    616e:	48 85 ff             	test   %rdi,%rdi
    6171:	0f 85 91 fc ff ff    	jne    5e08 <srunner_run_tagged+0x758>
    6177:	e9 91 fc ff ff       	jmp    5e0d <srunner_run_tagged+0x75d>
    617c:	0f 1f 40 00          	nopl   0x0(%rax)
    6180:	89 df                	mov    %ebx,%edi
    6182:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    6189:	e8 92 c5 ff ff       	call   2720 <strsignal@plt>
    618e:	48 83 ec 08          	sub    $0x8,%rsp
    6192:	41 89 d9             	mov    %ebx,%r9d
    6195:	ba 02 00 00 00       	mov    $0x2,%edx
    619a:	50                   	push   %rax
    619b:	48 8b bd 10 ff ff ff 	mov    -0xf0(%rbp),%rdi
    61a2:	be 64 00 00 00       	mov    $0x64,%esi
    61a7:	31 c0                	xor    %eax,%eax
    61a9:	4c 8d 05 10 22 00 00 	lea    0x2210(%rip),%r8        # 83c0 <_IO_stdin_used+0x3c0>
    61b0:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    61b7:	e8 f4 c2 ff ff       	call   24b0 <__snprintf_chk@plt>
    61bc:	58                   	pop    %rax
    61bd:	4c 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%r10
    61c4:	5a                   	pop    %rdx
    61c5:	e9 14 fd ff ff       	jmp    5ede <srunner_run_tagged+0x82e>
    61ca:	80 78 02 00          	cmpb   $0x0,0x2(%rax)
    61ce:	be 02 00 00 00       	mov    $0x2,%esi
    61d3:	0f 84 e9 f9 ff ff    	je     5bc2 <srunner_run_tagged+0x512>
    61d9:	e9 92 fd ff ff       	jmp    5f70 <srunner_run_tagged+0x8c0>
    61de:	41 38 c8             	cmp    %cl,%r8b
    61e1:	0f 84 36 fc ff ff    	je     5e1d <srunner_run_tagged+0x76d>
    61e7:	45 84 d2             	test   %r10b,%r10b
    61ea:	0f 84 2d fc ff ff    	je     5e1d <srunner_run_tagged+0x76d>
    61f0:	49 83 7e 30 00       	cmpq   $0x0,0x30(%r14)
    61f5:	0f 85 02 fe ff ff    	jne    5ffd <srunner_run_tagged+0x94d>
    61fb:	41 c7 06 03 00 00 00 	movl   $0x3,(%r14)
    6202:	bf 64 00 00 00       	mov    $0x64,%edi
    6207:	89 8d 10 ff ff ff    	mov    %ecx,-0xf0(%rbp)
    620d:	e8 1e da ff ff       	call   3c30 <emalloc>
    6212:	8b 8d 10 ff ff ff    	mov    -0xf0(%rbp),%ecx
    6218:	ba 02 00 00 00       	mov    $0x2,%edx
    621d:	4c 8d 05 8c 27 00 00 	lea    0x278c(%rip),%r8        # 89b0 <_IO_stdin_used+0x9b0>
    6224:	48 89 c3             	mov    %rax,%rbx
    6227:	48 89 c7             	mov    %rax,%rdi
    622a:	be 64 00 00 00       	mov    $0x64,%esi
    622f:	31 c0                	xor    %eax,%eax
    6231:	44 0f be c9          	movsbl %cl,%r9d
    6235:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    623c:	e8 6f c2 ff ff       	call   24b0 <__snprintf_chk@plt>
    6241:	49 89 5e 30          	mov    %rbx,0x30(%r14)
    6245:	e9 d3 fb ff ff       	jmp    5e1d <srunner_run_tagged+0x76d>
    624a:	41 8b 77 38          	mov    0x38(%r15),%esi
    624e:	4c 8b a5 20 ff ff ff 	mov    -0xe0(%rbp),%r12
    6255:	4c 8b ad 58 ff ff ff 	mov    -0xa8(%rbp),%r13
    625c:	4c 8b b5 08 ff ff ff 	mov    -0xf8(%rbp),%r14
    6263:	85 f6                	test   %esi,%esi
    6265:	74 0e                	je     6275 <srunner_run_tagged+0xbc5>
    6267:	49 8b 7d 28          	mov    0x28(%r13),%rdi
    626b:	e8 30 ee ff ff       	call   50a0 <srunner_run_teardown>
    6270:	e9 dc f7 ff ff       	jmp    5a51 <srunner_run_tagged+0x3a1>
    6275:	48 8d 3d dc 20 00 00 	lea    0x20dc(%rip),%rdi        # 8358 <_IO_stdin_used+0x358>
    627c:	e8 ff c1 ff ff       	call   2480 <getenv@plt>
    6281:	48 85 c0             	test   %rax,%rax
    6284:	74 16                	je     629c <srunner_run_tagged+0xbec>
    6286:	80 38 6e             	cmpb   $0x6e,(%rax)
    6289:	75 11                	jne    629c <srunner_run_tagged+0xbec>
    628b:	80 78 01 6f          	cmpb   $0x6f,0x1(%rax)
    628f:	75 0b                	jne    629c <srunner_run_tagged+0xbec>
    6291:	80 78 02 00          	cmpb   $0x0,0x2(%rax)
    6295:	be 02 00 00 00       	mov    $0x2,%esi
    629a:	74 cb                	je     6267 <srunner_run_tagged+0xbb7>
    629c:	be 01 00 00 00       	mov    $0x1,%esi
    62a1:	eb c4                	jmp    6267 <srunner_run_tagged+0xbb7>
    62a3:	ba 0b 01 00 00       	mov    $0x10b,%edx
    62a8:	48 8d 35 59 20 00 00 	lea    0x2059(%rip),%rsi        # 8308 <_IO_stdin_used+0x308>
    62af:	48 8d 3d 22 21 00 00 	lea    0x2122(%rip),%rdi        # 83d8 <_IO_stdin_used+0x3d8>
    62b6:	31 c0                	xor    %eax,%eax
    62b8:	e8 33 d8 ff ff       	call   3af0 <eprintf>
    62bd:	89 d9                	mov    %ebx,%ecx
    62bf:	ba 1e 03 00 00       	mov    $0x31e,%edx
    62c4:	48 8d 35 3d 20 00 00 	lea    0x203d(%rip),%rsi        # 8308 <_IO_stdin_used+0x308>
    62cb:	31 c0                	xor    %eax,%eax
    62cd:	48 8d 3d 8c 26 00 00 	lea    0x268c(%rip),%rdi        # 8960 <_IO_stdin_used+0x960>
    62d4:	e8 17 d8 ff ff       	call   3af0 <eprintf>
    62d9:	ba e5 01 00 00       	mov    $0x1e5,%edx
    62de:	48 8d 35 23 20 00 00 	lea    0x2023(%rip),%rsi        # 8308 <_IO_stdin_used+0x308>
    62e5:	48 8d 3d bd 20 00 00 	lea    0x20bd(%rip),%rdi        # 83a9 <_IO_stdin_used+0x3a9>
    62ec:	31 c0                	xor    %eax,%eax
    62ee:	e8 fd d7 ff ff       	call   3af0 <eprintf>
    62f3:	ba 18 02 00 00       	mov    $0x218,%edx
    62f8:	48 8d 35 09 20 00 00 	lea    0x2009(%rip),%rsi        # 8308 <_IO_stdin_used+0x308>
    62ff:	48 8d 3d ca 26 00 00 	lea    0x26ca(%rip),%rdi        # 89d0 <_IO_stdin_used+0x9d0>
    6306:	31 c0                	xor    %eax,%eax
    6308:	e8 e3 d7 ff ff       	call   3af0 <eprintf>
    630d:	e8 9e c2 ff ff       	call   25b0 <__stack_chk_fail@plt>
    6312:	ba 10 02 00 00       	mov    $0x210,%edx
    6317:	48 8d 35 ea 1f 00 00 	lea    0x1fea(%rip),%rsi        # 8308 <_IO_stdin_used+0x308>
    631e:	48 8d 3d 6b 26 00 00 	lea    0x266b(%rip),%rdi        # 8990 <_IO_stdin_used+0x990>
    6325:	31 c0                	xor    %eax,%eax
    6327:	e8 c4 d7 ff ff       	call   3af0 <eprintf>
    632c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006330 <srunner_run_all>:
    6330:	f3 0f 1e fa          	endbr64
    6334:	41 89 f1             	mov    %esi,%r9d
    6337:	45 31 c0             	xor    %r8d,%r8d
    633a:	31 c9                	xor    %ecx,%ecx
    633c:	31 d2                	xor    %edx,%edx
    633e:	31 f6                	xor    %esi,%esi
    6340:	e9 6b f3 ff ff       	jmp    56b0 <srunner_run_tagged>
    6345:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    634c:	00 00 00 00 

0000000000006350 <srunner_run>:
    6350:	f3 0f 1e fa          	endbr64
    6354:	41 89 c9             	mov    %ecx,%r9d
    6357:	45 31 c0             	xor    %r8d,%r8d
    635a:	31 c9                	xor    %ecx,%ecx
    635c:	e9 4f f3 ff ff       	jmp    56b0 <srunner_run_tagged>
    6361:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6368:	00 00 00 00 
    636c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006370 <check_fork>:
    6370:	f3 0f 1e fa          	endbr64
    6374:	55                   	push   %rbp
    6375:	48 89 e5             	mov    %rsp,%rbp
    6378:	53                   	push   %rbx
    6379:	48 83 ec 08          	sub    $0x8,%rsp
    637d:	e8 fe c4 ff ff       	call   2880 <fork@plt>
    6382:	89 c3                	mov    %eax,%ebx
    6384:	85 c0                	test   %eax,%eax
    6386:	78 0d                	js     6395 <check_fork+0x25>
    6388:	8b 35 ea 61 00 00    	mov    0x61ea(%rip),%esi        # c578 <group_pid>
    638e:	89 c7                	mov    %eax,%edi
    6390:	e8 6b c4 ff ff       	call   2800 <setpgid@plt>
    6395:	89 d8                	mov    %ebx,%eax
    6397:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    639b:	c9                   	leave
    639c:	c3                   	ret
    639d:	0f 1f 00             	nopl   (%rax)

00000000000063a0 <check_waitpid_and_exit>:
    63a0:	f3 0f 1e fa          	endbr64
    63a4:	55                   	push   %rbp
    63a5:	48 89 e5             	mov    %rsp,%rbp
    63a8:	41 54                	push   %r12
    63aa:	53                   	push   %rbx
    63ab:	48 83 ec 10          	sub    $0x10,%rsp
    63af:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    63b6:	00 00 
    63b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    63bc:	31 c0                	xor    %eax,%eax
    63be:	85 ff                	test   %edi,%edi
    63c0:	7e 46                	jle    6408 <check_waitpid_and_exit+0x68>
    63c2:	89 fb                	mov    %edi,%ebx
    63c4:	4c 8d 65 e4          	lea    -0x1c(%rbp),%r12
    63c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    63cf:	00 
    63d0:	31 d2                	xor    %edx,%edx
    63d2:	4c 89 e6             	mov    %r12,%rsi
    63d5:	89 df                	mov    %ebx,%edi
    63d7:	e8 c4 c3 ff ff       	call   27a0 <waitpid@plt>
    63dc:	83 f8 ff             	cmp    $0xffffffff,%eax
    63df:	74 ef                	je     63d0 <check_waitpid_and_exit+0x30>
    63e1:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    63e4:	89 d0                	mov    %edx,%eax
    63e6:	83 e0 7f             	and    $0x7f,%eax
    63e9:	8d 48 01             	lea    0x1(%rax),%ecx
    63ec:	80 f9 01             	cmp    $0x1,%cl
    63ef:	7e 0e                	jle    63ff <check_waitpid_and_exit+0x5f>
    63f1:	85 c0                	test   %eax,%eax
    63f3:	74 0a                	je     63ff <check_waitpid_and_exit+0x5f>
    63f5:	bf 01 00 00 00       	mov    $0x1,%edi
    63fa:	e8 11 c4 ff ff       	call   2810 <exit@plt>
    63ff:	80 e6 ff             	and    $0xff,%dh
    6402:	74 04                	je     6408 <check_waitpid_and_exit+0x68>
    6404:	85 c0                	test   %eax,%eax
    6406:	74 ed                	je     63f5 <check_waitpid_and_exit+0x55>
    6408:	31 ff                	xor    %edi,%edi
    640a:	e8 01 c4 ff ff       	call   2810 <exit@plt>
    640f:	90                   	nop

0000000000006410 <ck_strdup_printf>:
    6410:	f3 0f 1e fa          	endbr64
    6414:	55                   	push   %rbp
    6415:	48 89 e5             	mov    %rsp,%rbp
    6418:	41 56                	push   %r14
    641a:	41 55                	push   %r13
    641c:	41 54                	push   %r12
    641e:	53                   	push   %rbx
    641f:	48 89 fb             	mov    %rdi,%rbx
    6422:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    6429:	48 89 b5 38 ff ff ff 	mov    %rsi,-0xc8(%rbp)
    6430:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    6437:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
    643e:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
    6445:	4c 89 8d 58 ff ff ff 	mov    %r9,-0xa8(%rbp)
    644c:	84 c0                	test   %al,%al
    644e:	74 26                	je     6476 <ck_strdup_printf+0x66>
    6450:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    6457:	0f 29 8d 70 ff ff ff 	movaps %xmm1,-0x90(%rbp)
    645e:	0f 29 55 80          	movaps %xmm2,-0x80(%rbp)
    6462:	0f 29 5d 90          	movaps %xmm3,-0x70(%rbp)
    6466:	0f 29 65 a0          	movaps %xmm4,-0x60(%rbp)
    646a:	0f 29 6d b0          	movaps %xmm5,-0x50(%rbp)
    646e:	0f 29 75 c0          	movaps %xmm6,-0x40(%rbp)
    6472:	0f 29 7d d0          	movaps %xmm7,-0x30(%rbp)
    6476:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    647d:	00 00 
    647f:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    6486:	31 c0                	xor    %eax,%eax
    6488:	bf 64 00 00 00       	mov    $0x64,%edi
    648d:	41 bd 64 00 00 00    	mov    $0x64,%r13d
    6493:	4c 8d a5 10 ff ff ff 	lea    -0xf0(%rbp),%r12
    649a:	e8 91 d7 ff ff       	call   3c30 <emalloc>
    649f:	49 89 c6             	mov    %rax,%r14
    64a2:	eb 1d                	jmp    64c1 <ck_strdup_printf+0xb1>
    64a4:	0f 1f 40 00          	nopl   0x0(%rax)
    64a8:	44 39 e8             	cmp    %r13d,%eax
    64ab:	7c 6b                	jl     6518 <ck_strdup_printf+0x108>
    64ad:	48 98                	cltq
    64af:	4c 8d 68 01          	lea    0x1(%rax),%r13
    64b3:	4c 89 f7             	mov    %r14,%rdi
    64b6:	4c 89 ee             	mov    %r13,%rsi
    64b9:	e8 b2 d7 ff ff       	call   3c70 <erealloc>
    64be:	49 89 c6             	mov    %rax,%r14
    64c1:	48 8d 45 10          	lea    0x10(%rbp),%rax
    64c5:	4d 89 e1             	mov    %r12,%r9
    64c8:	49 89 d8             	mov    %rbx,%r8
    64cb:	ba 02 00 00 00       	mov    $0x2,%edx
    64d0:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    64d7:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    64de:	4c 89 ee             	mov    %r13,%rsi
    64e1:	4c 89 f7             	mov    %r14,%rdi
    64e4:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    64eb:	c7 85 10 ff ff ff 08 	movl   $0x8,-0xf0(%rbp)
    64f2:	00 00 00 
    64f5:	c7 85 14 ff ff ff 30 	movl   $0x30,-0xec(%rbp)
    64fc:	00 00 00 
    64ff:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    6506:	e8 05 c2 ff ff       	call   2710 <__vsnprintf_chk@plt>
    650b:	85 c0                	test   %eax,%eax
    650d:	79 99                	jns    64a8 <ck_strdup_printf+0x98>
    650f:	4d 01 ed             	add    %r13,%r13
    6512:	eb 9f                	jmp    64b3 <ck_strdup_printf+0xa3>
    6514:	0f 1f 40 00          	nopl   0x0(%rax)
    6518:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    651f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6526:	00 00 
    6528:	75 13                	jne    653d <ck_strdup_printf+0x12d>
    652a:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
    6531:	4c 89 f0             	mov    %r14,%rax
    6534:	5b                   	pop    %rbx
    6535:	41 5c                	pop    %r12
    6537:	41 5d                	pop    %r13
    6539:	41 5e                	pop    %r14
    653b:	5d                   	pop    %rbp
    653c:	c3                   	ret
    653d:	e8 6e c0 ff ff       	call   25b0 <__stack_chk_fail@plt>
    6542:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6549:	00 00 00 00 
    654d:	0f 1f 00             	nopl   (%rax)

0000000000006550 <tr_str>:
    6550:	f3 0f 1e fa          	endbr64
    6554:	55                   	push   %rbp
    6555:	8b 07                	mov    (%rdi),%eax
    6557:	4c 8b 57 30          	mov    0x30(%rdi),%r10
    655b:	44 8b 5f 14          	mov    0x14(%rdi),%r11d
    655f:	4c 8b 4f 28          	mov    0x28(%rdi),%r9
    6563:	4c 8b 47 20          	mov    0x20(%rdi),%r8
    6567:	8b 57 04             	mov    0x4(%rdi),%edx
    656a:	48 89 e5             	mov    %rsp,%rbp
    656d:	83 f8 03             	cmp    $0x3,%eax
    6570:	74 66                	je     65d8 <tr_str+0x88>
    6572:	48 8d 35 22 1f 00 00 	lea    0x1f22(%rip),%rsi        # 849b <_IO_stdin_used+0x49b>
    6579:	48 8d 0d 2c 1f 00 00 	lea    0x1f2c(%rip),%rcx        # 84ac <_IO_stdin_used+0x4ac>
    6580:	83 fa 02             	cmp    $0x2,%edx
    6583:	74 2b                	je     65b0 <tr_str+0x60>
    6585:	48 83 ec 08          	sub    $0x8,%rsp
    6589:	48 8b 47 08          	mov    0x8(%rdi),%rax
    658d:	8b 57 10             	mov    0x10(%rdi),%edx
    6590:	48 8d 3d 72 1e 00 00 	lea    0x1e72(%rip),%rdi        # 8409 <_IO_stdin_used+0x409>
    6597:	41 52                	push   %r10
    6599:	56                   	push   %rsi
    659a:	48 89 c6             	mov    %rax,%rsi
    659d:	31 c0                	xor    %eax,%eax
    659f:	41 53                	push   %r11
    65a1:	e8 6a fe ff ff       	call   6410 <ck_strdup_printf>
    65a6:	c9                   	leave
    65a7:	c3                   	ret
    65a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    65af:	00 
    65b0:	48 8d 0d 3c 1e 00 00 	lea    0x1e3c(%rip),%rcx        # 83f3 <_IO_stdin_used+0x3f3>
    65b7:	83 f8 02             	cmp    $0x2,%eax
    65ba:	74 c9                	je     6585 <tr_str+0x35>
    65bc:	83 f8 01             	cmp    $0x1,%eax
    65bf:	48 8d 0d 4c 1c 00 00 	lea    0x1c4c(%rip),%rcx        # 8212 <_IO_stdin_used+0x212>
    65c6:	b8 00 00 00 00       	mov    $0x0,%eax
    65cb:	48 0f 45 c8          	cmovne %rax,%rcx
    65cf:	eb b4                	jmp    6585 <tr_str+0x35>
    65d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    65d8:	83 fa 02             	cmp    $0x2,%edx
    65db:	48 8d 0d ca 1e 00 00 	lea    0x1eca(%rip),%rcx        # 84ac <_IO_stdin_used+0x4ac>
    65e2:	48 8d 05 06 1f 00 00 	lea    0x1f06(%rip),%rax        # 84ef <_IO_stdin_used+0x4ef>
    65e9:	48 0f 44 c8          	cmove  %rax,%rcx
    65ed:	48 8d 35 01 1e 00 00 	lea    0x1e01(%rip),%rsi        # 83f5 <_IO_stdin_used+0x3f5>
    65f4:	eb 8f                	jmp    6585 <tr_str+0x35>
    65f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    65fd:	00 00 00 

0000000000006600 <tr_short_str>:
    6600:	f3 0f 1e fa          	endbr64
    6604:	83 3f 03             	cmpl   $0x3,(%rdi)
    6607:	48 8d 05 e7 1d 00 00 	lea    0x1de7(%rip),%rax        # 83f5 <_IO_stdin_used+0x3f5>
    660e:	48 8d 0d 86 1e 00 00 	lea    0x1e86(%rip),%rcx        # 849b <_IO_stdin_used+0x49b>
    6615:	8b 57 10             	mov    0x10(%rdi),%edx
    6618:	48 0f 44 c8          	cmove  %rax,%rcx
    661c:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6620:	4c 8b 47 30          	mov    0x30(%rdi),%r8
    6624:	31 c0                	xor    %eax,%eax
    6626:	48 8d 3d e8 1d 00 00 	lea    0x1de8(%rip),%rdi        # 8415 <_IO_stdin_used+0x415>
    662d:	e9 de fd ff ff       	jmp    6410 <ck_strdup_printf>
    6632:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6639:	00 00 00 00 
    663d:	0f 1f 00             	nopl   (%rax)

0000000000006640 <sr_stat_str>:
    6640:	f3 0f 1e fa          	endbr64
    6644:	48 8b 47 08          	mov    0x8(%rdi),%rax
    6648:	44 8b 40 08          	mov    0x8(%rax),%r8d
    664c:	8b 48 04             	mov    0x4(%rax),%ecx
    664f:	8b 10                	mov    (%rax),%edx
    6651:	44 89 c0             	mov    %r8d,%eax
    6654:	09 c8                	or     %ecx,%eax
    6656:	74 40                	je     6698 <sr_stat_str+0x58>
    6658:	31 f6                	xor    %esi,%esi
    665a:	85 d2                	test   %edx,%edx
    665c:	74 28                	je     6686 <sr_stat_str+0x46>
    665e:	41 8d 34 08          	lea    (%r8,%rcx,1),%esi
    6662:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6666:	66 0f ef c9          	pxor   %xmm1,%xmm1
    666a:	89 d0                	mov    %edx,%eax
    666c:	29 f0                	sub    %esi,%eax
    666e:	f3 0f 2a ca          	cvtsi2ss %edx,%xmm1
    6672:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
    6676:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    667a:	f3 0f 59 05 82 19 00 	mulss  0x1982(%rip),%xmm0        # 8004 <_IO_stdin_used+0x4>
    6681:	00 
    6682:	f3 0f 2c f0          	cvttss2si %xmm0,%esi
    6686:	48 8d 3d 63 23 00 00 	lea    0x2363(%rip),%rdi        # 89f0 <_IO_stdin_used+0x9f0>
    668d:	31 c0                	xor    %eax,%eax
    668f:	e9 7c fd ff ff       	jmp    6410 <ck_strdup_printf>
    6694:	0f 1f 40 00          	nopl   0x0(%rax)
    6698:	be 64 00 00 00       	mov    $0x64,%esi
    669d:	48 8d 3d 4c 23 00 00 	lea    0x234c(%rip),%rdi        # 89f0 <_IO_stdin_used+0x9f0>
    66a4:	31 c0                	xor    %eax,%eax
    66a6:	e9 65 fd ff ff       	jmp    6410 <ck_strdup_printf>
    66ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000066b0 <srunner_send_evt>:
    66b0:	55                   	push   %rbp
    66b1:	48 89 e5             	mov    %rsp,%rbp
    66b4:	41 57                	push   %r15
    66b6:	49 89 f7             	mov    %rsi,%r15
    66b9:	41 56                	push   %r14
    66bb:	41 89 d6             	mov    %edx,%r14d
    66be:	41 55                	push   %r13
    66c0:	49 89 fd             	mov    %rdi,%r13
    66c3:	41 54                	push   %r12
    66c5:	53                   	push   %rbx
    66c6:	48 83 ec 08          	sub    $0x8,%rsp
    66ca:	4c 8b 67 30          	mov    0x30(%rdi),%r12
    66ce:	4c 89 e7             	mov    %r12,%rdi
    66d1:	e8 4a d7 ff ff       	call   3e20 <check_list_front>
    66d6:	eb 3d                	jmp    6715 <srunner_send_evt+0x65>
    66d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    66df:	00 
    66e0:	4c 89 e7             	mov    %r12,%rdi
    66e3:	e8 98 d7 ff ff       	call   3e80 <check_list_val>
    66e8:	48 8b 38             	mov    (%rax),%rdi
    66eb:	48 89 c3             	mov    %rax,%rbx
    66ee:	e8 ed bf ff ff       	call   26e0 <fflush@plt>
    66f3:	8b 53 14             	mov    0x14(%rbx),%edx
    66f6:	48 8b 33             	mov    (%rbx),%rsi
    66f9:	45 89 f0             	mov    %r14d,%r8d
    66fc:	4c 89 f9             	mov    %r15,%rcx
    66ff:	4c 89 ef             	mov    %r13,%rdi
    6702:	ff 53 08             	call   *0x8(%rbx)
    6705:	48 8b 3b             	mov    (%rbx),%rdi
    6708:	e8 d3 bf ff ff       	call   26e0 <fflush@plt>
    670d:	4c 89 e7             	mov    %r12,%rdi
    6710:	e8 9b d7 ff ff       	call   3eb0 <check_list_advance>
    6715:	4c 89 e7             	mov    %r12,%rdi
    6718:	e8 e3 d6 ff ff       	call   3e00 <check_list_at_end>
    671d:	85 c0                	test   %eax,%eax
    671f:	74 bf                	je     66e0 <srunner_send_evt+0x30>
    6721:	48 83 c4 08          	add    $0x8,%rsp
    6725:	5b                   	pop    %rbx
    6726:	41 5c                	pop    %r12
    6728:	41 5d                	pop    %r13
    672a:	41 5e                	pop    %r14
    672c:	41 5f                	pop    %r15
    672e:	5d                   	pop    %rbp
    672f:	c3                   	ret

0000000000006730 <stdout_lfun>:
    6730:	f3 0f 1e fa          	endbr64
    6734:	41 83 f8 07          	cmp    $0x7,%r8d
    6738:	77 6e                	ja     67a8 <stdout_lfun+0x78>
    673a:	49 89 f9             	mov    %rdi,%r9
    673d:	45 89 c0             	mov    %r8d,%r8d
    6740:	48 89 f7             	mov    %rsi,%rdi
    6743:	48 8d 35 76 25 00 00 	lea    0x2576(%rip),%rsi        # 8cc0 <_IO_stdin_used+0xcc0>
    674a:	4a 63 04 86          	movslq (%rsi,%r8,4),%rax
    674e:	48 01 f0             	add    %rsi,%rax
    6751:	3e ff e0             	notrack jmp *%rax
    6754:	0f 1f 40 00          	nopl   0x0(%rax)
    6758:	85 d2                	test   %edx,%edx
    675a:	75 44                	jne    67a0 <stdout_lfun+0x70>
    675c:	c3                   	ret
    675d:	0f 1f 00             	nopl   (%rax)
    6760:	85 d2                	test   %edx,%edx
    6762:	74 f8                	je     675c <stdout_lfun+0x2c>
    6764:	48 8b 09             	mov    (%rcx),%rcx
    6767:	48 8d 15 fa 1c 00 00 	lea    0x1cfa(%rip),%rdx        # 8468 <_IO_stdin_used+0x468>
    676e:	be 02 00 00 00       	mov    $0x2,%esi
    6773:	31 c0                	xor    %eax,%eax
    6775:	e9 b6 c0 ff ff       	jmp    2830 <__fprintf_chk@plt>
    677a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6780:	85 d2                	test   %edx,%edx
    6782:	74 d8                	je     675c <stdout_lfun+0x2c>
    6784:	48 89 f9             	mov    %rdi,%rcx
    6787:	ba 11 00 00 00       	mov    $0x11,%edx
    678c:	be 01 00 00 00       	mov    $0x1,%esi
    6791:	48 8d 3d 89 1c 00 00 	lea    0x1c89(%rip),%rdi        # 8421 <_IO_stdin_used+0x421>
    6798:	e9 83 c0 ff ff       	jmp    2820 <fwrite@plt>
    679d:	0f 1f 00             	nopl   (%rax)
    67a0:	4c 89 ce             	mov    %r9,%rsi
    67a3:	e9 98 13 00 00       	jmp    7b40 <srunner_fprint>
    67a8:	55                   	push   %rbp
    67a9:	ba dc 00 00 00       	mov    $0xdc,%edx
    67ae:	48 8d 35 7e 1c 00 00 	lea    0x1c7e(%rip),%rsi        # 8433 <_IO_stdin_used+0x433>
    67b5:	31 c0                	xor    %eax,%eax
    67b7:	48 8d 3d 62 22 00 00 	lea    0x2262(%rip),%rdi        # 8a20 <_IO_stdin_used+0xa20>
    67be:	48 89 e5             	mov    %rsp,%rbp
    67c1:	e8 2a d3 ff ff       	call   3af0 <eprintf>
    67c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    67cd:	00 00 00 

00000000000067d0 <tap_lfun>:
    67d0:	f3 0f 1e fa          	endbr64
    67d4:	55                   	push   %rbp
    67d5:	48 89 e5             	mov    %rsp,%rbp
    67d8:	53                   	push   %rbx
    67d9:	48 89 f3             	mov    %rsi,%rbx
    67dc:	48 83 ec 08          	sub    $0x8,%rsp
    67e0:	41 83 f8 06          	cmp    $0x6,%r8d
    67e4:	77 4a                	ja     6830 <tap_lfun+0x60>
    67e6:	41 83 f8 01          	cmp    $0x1,%r8d
    67ea:	77 3e                	ja     682a <tap_lfun+0x5a>
    67ec:	45 85 c0             	test   %r8d,%r8d
    67ef:	74 2f                	je     6820 <tap_lfun+0x50>
    67f1:	8b 0d 89 5d 00 00    	mov    0x5d89(%rip),%ecx        # c580 <num_tests_run.0>
    67f7:	48 89 df             	mov    %rbx,%rdi
    67fa:	be 02 00 00 00       	mov    $0x2,%esi
    67ff:	31 c0                	xor    %eax,%eax
    6801:	48 8d 15 48 1c 00 00 	lea    0x1c48(%rip),%rdx        # 8450 <_IO_stdin_used+0x450>
    6808:	e8 23 c0 ff ff       	call   2830 <__fprintf_chk@plt>
    680d:	48 89 df             	mov    %rbx,%rdi
    6810:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6814:	c9                   	leave
    6815:	e9 c6 be ff ff       	jmp    26e0 <fflush@plt>
    681a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6820:	c7 05 56 5d 00 00 00 	movl   $0x0,0x5d56(%rip)        # c580 <num_tests_run.0>
    6827:	00 00 00 
    682a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    682e:	c9                   	leave
    682f:	c3                   	ret
    6830:	41 83 f8 07          	cmp    $0x7,%r8d
    6834:	75 61                	jne    6897 <tap_lfun+0xc7>
    6836:	8b 05 44 5d 00 00    	mov    0x5d44(%rip),%eax        # c580 <num_tests_run.0>
    683c:	83 39 01             	cmpl   $0x1,(%rcx)
    683f:	48 8d 15 07 1c 00 00 	lea    0x1c07(%rip),%rdx        # 844d <_IO_stdin_used+0x44d>
    6846:	48 89 df             	mov    %rbx,%rdi
    6849:	be 02 00 00 00       	mov    $0x2,%esi
    684e:	44 8d 40 01          	lea    0x1(%rax),%r8d
    6852:	48 8d 05 f0 1b 00 00 	lea    0x1bf0(%rip),%rax        # 8449 <_IO_stdin_used+0x449>
    6859:	48 0f 44 c2          	cmove  %rdx,%rax
    685d:	48 83 ec 08          	sub    $0x8,%rsp
    6861:	ff 71 30             	push   0x30(%rcx)
    6864:	48 8d 15 ec 1b 00 00 	lea    0x1bec(%rip),%rdx        # 8457 <_IO_stdin_used+0x457>
    686b:	ff 71 28             	push   0x28(%rcx)
    686e:	ff 71 20             	push   0x20(%rcx)
    6871:	4c 8b 49 08          	mov    0x8(%rcx),%r9
    6875:	48 89 c1             	mov    %rax,%rcx
    6878:	31 c0                	xor    %eax,%eax
    687a:	44 89 05 ff 5c 00 00 	mov    %r8d,0x5cff(%rip)        # c580 <num_tests_run.0>
    6881:	e8 aa bf ff ff       	call   2830 <__fprintf_chk@plt>
    6886:	48 83 c4 20          	add    $0x20,%rsp
    688a:	48 89 df             	mov    %rbx,%rdi
    688d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6891:	c9                   	leave
    6892:	e9 49 be ff ff       	jmp    26e0 <fflush@plt>
    6897:	ba 7c 01 00 00       	mov    $0x17c,%edx
    689c:	48 8d 35 90 1b 00 00 	lea    0x1b90(%rip),%rsi        # 8433 <_IO_stdin_used+0x433>
    68a3:	48 8d 3d 9e 21 00 00 	lea    0x219e(%rip),%rdi        # 8a48 <_IO_stdin_used+0xa48>
    68aa:	31 c0                	xor    %eax,%eax
    68ac:	e8 3f d2 ff ff       	call   3af0 <eprintf>
    68b1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    68b8:	00 00 00 00 
    68bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000068c0 <lfile_lfun>:
    68c0:	f3 0f 1e fa          	endbr64
    68c4:	55                   	push   %rbp
    68c5:	48 89 e5             	mov    %rsp,%rbp
    68c8:	41 54                	push   %r12
    68ca:	53                   	push   %rbx
    68cb:	41 83 f8 07          	cmp    $0x7,%r8d
    68cf:	0f 87 88 00 00 00    	ja     695d <lfile_lfun+0x9d>
    68d5:	48 8d 15 04 24 00 00 	lea    0x2404(%rip),%rdx        # 8ce0 <_IO_stdin_used+0xce0>
    68dc:	45 89 c0             	mov    %r8d,%r8d
    68df:	48 89 f3             	mov    %rsi,%rbx
    68e2:	4a 63 04 82          	movslq (%rdx,%r8,4),%rax
    68e6:	48 01 d0             	add    %rdx,%rax
    68e9:	3e ff e0             	notrack jmp *%rax
    68ec:	0f 1f 40 00          	nopl   0x0(%rax)
    68f0:	5b                   	pop    %rbx
    68f1:	41 5c                	pop    %r12
    68f3:	5d                   	pop    %rbp
    68f4:	c3                   	ret
    68f5:	0f 1f 00             	nopl   (%rax)
    68f8:	48 89 df             	mov    %rbx,%rdi
    68fb:	ba 03 00 00 00       	mov    $0x3,%edx
    6900:	5b                   	pop    %rbx
    6901:	48 89 ce             	mov    %rcx,%rsi
    6904:	41 5c                	pop    %r12
    6906:	5d                   	pop    %rbp
    6907:	e9 c4 11 00 00       	jmp    7ad0 <tr_fprint>
    690c:	0f 1f 40 00          	nopl   0x0(%rax)
    6910:	49 89 fc             	mov    %rdi,%r12
    6913:	48 89 f1             	mov    %rsi,%rcx
    6916:	ba 1c 00 00 00       	mov    $0x1c,%edx
    691b:	be 01 00 00 00       	mov    $0x1,%esi
    6920:	48 8d 3d 58 1b 00 00 	lea    0x1b58(%rip),%rdi        # 847f <_IO_stdin_used+0x47f>
    6927:	e8 f4 be ff ff       	call   2820 <fwrite@plt>
    692c:	4c 89 e6             	mov    %r12,%rsi
    692f:	48 89 df             	mov    %rbx,%rdi
    6932:	ba 01 00 00 00       	mov    $0x1,%edx
    6937:	5b                   	pop    %rbx
    6938:	41 5c                	pop    %r12
    693a:	5d                   	pop    %rbp
    693b:	e9 00 12 00 00       	jmp    7b40 <srunner_fprint>
    6940:	48 8b 09             	mov    (%rcx),%rcx
    6943:	48 89 df             	mov    %rbx,%rdi
    6946:	48 8d 15 20 1b 00 00 	lea    0x1b20(%rip),%rdx        # 846d <_IO_stdin_used+0x46d>
    694d:	5b                   	pop    %rbx
    694e:	be 02 00 00 00       	mov    $0x2,%esi
    6953:	41 5c                	pop    %r12
    6955:	31 c0                	xor    %eax,%eax
    6957:	5d                   	pop    %rbp
    6958:	e9 d3 be ff ff       	jmp    2830 <__fprintf_chk@plt>
    695d:	ba 03 01 00 00       	mov    $0x103,%edx
    6962:	48 8d 35 ca 1a 00 00 	lea    0x1aca(%rip),%rsi        # 8433 <_IO_stdin_used+0x433>
    6969:	48 8d 3d 00 21 00 00 	lea    0x2100(%rip),%rdi        # 8a70 <_IO_stdin_used+0xa70>
    6970:	31 c0                	xor    %eax,%eax
    6972:	e8 79 d1 ff ff       	call   3af0 <eprintf>
    6977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    697e:	00 00 

0000000000006980 <xml_lfun>:
    6980:	f3 0f 1e fa          	endbr64
    6984:	55                   	push   %rbp
    6985:	48 89 e5             	mov    %rsp,%rbp
    6988:	41 57                	push   %r15
    698a:	41 56                	push   %r14
    698c:	4c 8d 35 0d 5c 00 00 	lea    0x5c0d(%rip),%r14        # c5a0 <t.2>
    6993:	41 55                	push   %r13
    6995:	49 89 cd             	mov    %rcx,%r13
    6998:	41 54                	push   %r12
    699a:	49 89 f4             	mov    %rsi,%r12
    699d:	53                   	push   %rbx
    699e:	44 89 c3             	mov    %r8d,%ebx
    69a1:	48 83 ec 68          	sub    $0x68,%rsp
    69a5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    69ac:	00 00 
    69ae:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    69b2:	31 c0                	xor    %eax,%eax
    69b4:	80 3d e5 5b 00 00 00 	cmpb   $0x0,0x5be5(%rip)        # c5a0 <t.2>
    69bb:	0f 84 df 00 00 00    	je     6aa0 <xml_lfun+0x120>
    69c1:	83 fb 07             	cmp    $0x7,%ebx
    69c4:	0f 87 2c 02 00 00    	ja     6bf6 <xml_lfun+0x276>
    69ca:	48 8d 15 2f 23 00 00 	lea    0x232f(%rip),%rdx        # 8d00 <_IO_stdin_used+0xd00>
    69d1:	48 63 04 9a          	movslq (%rdx,%rbx,4),%rax
    69d5:	48 01 d0             	add    %rdx,%rax
    69d8:	3e ff e0             	notrack jmp *%rax
    69db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    69e0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    69e4:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    69e8:	e8 93 d0 ff ff       	call   3a80 <check_get_clockid>
    69ed:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
    69f1:	89 c7                	mov    %eax,%edi
    69f3:	e8 68 bb ff ff       	call   2560 <clock_gettime@plt>
    69f8:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    69fc:	4c 8b 45 90          	mov    -0x70(%rbp),%r8
    6a00:	4c 89 e7             	mov    %r12,%rdi
    6a03:	48 be cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rsi
    6a0a:	9b c4 20 
    6a0d:	4c 2b 05 7c 5b 00 00 	sub    0x5b7c(%rip),%r8        # c590 <ts_start.1>
    6a14:	48 89 c8             	mov    %rcx,%rax
    6a17:	48 c1 f9 3f          	sar    $0x3f,%rcx
    6a1b:	4d 69 c0 40 42 0f 00 	imul   $0xf4240,%r8,%r8
    6a22:	48 f7 ee             	imul   %rsi
    6a25:	48 c1 fa 07          	sar    $0x7,%rdx
    6a29:	48 29 ca             	sub    %rcx,%rdx
    6a2c:	48 8b 0d 65 5b 00 00 	mov    0x5b65(%rip),%rcx        # c598 <ts_start.1+0x8>
    6a33:	49 01 d0             	add    %rdx,%r8
    6a36:	48 89 c8             	mov    %rcx,%rax
    6a39:	48 c1 f9 3f          	sar    $0x3f,%rcx
    6a3d:	48 f7 ee             	imul   %rsi
    6a40:	be 02 00 00 00       	mov    $0x2,%esi
    6a45:	48 b8 db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rax
    6a4c:	de 1b 43 
    6a4f:	48 c1 fa 07          	sar    $0x7,%rdx
    6a53:	48 29 d1             	sub    %rdx,%rcx
    6a56:	49 01 c8             	add    %rcx,%r8
    6a59:	49 f7 e0             	mul    %r8
    6a5c:	48 89 d1             	mov    %rdx,%rcx
    6a5f:	48 8d 15 fa 20 00 00 	lea    0x20fa(%rip),%rdx        # 8b60 <_IO_stdin_used+0xb60>
    6a66:	48 c1 e9 12          	shr    $0x12,%rcx
    6a6a:	48 69 c1 40 42 0f 00 	imul   $0xf4240,%rcx,%rax
    6a71:	49 29 c0             	sub    %rax,%r8
    6a74:	31 c0                	xor    %eax,%eax
    6a76:	e8 b5 bd ff ff       	call   2830 <__fprintf_chk@plt>
    6a7b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6a7f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6a86:	00 00 
    6a88:	0f 85 82 01 00 00    	jne    6c10 <xml_lfun+0x290>
    6a8e:	48 83 c4 68          	add    $0x68,%rsp
    6a92:	5b                   	pop    %rbx
    6a93:	41 5c                	pop    %r12
    6a95:	41 5d                	pop    %r13
    6a97:	41 5e                	pop    %r14
    6a99:	41 5f                	pop    %r15
    6a9b:	5d                   	pop    %rbp
    6a9c:	c3                   	ret
    6a9d:	0f 1f 00             	nopl   (%rax)
    6aa0:	4c 8d 7d 80          	lea    -0x80(%rbp),%r15
    6aa4:	31 f6                	xor    %esi,%esi
    6aa6:	4c 89 ff             	mov    %r15,%rdi
    6aa9:	e8 72 bb ff ff       	call   2620 <gettimeofday@plt>
    6aae:	e8 cd cf ff ff       	call   3a80 <check_get_clockid>
    6ab3:	48 8d 35 d6 5a 00 00 	lea    0x5ad6(%rip),%rsi        # c590 <ts_start.1>
    6aba:	89 c7                	mov    %eax,%edi
    6abc:	e8 9f ba ff ff       	call   2560 <clock_gettime@plt>
    6ac1:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    6ac5:	4c 89 ff             	mov    %r15,%rdi
    6ac8:	48 89 ce             	mov    %rcx,%rsi
    6acb:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
    6ad2:	e8 29 ba ff ff       	call   2500 <localtime_r@plt>
    6ad7:	48 85 c0             	test   %rax,%rax
    6ada:	0f 84 e1 fe ff ff    	je     69c1 <xml_lfun+0x41>
    6ae0:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
    6ae7:	48 8d 15 ae 19 00 00 	lea    0x19ae(%rip),%rdx        # 849c <_IO_stdin_used+0x49c>
    6aee:	be 14 00 00 00       	mov    $0x14,%esi
    6af3:	4c 89 f7             	mov    %r14,%rdi
    6af6:	e8 85 bc ff ff       	call   2780 <strftime@plt>
    6afb:	e9 c1 fe ff ff       	jmp    69c1 <xml_lfun+0x41>
    6b00:	be 01 00 00 00       	mov    $0x1,%esi
    6b05:	48 8d 3d a2 19 00 00 	lea    0x19a2(%rip),%rdi        # 84ae <_IO_stdin_used+0x4ae>
    6b0c:	4c 89 e1             	mov    %r12,%rcx
    6b0f:	ba 15 00 00 00       	mov    $0x15,%edx
    6b14:	e8 07 bd ff ff       	call   2820 <fwrite@plt>
    6b19:	49 8b 75 00          	mov    0x0(%r13),%rsi
    6b1d:	4c 89 e7             	mov    %r12,%rdi
    6b20:	e8 9b 0a 00 00       	call   75c0 <fprint_xml_esc>
    6b25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6b29:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6b30:	00 00 
    6b32:	0f 85 d8 00 00 00    	jne    6c10 <xml_lfun+0x290>
    6b38:	4c 89 e1             	mov    %r12,%rcx
    6b3b:	ba 09 00 00 00       	mov    $0x9,%edx
    6b40:	be 01 00 00 00       	mov    $0x1,%esi
    6b45:	48 8d 3d 78 19 00 00 	lea    0x1978(%rip),%rdi        # 84c4 <_IO_stdin_used+0x4c4>
    6b4c:	48 83 c4 68          	add    $0x68,%rsp
    6b50:	5b                   	pop    %rbx
    6b51:	41 5c                	pop    %r12
    6b53:	41 5d                	pop    %r13
    6b55:	41 5e                	pop    %r14
    6b57:	41 5f                	pop    %r15
    6b59:	5d                   	pop    %rbp
    6b5a:	e9 c1 bc ff ff       	jmp    2820 <fwrite@plt>
    6b5f:	90                   	nop
    6b60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6b64:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6b6b:	00 00 
    6b6d:	0f 85 9d 00 00 00    	jne    6c10 <xml_lfun+0x290>
    6b73:	4c 89 e1             	mov    %r12,%rcx
    6b76:	ba 0b 00 00 00       	mov    $0xb,%edx
    6b7b:	be 01 00 00 00       	mov    $0x1,%esi
    6b80:	48 8d 3d 47 19 00 00 	lea    0x1947(%rip),%rdi        # 84ce <_IO_stdin_used+0x4ce>
    6b87:	eb c3                	jmp    6b4c <xml_lfun+0x1cc>
    6b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b90:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6b94:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6b9b:	00 00 
    6b9d:	75 71                	jne    6c10 <xml_lfun+0x290>
    6b9f:	48 83 c4 68          	add    $0x68,%rsp
    6ba3:	4c 89 ee             	mov    %r13,%rsi
    6ba6:	4c 89 e7             	mov    %r12,%rdi
    6ba9:	ba 03 00 00 00       	mov    $0x3,%edx
    6bae:	5b                   	pop    %rbx
    6baf:	41 5c                	pop    %r12
    6bb1:	41 5d                	pop    %r13
    6bb3:	41 5e                	pop    %r14
    6bb5:	41 5f                	pop    %r15
    6bb7:	5d                   	pop    %rbp
    6bb8:	e9 83 0b 00 00       	jmp    7740 <tr_xmlprint>
    6bbd:	0f 1f 00             	nopl   (%rax)
    6bc0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6bc4:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6bcb:	00 00 
    6bcd:	75 41                	jne    6c10 <xml_lfun+0x290>
    6bcf:	48 83 c4 68          	add    $0x68,%rsp
    6bd3:	4c 89 f1             	mov    %r14,%rcx
    6bd6:	4c 89 e7             	mov    %r12,%rdi
    6bd9:	be 02 00 00 00       	mov    $0x2,%esi
    6bde:	5b                   	pop    %rbx
    6bdf:	48 8d 15 b2 1e 00 00 	lea    0x1eb2(%rip),%rdx        # 8a98 <_IO_stdin_used+0xa98>
    6be6:	41 5c                	pop    %r12
    6be8:	31 c0                	xor    %eax,%eax
    6bea:	41 5d                	pop    %r13
    6bec:	41 5e                	pop    %r14
    6bee:	41 5f                	pop    %r15
    6bf0:	5d                   	pop    %rbp
    6bf1:	e9 3a bc ff ff       	jmp    2830 <__fprintf_chk@plt>
    6bf6:	ba 4f 01 00 00       	mov    $0x14f,%edx
    6bfb:	48 8d 35 31 18 00 00 	lea    0x1831(%rip),%rsi        # 8433 <_IO_stdin_used+0x433>
    6c02:	48 8d 3d 87 1f 00 00 	lea    0x1f87(%rip),%rdi        # 8b90 <_IO_stdin_used+0xb90>
    6c09:	31 c0                	xor    %eax,%eax
    6c0b:	e8 e0 ce ff ff       	call   3af0 <eprintf>
    6c10:	e8 9b b9 ff ff       	call   25b0 <__stack_chk_fail@plt>
    6c15:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6c1c:	00 00 00 00 

0000000000006c20 <subunit_lfun>:
    6c20:	f3 0f 1e fa          	endbr64
    6c24:	55                   	push   %rbp
    6c25:	48 89 e5             	mov    %rsp,%rbp
    6c28:	41 56                	push   %r14
    6c2a:	41 55                	push   %r13
    6c2c:	41 54                	push   %r12
    6c2e:	53                   	push   %rbx
    6c2f:	41 83 f8 07          	cmp    $0x7,%r8d
    6c33:	0f 87 ea 00 00 00    	ja     6d23 <subunit_lfun+0x103>
    6c39:	41 89 d6             	mov    %edx,%r14d
    6c3c:	45 89 c0             	mov    %r8d,%r8d
    6c3f:	48 8d 15 da 20 00 00 	lea    0x20da(%rip),%rdx        # 8d20 <_IO_stdin_used+0xd20>
    6c46:	48 89 cb             	mov    %rcx,%rbx
    6c49:	4a 63 04 82          	movslq (%rdx,%r8,4),%rax
    6c4d:	48 01 d0             	add    %rdx,%rax
    6c50:	3e ff e0             	notrack jmp *%rax
    6c53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6c58:	45 85 f6             	test   %r14d,%r14d
    6c5b:	0f 85 87 00 00 00    	jne    6ce8 <subunit_lfun+0xc8>
    6c61:	5b                   	pop    %rbx
    6c62:	41 5c                	pop    %r12
    6c64:	41 5d                	pop    %r13
    6c66:	41 5e                	pop    %r14
    6c68:	5d                   	pop    %rbp
    6c69:	c3                   	ret
    6c6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6c70:	48 8b 51 28          	mov    0x28(%rcx),%rdx
    6c74:	48 8b 71 20          	mov    0x20(%rcx),%rsi
    6c78:	48 8d 3d 5b 18 00 00 	lea    0x185b(%rip),%rdi        # 84da <_IO_stdin_used+0x4da>
    6c7f:	31 c0                	xor    %eax,%eax
    6c81:	e8 8a f7 ff ff       	call   6410 <ck_strdup_printf>
    6c86:	48 89 df             	mov    %rbx,%rdi
    6c89:	49 89 c4             	mov    %rax,%r12
    6c8c:	e8 6f f9 ff ff       	call   6600 <tr_short_str>
    6c91:	8b 13                	mov    (%rbx),%edx
    6c93:	83 fa 02             	cmp    $0x2,%edx
    6c96:	74 38                	je     6cd0 <subunit_lfun+0xb0>
    6c98:	83 fa 03             	cmp    $0x3,%edx
    6c9b:	74 73                	je     6d10 <subunit_lfun+0xf0>
    6c9d:	83 fa 01             	cmp    $0x1,%edx
    6ca0:	0f 85 97 00 00 00    	jne    6d3d <subunit_lfun+0x11d>
    6ca6:	5b                   	pop    %rbx
    6ca7:	4c 89 e7             	mov    %r12,%rdi
    6caa:	41 5c                	pop    %r12
    6cac:	41 5d                	pop    %r13
    6cae:	41 5e                	pop    %r14
    6cb0:	5d                   	pop    %rbp
    6cb1:	e9 ba b8 ff ff       	jmp    2570 <subunit_test_pass@plt>
    6cb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6cbd:	00 00 00 
    6cc0:	5b                   	pop    %rbx
    6cc1:	48 89 cf             	mov    %rcx,%rdi
    6cc4:	41 5c                	pop    %r12
    6cc6:	41 5d                	pop    %r13
    6cc8:	41 5e                	pop    %r14
    6cca:	5d                   	pop    %rbp
    6ccb:	e9 70 b9 ff ff       	jmp    2640 <subunit_test_start@plt>
    6cd0:	5b                   	pop    %rbx
    6cd1:	4c 89 e7             	mov    %r12,%rdi
    6cd4:	48 89 c6             	mov    %rax,%rsi
    6cd7:	41 5c                	pop    %r12
    6cd9:	41 5d                	pop    %r13
    6cdb:	41 5e                	pop    %r14
    6cdd:	5d                   	pop    %rbp
    6cde:	e9 dd b8 ff ff       	jmp    25c0 <subunit_test_fail@plt>
    6ce3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6ce8:	49 89 f4             	mov    %rsi,%r12
    6ceb:	49 89 fd             	mov    %rdi,%r13
    6cee:	bf 0a 00 00 00       	mov    $0xa,%edi
    6cf3:	e8 68 b9 ff ff       	call   2660 <fputc@plt>
    6cf8:	5b                   	pop    %rbx
    6cf9:	44 89 f2             	mov    %r14d,%edx
    6cfc:	4c 89 ee             	mov    %r13,%rsi
    6cff:	4c 89 e7             	mov    %r12,%rdi
    6d02:	41 5c                	pop    %r12
    6d04:	41 5d                	pop    %r13
    6d06:	41 5e                	pop    %r14
    6d08:	5d                   	pop    %rbp
    6d09:	e9 32 0e 00 00       	jmp    7b40 <srunner_fprint>
    6d0e:	66 90                	xchg   %ax,%ax
    6d10:	5b                   	pop    %rbx
    6d11:	4c 89 e7             	mov    %r12,%rdi
    6d14:	48 89 c6             	mov    %rax,%rsi
    6d17:	41 5c                	pop    %r12
    6d19:	41 5d                	pop    %r13
    6d1b:	41 5e                	pop    %r14
    6d1d:	5d                   	pop    %rbp
    6d1e:	e9 7d b8 ff ff       	jmp    25a0 <subunit_test_error@plt>
    6d23:	ba bc 01 00 00       	mov    $0x1bc,%edx
    6d28:	48 8d 35 04 17 00 00 	lea    0x1704(%rip),%rsi        # 8433 <_IO_stdin_used+0x433>
    6d2f:	48 8d 3d a2 1e 00 00 	lea    0x1ea2(%rip),%rdi        # 8bd8 <_IO_stdin_used+0xbd8>
    6d36:	31 c0                	xor    %eax,%eax
    6d38:	e8 b3 cd ff ff       	call   3af0 <eprintf>
    6d3d:	ba b4 01 00 00       	mov    $0x1b4,%edx
    6d42:	48 8d 35 ea 16 00 00 	lea    0x16ea(%rip),%rsi        # 8433 <_IO_stdin_used+0x433>
    6d49:	48 8d 3d 68 1e 00 00 	lea    0x1e68(%rip),%rdi        # 8bb8 <_IO_stdin_used+0xbb8>
    6d50:	31 c0                	xor    %eax,%eax
    6d52:	e8 99 cd ff ff       	call   3af0 <eprintf>
    6d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6d5e:	00 00 

0000000000006d60 <srunner_open_file.part.0>:
    6d60:	55                   	push   %rbp
    6d61:	48 89 f9             	mov    %rdi,%rcx
    6d64:	ba cd 01 00 00       	mov    $0x1cd,%edx
    6d69:	48 8d 35 c3 16 00 00 	lea    0x16c3(%rip),%rsi        # 8433 <_IO_stdin_used+0x433>
    6d70:	48 8d 3d 89 1e 00 00 	lea    0x1e89(%rip),%rdi        # 8c00 <_IO_stdin_used+0xc00>
    6d77:	31 c0                	xor    %eax,%eax
    6d79:	48 89 e5             	mov    %rsp,%rbp
    6d7c:	e8 6f cd ff ff       	call   3af0 <eprintf>
    6d81:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6d88:	00 00 00 00 
    6d8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006d90 <srunner_set_log>:
    6d90:	f3 0f 1e fa          	endbr64
    6d94:	48 83 7f 18 00       	cmpq   $0x0,0x18(%rdi)
    6d99:	74 05                	je     6da0 <srunner_set_log+0x10>
    6d9b:	c3                   	ret
    6d9c:	0f 1f 40 00          	nopl   0x0(%rax)
    6da0:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    6da4:	c3                   	ret
    6da5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6dac:	00 00 00 00 

0000000000006db0 <srunner_has_log>:
    6db0:	f3 0f 1e fa          	endbr64
    6db4:	48 8b 47 18          	mov    0x18(%rdi),%rax
    6db8:	48 85 c0             	test   %rax,%rax
    6dbb:	74 13                	je     6dd0 <srunner_has_log+0x20>
    6dbd:	48 85 c0             	test   %rax,%rax
    6dc0:	0f 95 c0             	setne  %al
    6dc3:	0f b6 c0             	movzbl %al,%eax
    6dc6:	c3                   	ret
    6dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6dce:	00 00 
    6dd0:	55                   	push   %rbp
    6dd1:	48 8d 3d 08 17 00 00 	lea    0x1708(%rip),%rdi        # 84e0 <_IO_stdin_used+0x4e0>
    6dd8:	48 89 e5             	mov    %rsp,%rbp
    6ddb:	e8 a0 b6 ff ff       	call   2480 <getenv@plt>
    6de0:	5d                   	pop    %rbp
    6de1:	48 85 c0             	test   %rax,%rax
    6de4:	0f 95 c0             	setne  %al
    6de7:	0f b6 c0             	movzbl %al,%eax
    6dea:	c3                   	ret
    6deb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006df0 <srunner_log_fname>:
    6df0:	f3 0f 1e fa          	endbr64
    6df4:	48 8b 47 18          	mov    0x18(%rdi),%rax
    6df8:	48 85 c0             	test   %rax,%rax
    6dfb:	74 03                	je     6e00 <srunner_log_fname+0x10>
    6dfd:	c3                   	ret
    6dfe:	66 90                	xchg   %ax,%ax
    6e00:	48 8d 3d d9 16 00 00 	lea    0x16d9(%rip),%rdi        # 84e0 <_IO_stdin_used+0x4e0>
    6e07:	e9 74 b6 ff ff       	jmp    2480 <getenv@plt>
    6e0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006e10 <srunner_set_xml>:
    6e10:	f3 0f 1e fa          	endbr64
    6e14:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    6e19:	74 05                	je     6e20 <srunner_set_xml+0x10>
    6e1b:	c3                   	ret
    6e1c:	0f 1f 40 00          	nopl   0x0(%rax)
    6e20:	48 89 77 20          	mov    %rsi,0x20(%rdi)
    6e24:	c3                   	ret
    6e25:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6e2c:	00 00 00 00 

0000000000006e30 <srunner_has_xml>:
    6e30:	f3 0f 1e fa          	endbr64
    6e34:	48 8b 47 20          	mov    0x20(%rdi),%rax
    6e38:	48 85 c0             	test   %rax,%rax
    6e3b:	74 13                	je     6e50 <srunner_has_xml+0x20>
    6e3d:	48 85 c0             	test   %rax,%rax
    6e40:	0f 95 c0             	setne  %al
    6e43:	0f b6 c0             	movzbl %al,%eax
    6e46:	c3                   	ret
    6e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6e4e:	00 00 
    6e50:	55                   	push   %rbp
    6e51:	48 8d 3d 99 16 00 00 	lea    0x1699(%rip),%rdi        # 84f1 <_IO_stdin_used+0x4f1>
    6e58:	48 89 e5             	mov    %rsp,%rbp
    6e5b:	e8 20 b6 ff ff       	call   2480 <getenv@plt>
    6e60:	5d                   	pop    %rbp
    6e61:	48 85 c0             	test   %rax,%rax
    6e64:	0f 95 c0             	setne  %al
    6e67:	0f b6 c0             	movzbl %al,%eax
    6e6a:	c3                   	ret
    6e6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006e70 <srunner_xml_fname>:
    6e70:	f3 0f 1e fa          	endbr64
    6e74:	48 8b 47 20          	mov    0x20(%rdi),%rax
    6e78:	48 85 c0             	test   %rax,%rax
    6e7b:	74 03                	je     6e80 <srunner_xml_fname+0x10>
    6e7d:	c3                   	ret
    6e7e:	66 90                	xchg   %ax,%ax
    6e80:	48 8d 3d 6a 16 00 00 	lea    0x166a(%rip),%rdi        # 84f1 <_IO_stdin_used+0x4f1>
    6e87:	e9 f4 b5 ff ff       	jmp    2480 <getenv@plt>
    6e8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006e90 <srunner_set_tap>:
    6e90:	f3 0f 1e fa          	endbr64
    6e94:	48 83 7f 28 00       	cmpq   $0x0,0x28(%rdi)
    6e99:	74 05                	je     6ea0 <srunner_set_tap+0x10>
    6e9b:	c3                   	ret
    6e9c:	0f 1f 40 00          	nopl   0x0(%rax)
    6ea0:	48 89 77 28          	mov    %rsi,0x28(%rdi)
    6ea4:	c3                   	ret
    6ea5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6eac:	00 00 00 00 

0000000000006eb0 <srunner_has_tap>:
    6eb0:	f3 0f 1e fa          	endbr64
    6eb4:	48 8b 47 28          	mov    0x28(%rdi),%rax
    6eb8:	48 85 c0             	test   %rax,%rax
    6ebb:	74 13                	je     6ed0 <srunner_has_tap+0x20>
    6ebd:	48 85 c0             	test   %rax,%rax
    6ec0:	0f 95 c0             	setne  %al
    6ec3:	0f b6 c0             	movzbl %al,%eax
    6ec6:	c3                   	ret
    6ec7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6ece:	00 00 
    6ed0:	55                   	push   %rbp
    6ed1:	48 8d 3d 2e 16 00 00 	lea    0x162e(%rip),%rdi        # 8506 <_IO_stdin_used+0x506>
    6ed8:	48 89 e5             	mov    %rsp,%rbp
    6edb:	e8 a0 b5 ff ff       	call   2480 <getenv@plt>
    6ee0:	5d                   	pop    %rbp
    6ee1:	48 85 c0             	test   %rax,%rax
    6ee4:	0f 95 c0             	setne  %al
    6ee7:	0f b6 c0             	movzbl %al,%eax
    6eea:	c3                   	ret
    6eeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006ef0 <srunner_tap_fname>:
    6ef0:	f3 0f 1e fa          	endbr64
    6ef4:	48 8b 47 28          	mov    0x28(%rdi),%rax
    6ef8:	48 85 c0             	test   %rax,%rax
    6efb:	74 03                	je     6f00 <srunner_tap_fname+0x10>
    6efd:	c3                   	ret
    6efe:	66 90                	xchg   %ax,%ax
    6f00:	48 8d 3d ff 15 00 00 	lea    0x15ff(%rip),%rdi        # 8506 <_IO_stdin_used+0x506>
    6f07:	e9 74 b5 ff ff       	jmp    2480 <getenv@plt>
    6f0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006f10 <srunner_register_lfun>:
    6f10:	f3 0f 1e fa          	endbr64
    6f14:	55                   	push   %rbp
    6f15:	48 89 e5             	mov    %rsp,%rbp
    6f18:	41 57                	push   %r15
    6f1a:	45 89 c7             	mov    %r8d,%r15d
    6f1d:	41 56                	push   %r14
    6f1f:	49 89 f6             	mov    %rsi,%r14
    6f22:	41 55                	push   %r13
    6f24:	49 89 cd             	mov    %rcx,%r13
    6f27:	41 54                	push   %r12
    6f29:	41 89 d4             	mov    %edx,%r12d
    6f2c:	53                   	push   %rbx
    6f2d:	48 89 fb             	mov    %rdi,%rbx
    6f30:	bf 18 00 00 00       	mov    $0x18,%edi
    6f35:	48 83 ec 18          	sub    $0x18,%rsp
    6f39:	e8 f2 cc ff ff       	call   3c30 <emalloc>
    6f3e:	48 89 c6             	mov    %rax,%rsi
    6f41:	41 83 ff 04          	cmp    $0x4,%r15d
    6f45:	74 29                	je     6f70 <srunner_register_lfun+0x60>
    6f47:	4c 89 36             	mov    %r14,(%rsi)
    6f4a:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    6f4e:	4c 89 6e 08          	mov    %r13,0x8(%rsi)
    6f52:	44 89 66 10          	mov    %r12d,0x10(%rsi)
    6f56:	44 89 7e 14          	mov    %r15d,0x14(%rsi)
    6f5a:	48 83 c4 18          	add    $0x18,%rsp
    6f5e:	5b                   	pop    %rbx
    6f5f:	41 5c                	pop    %r12
    6f61:	41 5d                	pop    %r13
    6f63:	41 5e                	pop    %r14
    6f65:	41 5f                	pop    %r15
    6f67:	5d                   	pop    %rbp
    6f68:	e9 13 ce ff ff       	jmp    3d80 <check_list_add_end>
    6f6d:	0f 1f 00             	nopl   (%rax)
    6f70:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6f74:	e8 c7 0a 00 00       	call   7a40 <get_env_printmode>
    6f79:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6f7d:	41 89 c7             	mov    %eax,%r15d
    6f80:	eb c5                	jmp    6f47 <srunner_register_lfun+0x37>
    6f82:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6f89:	00 00 00 00 
    6f8d:	0f 1f 00             	nopl   (%rax)

0000000000006f90 <log_srunner_start>:
    6f90:	f3 0f 1e fa          	endbr64
    6f94:	ba 02 00 00 00       	mov    $0x2,%edx
    6f99:	31 f6                	xor    %esi,%esi
    6f9b:	e9 10 f7 ff ff       	jmp    66b0 <srunner_send_evt>

0000000000006fa0 <log_srunner_end>:
    6fa0:	f3 0f 1e fa          	endbr64
    6fa4:	ba 04 00 00 00       	mov    $0x4,%edx
    6fa9:	31 f6                	xor    %esi,%esi
    6fab:	e9 00 f7 ff ff       	jmp    66b0 <srunner_send_evt>

0000000000006fb0 <log_suite_start>:
    6fb0:	f3 0f 1e fa          	endbr64
    6fb4:	ba 03 00 00 00       	mov    $0x3,%edx
    6fb9:	e9 f2 f6 ff ff       	jmp    66b0 <srunner_send_evt>
    6fbe:	66 90                	xchg   %ax,%ax

0000000000006fc0 <log_suite_end>:
    6fc0:	f3 0f 1e fa          	endbr64
    6fc4:	ba 05 00 00 00       	mov    $0x5,%edx
    6fc9:	e9 e2 f6 ff ff       	jmp    66b0 <srunner_send_evt>
    6fce:	66 90                	xchg   %ax,%ax

0000000000006fd0 <log_test_start>:
    6fd0:	f3 0f 1e fa          	endbr64
    6fd4:	55                   	push   %rbp
    6fd5:	4c 8d 05 fe 14 00 00 	lea    0x14fe(%rip),%r8        # 84da <_IO_stdin_used+0x4da>
    6fdc:	b9 64 00 00 00       	mov    $0x64,%ecx
    6fe1:	48 89 e5             	mov    %rsp,%rbp
    6fe4:	41 54                	push   %r12
    6fe6:	53                   	push   %rbx
    6fe7:	4c 8d 65 80          	lea    -0x80(%rbp),%r12
    6feb:	48 89 fb             	mov    %rdi,%rbx
    6fee:	4c 89 e7             	mov    %r12,%rdi
    6ff1:	48 83 ec 78          	sub    $0x78,%rsp
    6ff5:	4c 8b 0e             	mov    (%rsi),%r9
    6ff8:	be 63 00 00 00       	mov    $0x63,%esi
    6ffd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7004:	00 00 
    7006:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    700a:	31 c0                	xor    %eax,%eax
    700c:	48 8b 02             	mov    (%rdx),%rax
    700f:	ba 02 00 00 00       	mov    $0x2,%edx
    7014:	ff 30                	push   (%rax)
    7016:	31 c0                	xor    %eax,%eax
    7018:	e8 93 b4 ff ff       	call   24b0 <__snprintf_chk@plt>
    701d:	ba 06 00 00 00       	mov    $0x6,%edx
    7022:	4c 89 e6             	mov    %r12,%rsi
    7025:	48 89 df             	mov    %rbx,%rdi
    7028:	e8 83 f6 ff ff       	call   66b0 <srunner_send_evt>
    702d:	58                   	pop    %rax
    702e:	5a                   	pop    %rdx
    702f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7033:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    703a:	00 00 
    703c:	75 09                	jne    7047 <log_test_start+0x77>
    703e:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
    7042:	5b                   	pop    %rbx
    7043:	41 5c                	pop    %r12
    7045:	5d                   	pop    %rbp
    7046:	c3                   	ret
    7047:	e8 64 b5 ff ff       	call   25b0 <__stack_chk_fail@plt>
    704c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007050 <log_test_end>:
    7050:	f3 0f 1e fa          	endbr64
    7054:	ba 07 00 00 00       	mov    $0x7,%edx
    7059:	e9 52 f6 ff ff       	jmp    66b0 <srunner_send_evt>
    705e:	66 90                	xchg   %ax,%ax

0000000000007060 <srunner_open_lfile>:
    7060:	f3 0f 1e fa          	endbr64
    7064:	55                   	push   %rbp
    7065:	48 89 e5             	mov    %rsp,%rbp
    7068:	41 55                	push   %r13
    706a:	41 54                	push   %r12
    706c:	53                   	push   %rbx
    706d:	48 83 ec 08          	sub    $0x8,%rsp
    7071:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
    7075:	48 85 db             	test   %rbx,%rbx
    7078:	74 46                	je     70c0 <srunner_open_lfile+0x60>
    707a:	80 3b 2d             	cmpb   $0x2d,(%rbx)
    707d:	75 21                	jne    70a0 <srunner_open_lfile+0x40>
    707f:	80 7b 01 00          	cmpb   $0x0,0x1(%rbx)
    7083:	75 1b                	jne    70a0 <srunner_open_lfile+0x40>
    7085:	48 8b 05 b4 4f 00 00 	mov    0x4fb4(%rip),%rax        # c040 <stdout@GLIBC_2.2.5>
    708c:	48 83 c4 08          	add    $0x8,%rsp
    7090:	5b                   	pop    %rbx
    7091:	41 5c                	pop    %r12
    7093:	41 5d                	pop    %r13
    7095:	5d                   	pop    %rbp
    7096:	c3                   	ret
    7097:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    709e:	00 00 
    70a0:	48 8d 35 74 14 00 00 	lea    0x1474(%rip),%rsi        # 851b <_IO_stdin_used+0x51b>
    70a7:	48 89 df             	mov    %rbx,%rdi
    70aa:	e8 11 b7 ff ff       	call   27c0 <fopen@plt>
    70af:	48 85 c0             	test   %rax,%rax
    70b2:	75 d8                	jne    708c <srunner_open_lfile+0x2c>
    70b4:	48 89 df             	mov    %rbx,%rdi
    70b7:	e8 a4 fc ff ff       	call   6d60 <srunner_open_file.part.0>
    70bc:	0f 1f 40 00          	nopl   0x0(%rax)
    70c0:	4c 8d 2d 19 14 00 00 	lea    0x1419(%rip),%r13        # 84e0 <_IO_stdin_used+0x4e0>
    70c7:	49 89 fc             	mov    %rdi,%r12
    70ca:	4c 89 ef             	mov    %r13,%rdi
    70cd:	e8 ae b3 ff ff       	call   2480 <getenv@plt>
    70d2:	48 85 c0             	test   %rax,%rax
    70d5:	74 b5                	je     708c <srunner_open_lfile+0x2c>
    70d7:	49 8b 5c 24 18       	mov    0x18(%r12),%rbx
    70dc:	48 85 db             	test   %rbx,%rbx
    70df:	75 99                	jne    707a <srunner_open_lfile+0x1a>
    70e1:	4c 89 ef             	mov    %r13,%rdi
    70e4:	e8 97 b3 ff ff       	call   2480 <getenv@plt>
    70e9:	48 89 c3             	mov    %rax,%rbx
    70ec:	eb 8c                	jmp    707a <srunner_open_lfile+0x1a>
    70ee:	66 90                	xchg   %ax,%ax

00000000000070f0 <srunner_open_xmlfile>:
    70f0:	f3 0f 1e fa          	endbr64
    70f4:	55                   	push   %rbp
    70f5:	48 89 e5             	mov    %rsp,%rbp
    70f8:	41 55                	push   %r13
    70fa:	41 54                	push   %r12
    70fc:	53                   	push   %rbx
    70fd:	48 83 ec 08          	sub    $0x8,%rsp
    7101:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    7105:	48 85 db             	test   %rbx,%rbx
    7108:	74 46                	je     7150 <srunner_open_xmlfile+0x60>
    710a:	80 3b 2d             	cmpb   $0x2d,(%rbx)
    710d:	75 21                	jne    7130 <srunner_open_xmlfile+0x40>
    710f:	80 7b 01 00          	cmpb   $0x0,0x1(%rbx)
    7113:	75 1b                	jne    7130 <srunner_open_xmlfile+0x40>
    7115:	48 8b 05 24 4f 00 00 	mov    0x4f24(%rip),%rax        # c040 <stdout@GLIBC_2.2.5>
    711c:	48 83 c4 08          	add    $0x8,%rsp
    7120:	5b                   	pop    %rbx
    7121:	41 5c                	pop    %r12
    7123:	41 5d                	pop    %r13
    7125:	5d                   	pop    %rbp
    7126:	c3                   	ret
    7127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    712e:	00 00 
    7130:	48 8d 35 e4 13 00 00 	lea    0x13e4(%rip),%rsi        # 851b <_IO_stdin_used+0x51b>
    7137:	48 89 df             	mov    %rbx,%rdi
    713a:	e8 81 b6 ff ff       	call   27c0 <fopen@plt>
    713f:	48 85 c0             	test   %rax,%rax
    7142:	75 d8                	jne    711c <srunner_open_xmlfile+0x2c>
    7144:	48 89 df             	mov    %rbx,%rdi
    7147:	e8 14 fc ff ff       	call   6d60 <srunner_open_file.part.0>
    714c:	0f 1f 40 00          	nopl   0x0(%rax)
    7150:	4c 8d 2d 9a 13 00 00 	lea    0x139a(%rip),%r13        # 84f1 <_IO_stdin_used+0x4f1>
    7157:	49 89 fc             	mov    %rdi,%r12
    715a:	4c 89 ef             	mov    %r13,%rdi
    715d:	e8 1e b3 ff ff       	call   2480 <getenv@plt>
    7162:	48 85 c0             	test   %rax,%rax
    7165:	74 b5                	je     711c <srunner_open_xmlfile+0x2c>
    7167:	49 8b 5c 24 20       	mov    0x20(%r12),%rbx
    716c:	48 85 db             	test   %rbx,%rbx
    716f:	75 99                	jne    710a <srunner_open_xmlfile+0x1a>
    7171:	4c 89 ef             	mov    %r13,%rdi
    7174:	e8 07 b3 ff ff       	call   2480 <getenv@plt>
    7179:	48 89 c3             	mov    %rax,%rbx
    717c:	eb 8c                	jmp    710a <srunner_open_xmlfile+0x1a>
    717e:	66 90                	xchg   %ax,%ax

0000000000007180 <srunner_open_tapfile>:
    7180:	f3 0f 1e fa          	endbr64
    7184:	55                   	push   %rbp
    7185:	48 89 e5             	mov    %rsp,%rbp
    7188:	41 55                	push   %r13
    718a:	41 54                	push   %r12
    718c:	53                   	push   %rbx
    718d:	48 83 ec 08          	sub    $0x8,%rsp
    7191:	48 8b 5f 28          	mov    0x28(%rdi),%rbx
    7195:	48 85 db             	test   %rbx,%rbx
    7198:	74 46                	je     71e0 <srunner_open_tapfile+0x60>
    719a:	80 3b 2d             	cmpb   $0x2d,(%rbx)
    719d:	75 21                	jne    71c0 <srunner_open_tapfile+0x40>
    719f:	80 7b 01 00          	cmpb   $0x0,0x1(%rbx)
    71a3:	75 1b                	jne    71c0 <srunner_open_tapfile+0x40>
    71a5:	48 8b 05 94 4e 00 00 	mov    0x4e94(%rip),%rax        # c040 <stdout@GLIBC_2.2.5>
    71ac:	48 83 c4 08          	add    $0x8,%rsp
    71b0:	5b                   	pop    %rbx
    71b1:	41 5c                	pop    %r12
    71b3:	41 5d                	pop    %r13
    71b5:	5d                   	pop    %rbp
    71b6:	c3                   	ret
    71b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    71be:	00 00 
    71c0:	48 8d 35 54 13 00 00 	lea    0x1354(%rip),%rsi        # 851b <_IO_stdin_used+0x51b>
    71c7:	48 89 df             	mov    %rbx,%rdi
    71ca:	e8 f1 b5 ff ff       	call   27c0 <fopen@plt>
    71cf:	48 85 c0             	test   %rax,%rax
    71d2:	75 d8                	jne    71ac <srunner_open_tapfile+0x2c>
    71d4:	48 89 df             	mov    %rbx,%rdi
    71d7:	e8 84 fb ff ff       	call   6d60 <srunner_open_file.part.0>
    71dc:	0f 1f 40 00          	nopl   0x0(%rax)
    71e0:	4c 8d 2d 1f 13 00 00 	lea    0x131f(%rip),%r13        # 8506 <_IO_stdin_used+0x506>
    71e7:	49 89 fc             	mov    %rdi,%r12
    71ea:	4c 89 ef             	mov    %r13,%rdi
    71ed:	e8 8e b2 ff ff       	call   2480 <getenv@plt>
    71f2:	48 85 c0             	test   %rax,%rax
    71f5:	74 b5                	je     71ac <srunner_open_tapfile+0x2c>
    71f7:	49 8b 5c 24 28       	mov    0x28(%r12),%rbx
    71fc:	48 85 db             	test   %rbx,%rbx
    71ff:	75 99                	jne    719a <srunner_open_tapfile+0x1a>
    7201:	4c 89 ef             	mov    %r13,%rdi
    7204:	e8 77 b2 ff ff       	call   2480 <getenv@plt>
    7209:	48 89 c3             	mov    %rax,%rbx
    720c:	eb 8c                	jmp    719a <srunner_open_tapfile+0x1a>
    720e:	66 90                	xchg   %ax,%ax

0000000000007210 <srunner_init_logging>:
    7210:	f3 0f 1e fa          	endbr64
    7214:	55                   	push   %rbp
    7215:	48 89 e5             	mov    %rsp,%rbp
    7218:	41 57                	push   %r15
    721a:	41 56                	push   %r14
    721c:	41 55                	push   %r13
    721e:	41 54                	push   %r12
    7220:	41 89 f4             	mov    %esi,%r12d
    7223:	53                   	push   %rbx
    7224:	48 89 fb             	mov    %rdi,%rbx
    7227:	48 83 ec 18          	sub    $0x18,%rsp
    722b:	e8 80 ca ff ff       	call   3cb0 <check_list_create>
    7230:	4c 8b 2d 09 4e 00 00 	mov    0x4e09(%rip),%r13        # c040 <stdout@GLIBC_2.2.5>
    7237:	bf 18 00 00 00       	mov    $0x18,%edi
    723c:	48 89 43 30          	mov    %rax,0x30(%rbx)
    7240:	41 83 fc 05          	cmp    $0x5,%r12d
    7244:	0f 84 8e 01 00 00    	je     73d8 <srunner_init_logging+0x1c8>
    724a:	e8 e1 c9 ff ff       	call   3c30 <emalloc>
    724f:	48 89 c6             	mov    %rax,%rsi
    7252:	41 83 fc 04          	cmp    $0x4,%r12d
    7256:	0f 84 34 02 00 00    	je     7490 <srunner_init_logging+0x280>
    725c:	4c 89 28             	mov    %r13,(%rax)
    725f:	48 8d 05 ca f4 ff ff 	lea    -0xb36(%rip),%rax        # 6730 <stdout_lfun>
    7266:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    726a:	48 89 46 08          	mov    %rax,0x8(%rsi)
    726e:	c7 46 10 00 00 00 00 	movl   $0x0,0x10(%rsi)
    7275:	44 89 66 14          	mov    %r12d,0x14(%rsi)
    7279:	e8 02 cb ff ff       	call   3d80 <check_list_add_end>
    727e:	48 89 df             	mov    %rbx,%rdi
    7281:	e8 da fd ff ff       	call   7060 <srunner_open_lfile>
    7286:	49 89 c5             	mov    %rax,%r13
    7289:	48 85 c0             	test   %rax,%rax
    728c:	0f 85 fe 00 00 00    	jne    7390 <srunner_init_logging+0x180>
    7292:	48 89 df             	mov    %rbx,%rdi
    7295:	e8 56 fe ff ff       	call   70f0 <srunner_open_xmlfile>
    729a:	49 89 c5             	mov    %rax,%r13
    729d:	48 85 c0             	test   %rax,%rax
    72a0:	74 46                	je     72e8 <srunner_init_logging+0xd8>
    72a2:	45 31 f6             	xor    %r14d,%r14d
    72a5:	bf 18 00 00 00       	mov    $0x18,%edi
    72aa:	48 39 05 8f 4d 00 00 	cmp    %rax,0x4d8f(%rip)        # c040 <stdout@GLIBC_2.2.5>
    72b1:	41 0f 95 c6          	setne  %r14b
    72b5:	e8 76 c9 ff ff       	call   3c30 <emalloc>
    72ba:	48 89 c6             	mov    %rax,%rsi
    72bd:	44 89 e0             	mov    %r12d,%eax
    72c0:	41 83 fc 04          	cmp    $0x4,%r12d
    72c4:	0f 84 ae 01 00 00    	je     7478 <srunner_init_logging+0x268>
    72ca:	48 8d 15 af f6 ff ff 	lea    -0x951(%rip),%rdx        # 6980 <xml_lfun>
    72d1:	4c 89 2e             	mov    %r13,(%rsi)
    72d4:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    72d8:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    72dc:	44 89 76 10          	mov    %r14d,0x10(%rsi)
    72e0:	89 46 14             	mov    %eax,0x14(%rsi)
    72e3:	e8 98 ca ff ff       	call   3d80 <check_list_add_end>
    72e8:	4c 8b 6b 28          	mov    0x28(%rbx),%r13
    72ec:	4d 85 ed             	test   %r13,%r13
    72ef:	0f 84 4b 01 00 00    	je     7440 <srunner_init_logging+0x230>
    72f5:	41 80 7d 00 2d       	cmpb   $0x2d,0x0(%r13)
    72fa:	74 64                	je     7360 <srunner_init_logging+0x150>
    72fc:	48 8d 35 18 12 00 00 	lea    0x1218(%rip),%rsi        # 851b <_IO_stdin_used+0x51b>
    7303:	4c 89 ef             	mov    %r13,%rdi
    7306:	e8 b5 b4 ff ff       	call   27c0 <fopen@plt>
    730b:	49 89 c6             	mov    %rax,%r14
    730e:	48 85 c0             	test   %rax,%rax
    7311:	0f 84 fe 01 00 00    	je     7515 <srunner_init_logging+0x305>
    7317:	45 31 ff             	xor    %r15d,%r15d
    731a:	48 39 05 1f 4d 00 00 	cmp    %rax,0x4d1f(%rip)        # c040 <stdout@GLIBC_2.2.5>
    7321:	41 0f 95 c7          	setne  %r15b
    7325:	bf 18 00 00 00       	mov    $0x18,%edi
    732a:	e8 01 c9 ff ff       	call   3c30 <emalloc>
    732f:	48 89 c6             	mov    %rax,%rsi
    7332:	41 83 fc 04          	cmp    $0x4,%r12d
    7336:	0f 84 c4 01 00 00    	je     7500 <srunner_init_logging+0x2f0>
    733c:	48 8d 05 8d f4 ff ff 	lea    -0xb73(%rip),%rax        # 67d0 <tap_lfun>
    7343:	4c 89 36             	mov    %r14,(%rsi)
    7346:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    734a:	48 89 46 08          	mov    %rax,0x8(%rsi)
    734e:	44 89 7e 10          	mov    %r15d,0x10(%rsi)
    7352:	44 89 66 14          	mov    %r12d,0x14(%rsi)
    7356:	e8 25 ca ff ff       	call   3d80 <check_list_add_end>
    735b:	eb 19                	jmp    7376 <srunner_init_logging+0x166>
    735d:	0f 1f 00             	nopl   (%rax)
    7360:	45 0f b6 7d 01       	movzbl 0x1(%r13),%r15d
    7365:	45 85 ff             	test   %r15d,%r15d
    7368:	75 92                	jne    72fc <srunner_init_logging+0xec>
    736a:	4c 8b 35 cf 4c 00 00 	mov    0x4ccf(%rip),%r14        # c040 <stdout@GLIBC_2.2.5>
    7371:	4d 85 f6             	test   %r14,%r14
    7374:	75 af                	jne    7325 <srunner_init_logging+0x115>
    7376:	48 83 c4 18          	add    $0x18,%rsp
    737a:	48 89 df             	mov    %rbx,%rdi
    737d:	31 d2                	xor    %edx,%edx
    737f:	31 f6                	xor    %esi,%esi
    7381:	5b                   	pop    %rbx
    7382:	41 5c                	pop    %r12
    7384:	41 5d                	pop    %r13
    7386:	41 5e                	pop    %r14
    7388:	41 5f                	pop    %r15
    738a:	5d                   	pop    %rbp
    738b:	e9 20 f3 ff ff       	jmp    66b0 <srunner_send_evt>
    7390:	45 31 f6             	xor    %r14d,%r14d
    7393:	bf 18 00 00 00       	mov    $0x18,%edi
    7398:	4c 39 2d a1 4c 00 00 	cmp    %r13,0x4ca1(%rip)        # c040 <stdout@GLIBC_2.2.5>
    739f:	41 0f 95 c6          	setne  %r14b
    73a3:	e8 88 c8 ff ff       	call   3c30 <emalloc>
    73a8:	48 89 c6             	mov    %rax,%rsi
    73ab:	44 89 e0             	mov    %r12d,%eax
    73ae:	48 8d 0d 0b f5 ff ff 	lea    -0xaf5(%rip),%rcx        # 68c0 <lfile_lfun>
    73b5:	4c 89 2e             	mov    %r13,(%rsi)
    73b8:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    73bc:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    73c0:	44 89 76 10          	mov    %r14d,0x10(%rsi)
    73c4:	89 46 14             	mov    %eax,0x14(%rsi)
    73c7:	e8 b4 c9 ff ff       	call   3d80 <check_list_add_end>
    73cc:	e9 c1 fe ff ff       	jmp    7292 <srunner_init_logging+0x82>
    73d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    73d8:	e8 53 c8 ff ff       	call   3c30 <emalloc>
    73dd:	4c 89 28             	mov    %r13,(%rax)
    73e0:	48 89 c6             	mov    %rax,%rsi
    73e3:	48 8d 05 36 f8 ff ff 	lea    -0x7ca(%rip),%rax        # 6c20 <subunit_lfun>
    73ea:	48 89 46 08          	mov    %rax,0x8(%rsi)
    73ee:	48 b8 00 00 00 00 05 	movabs $0x500000000,%rax
    73f5:	00 00 00 
    73f8:	48 89 46 10          	mov    %rax,0x10(%rsi)
    73fc:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    7400:	e8 7b c9 ff ff       	call   3d80 <check_list_add_end>
    7405:	48 89 df             	mov    %rbx,%rdi
    7408:	e8 53 fc ff ff       	call   7060 <srunner_open_lfile>
    740d:	49 89 c5             	mov    %rax,%r13
    7410:	48 85 c0             	test   %rax,%rax
    7413:	0f 84 79 fe ff ff    	je     7292 <srunner_init_logging+0x82>
    7419:	45 31 f6             	xor    %r14d,%r14d
    741c:	bf 18 00 00 00       	mov    $0x18,%edi
    7421:	48 39 05 18 4c 00 00 	cmp    %rax,0x4c18(%rip)        # c040 <stdout@GLIBC_2.2.5>
    7428:	41 0f 95 c6          	setne  %r14b
    742c:	e8 ff c7 ff ff       	call   3c30 <emalloc>
    7431:	48 89 c6             	mov    %rax,%rsi
    7434:	b8 05 00 00 00       	mov    $0x5,%eax
    7439:	e9 70 ff ff ff       	jmp    73ae <srunner_init_logging+0x19e>
    743e:	66 90                	xchg   %ax,%ax
    7440:	4c 8d 35 bf 10 00 00 	lea    0x10bf(%rip),%r14        # 8506 <_IO_stdin_used+0x506>
    7447:	4c 89 f7             	mov    %r14,%rdi
    744a:	e8 31 b0 ff ff       	call   2480 <getenv@plt>
    744f:	48 85 c0             	test   %rax,%rax
    7452:	0f 84 1e ff ff ff    	je     7376 <srunner_init_logging+0x166>
    7458:	4c 8b 6b 28          	mov    0x28(%rbx),%r13
    745c:	4d 85 ed             	test   %r13,%r13
    745f:	0f 85 90 fe ff ff    	jne    72f5 <srunner_init_logging+0xe5>
    7465:	4c 89 f7             	mov    %r14,%rdi
    7468:	e8 13 b0 ff ff       	call   2480 <getenv@plt>
    746d:	49 89 c5             	mov    %rax,%r13
    7470:	e9 80 fe ff ff       	jmp    72f5 <srunner_init_logging+0xe5>
    7475:	0f 1f 00             	nopl   (%rax)
    7478:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
    747c:	e8 bf 05 00 00       	call   7a40 <get_env_printmode>
    7481:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7485:	e9 40 fe ff ff       	jmp    72ca <srunner_init_logging+0xba>
    748a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7490:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7494:	e8 a7 05 00 00       	call   7a40 <get_env_printmode>
    7499:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    749d:	48 8d 0d 8c f2 ff ff 	lea    -0xd74(%rip),%rcx        # 6730 <stdout_lfun>
    74a4:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    74a8:	4c 89 2e             	mov    %r13,(%rsi)
    74ab:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    74af:	c7 46 10 00 00 00 00 	movl   $0x0,0x10(%rsi)
    74b6:	89 46 14             	mov    %eax,0x14(%rsi)
    74b9:	e8 c2 c8 ff ff       	call   3d80 <check_list_add_end>
    74be:	48 89 df             	mov    %rbx,%rdi
    74c1:	e8 9a fb ff ff       	call   7060 <srunner_open_lfile>
    74c6:	49 89 c5             	mov    %rax,%r13
    74c9:	48 85 c0             	test   %rax,%rax
    74cc:	0f 84 c0 fd ff ff    	je     7292 <srunner_init_logging+0x82>
    74d2:	45 31 f6             	xor    %r14d,%r14d
    74d5:	bf 18 00 00 00       	mov    $0x18,%edi
    74da:	48 39 05 5f 4b 00 00 	cmp    %rax,0x4b5f(%rip)        # c040 <stdout@GLIBC_2.2.5>
    74e1:	41 0f 95 c6          	setne  %r14b
    74e5:	e8 46 c7 ff ff       	call   3c30 <emalloc>
    74ea:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    74ee:	e8 4d 05 00 00       	call   7a40 <get_env_printmode>
    74f3:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    74f7:	e9 b2 fe ff ff       	jmp    73ae <srunner_init_logging+0x19e>
    74fc:	0f 1f 40 00          	nopl   0x0(%rax)
    7500:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7504:	e8 37 05 00 00       	call   7a40 <get_env_printmode>
    7509:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    750d:	41 89 c4             	mov    %eax,%r12d
    7510:	e9 27 fe ff ff       	jmp    733c <srunner_init_logging+0x12c>
    7515:	4c 89 ef             	mov    %r13,%rdi
    7518:	e8 43 f8 ff ff       	call   6d60 <srunner_open_file.part.0>
    751d:	0f 1f 00             	nopl   (%rax)

0000000000007520 <srunner_end_logging>:
    7520:	f3 0f 1e fa          	endbr64
    7524:	55                   	push   %rbp
    7525:	ba 01 00 00 00       	mov    $0x1,%edx
    752a:	31 f6                	xor    %esi,%esi
    752c:	48 89 e5             	mov    %rsp,%rbp
    752f:	41 55                	push   %r13
    7531:	49 89 fd             	mov    %rdi,%r13
    7534:	41 54                	push   %r12
    7536:	53                   	push   %rbx
    7537:	48 83 ec 08          	sub    $0x8,%rsp
    753b:	e8 70 f1 ff ff       	call   66b0 <srunner_send_evt>
    7540:	4d 8b 65 30          	mov    0x30(%r13),%r12
    7544:	4c 89 e7             	mov    %r12,%rdi
    7547:	e8 d4 c8 ff ff       	call   3e20 <check_list_front>
    754c:	eb 2d                	jmp    757b <srunner_end_logging+0x5b>
    754e:	66 90                	xchg   %ax,%ax
    7550:	e8 2b c9 ff ff       	call   3e80 <check_list_val>
    7555:	48 89 c3             	mov    %rax,%rbx
    7558:	8b 40 10             	mov    0x10(%rax),%eax
    755b:	85 c0                	test   %eax,%eax
    755d:	74 0c                	je     756b <srunner_end_logging+0x4b>
    755f:	48 8b 3b             	mov    (%rbx),%rdi
    7562:	e8 19 b0 ff ff       	call   2580 <fclose@plt>
    7567:	85 c0                	test   %eax,%eax
    7569:	75 37                	jne    75a2 <srunner_end_logging+0x82>
    756b:	48 89 df             	mov    %rbx,%rdi
    756e:	e8 ed ae ff ff       	call   2460 <free@plt>
    7573:	4c 89 e7             	mov    %r12,%rdi
    7576:	e8 35 c9 ff ff       	call   3eb0 <check_list_advance>
    757b:	4c 89 e7             	mov    %r12,%rdi
    757e:	e8 7d c8 ff ff       	call   3e00 <check_list_at_end>
    7583:	4c 89 e7             	mov    %r12,%rdi
    7586:	85 c0                	test   %eax,%eax
    7588:	74 c6                	je     7550 <srunner_end_logging+0x30>
    758a:	e8 b1 c8 ff ff       	call   3e40 <check_list_free>
    758f:	49 c7 45 30 00 00 00 	movq   $0x0,0x30(%r13)
    7596:	00 
    7597:	48 83 c4 08          	add    $0x8,%rsp
    759b:	5b                   	pop    %rbx
    759c:	41 5c                	pop    %r12
    759e:	41 5d                	pop    %r13
    75a0:	5d                   	pop    %rbp
    75a1:	c3                   	ret
    75a2:	ba 24 02 00 00       	mov    $0x224,%edx
    75a7:	48 8d 35 85 0e 00 00 	lea    0xe85(%rip),%rsi        # 8433 <_IO_stdin_used+0x433>
    75ae:	48 8d 3d 7b 16 00 00 	lea    0x167b(%rip),%rdi        # 8c30 <_IO_stdin_used+0xc30>
    75b5:	31 c0                	xor    %eax,%eax
    75b7:	e8 34 c5 ff ff       	call   3af0 <eprintf>
    75bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000075c0 <fprint_xml_esc>:
    75c0:	f3 0f 1e fa          	endbr64
    75c4:	0f be 0e             	movsbl (%rsi),%ecx
    75c7:	84 c9                	test   %cl,%cl
    75c9:	0f 84 61 01 00 00    	je     7730 <fprint_xml_esc+0x170>
    75cf:	55                   	push   %rbp
    75d0:	48 89 e5             	mov    %rsp,%rbp
    75d3:	41 57                	push   %r15
    75d5:	49 89 f7             	mov    %rsi,%r15
    75d8:	41 56                	push   %r14
    75da:	4c 8d 35 54 0f 00 00 	lea    0xf54(%rip),%r14        # 8535 <_IO_stdin_used+0x535>
    75e1:	41 55                	push   %r13
    75e3:	4c 8d 2d 56 17 00 00 	lea    0x1756(%rip),%r13        # 8d40 <_IO_stdin_used+0xd40>
    75ea:	41 54                	push   %r12
    75ec:	49 bc 00 00 00 00 84 	movabs $0x5000008400000000,%r12
    75f3:	00 00 50 
    75f6:	53                   	push   %rbx
    75f7:	48 89 fb             	mov    %rdi,%rbx
    75fa:	48 83 ec 08          	sub    $0x8,%rsp
    75fe:	eb 27                	jmp    7627 <fprint_xml_esc+0x67>
    7600:	80 f9 26             	cmp    $0x26,%cl
    7603:	75 4b                	jne    7650 <fprint_xml_esc+0x90>
    7605:	48 89 d9             	mov    %rbx,%rcx
    7608:	ba 05 00 00 00       	mov    $0x5,%edx
    760d:	be 01 00 00 00       	mov    $0x1,%esi
    7612:	4c 89 f7             	mov    %r14,%rdi
    7615:	e8 06 b2 ff ff       	call   2820 <fwrite@plt>
    761a:	41 0f be 4f 01       	movsbl 0x1(%r15),%ecx
    761f:	49 83 c7 01          	add    $0x1,%r15
    7623:	84 c9                	test   %cl,%cl
    7625:	74 69                	je     7690 <fprint_xml_esc+0xd0>
    7627:	80 f9 3e             	cmp    $0x3e,%cl
    762a:	77 24                	ja     7650 <fprint_xml_esc+0x90>
    762c:	49 0f a3 cc          	bt     %rcx,%r12
    7630:	73 ce                	jae    7600 <fprint_xml_esc+0x40>
    7632:	83 e9 22             	sub    $0x22,%ecx
    7635:	80 f9 1c             	cmp    $0x1c,%cl
    7638:	77 e0                	ja     761a <fprint_xml_esc+0x5a>
    763a:	0f b6 c9             	movzbl %cl,%ecx
    763d:	49 63 44 8d 00       	movslq 0x0(%r13,%rcx,4),%rax
    7642:	4c 01 e8             	add    %r13,%rax
    7645:	3e ff e0             	notrack jmp *%rax
    7648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    764f:	00 
    7650:	8d 41 e0             	lea    -0x20(%rcx),%eax
    7653:	3c 5e                	cmp    $0x5e,%al
    7655:	76 49                	jbe    76a0 <fprint_xml_esc+0xe0>
    7657:	80 f9 0d             	cmp    $0xd,%cl
    765a:	0f 94 c0             	sete   %al
    765d:	80 f9 1f             	cmp    $0x1f,%cl
    7660:	0f 9f c2             	setg   %dl
    7663:	08 d0                	or     %dl,%al
    7665:	75 07                	jne    766e <fprint_xml_esc+0xae>
    7667:	8d 41 f7             	lea    -0x9(%rcx),%eax
    766a:	3c 01                	cmp    $0x1,%al
    766c:	77 ac                	ja     761a <fprint_xml_esc+0x5a>
    766e:	48 8d 15 c6 0e 00 00 	lea    0xec6(%rip),%rdx        # 853b <_IO_stdin_used+0x53b>
    7675:	48 89 df             	mov    %rbx,%rdi
    7678:	31 c0                	xor    %eax,%eax
    767a:	49 83 c7 01          	add    $0x1,%r15
    767e:	be 02 00 00 00       	mov    $0x2,%esi
    7683:	e8 a8 b1 ff ff       	call   2830 <__fprintf_chk@plt>
    7688:	41 0f be 0f          	movsbl (%r15),%ecx
    768c:	84 c9                	test   %cl,%cl
    768e:	75 97                	jne    7627 <fprint_xml_esc+0x67>
    7690:	48 83 c4 08          	add    $0x8,%rsp
    7694:	5b                   	pop    %rbx
    7695:	41 5c                	pop    %r12
    7697:	41 5d                	pop    %r13
    7699:	41 5e                	pop    %r14
    769b:	41 5f                	pop    %r15
    769d:	5d                   	pop    %rbp
    769e:	c3                   	ret
    769f:	90                   	nop
    76a0:	0f be f9             	movsbl %cl,%edi
    76a3:	48 89 de             	mov    %rbx,%rsi
    76a6:	e8 b5 af ff ff       	call   2660 <fputc@plt>
    76ab:	e9 6a ff ff ff       	jmp    761a <fprint_xml_esc+0x5a>
    76b0:	48 89 d9             	mov    %rbx,%rcx
    76b3:	ba 04 00 00 00       	mov    $0x4,%edx
    76b8:	be 01 00 00 00       	mov    $0x1,%esi
    76bd:	48 8d 3d 6c 0e 00 00 	lea    0xe6c(%rip),%rdi        # 8530 <_IO_stdin_used+0x530>
    76c4:	e8 57 b1 ff ff       	call   2820 <fwrite@plt>
    76c9:	e9 4c ff ff ff       	jmp    761a <fprint_xml_esc+0x5a>
    76ce:	66 90                	xchg   %ax,%ax
    76d0:	48 89 d9             	mov    %rbx,%rcx
    76d3:	ba 04 00 00 00       	mov    $0x4,%edx
    76d8:	be 01 00 00 00       	mov    $0x1,%esi
    76dd:	48 8d 3d 47 0e 00 00 	lea    0xe47(%rip),%rdi        # 852b <_IO_stdin_used+0x52b>
    76e4:	e8 37 b1 ff ff       	call   2820 <fwrite@plt>
    76e9:	e9 2c ff ff ff       	jmp    761a <fprint_xml_esc+0x5a>
    76ee:	66 90                	xchg   %ax,%ax
    76f0:	48 89 d9             	mov    %rbx,%rcx
    76f3:	ba 06 00 00 00       	mov    $0x6,%edx
    76f8:	be 01 00 00 00       	mov    $0x1,%esi
    76fd:	48 8d 3d 20 0e 00 00 	lea    0xe20(%rip),%rdi        # 8524 <_IO_stdin_used+0x524>
    7704:	e8 17 b1 ff ff       	call   2820 <fwrite@plt>
    7709:	e9 0c ff ff ff       	jmp    761a <fprint_xml_esc+0x5a>
    770e:	66 90                	xchg   %ax,%ax
    7710:	48 89 d9             	mov    %rbx,%rcx
    7713:	ba 06 00 00 00       	mov    $0x6,%edx
    7718:	be 01 00 00 00       	mov    $0x1,%esi
    771d:	48 8d 3d f9 0d 00 00 	lea    0xdf9(%rip),%rdi        # 851d <_IO_stdin_used+0x51d>
    7724:	e8 f7 b0 ff ff       	call   2820 <fwrite@plt>
    7729:	e9 ec fe ff ff       	jmp    761a <fprint_xml_esc+0x5a>
    772e:	66 90                	xchg   %ax,%ax
    7730:	c3                   	ret
    7731:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    7738:	00 00 00 00 
    773c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007740 <tr_xmlprint>:
    7740:	f3 0f 1e fa          	endbr64
    7744:	55                   	push   %rbp
    7745:	48 89 e5             	mov    %rsp,%rbp
    7748:	41 57                	push   %r15
    774a:	41 56                	push   %r14
    774c:	41 55                	push   %r13
    774e:	41 54                	push   %r12
    7750:	49 89 f4             	mov    %rsi,%r12
    7753:	53                   	push   %rbx
    7754:	48 89 fb             	mov    %rdi,%rbx
    7757:	48 83 ec 28          	sub    $0x28,%rsp
    775b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7762:	00 00 
    7764:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7768:	8b 06                	mov    (%rsi),%eax
    776a:	83 f8 02             	cmp    $0x2,%eax
    776d:	0f 84 75 02 00 00    	je     79e8 <tr_xmlprint+0x2a8>
    7773:	83 f8 03             	cmp    $0x3,%eax
    7776:	0f 85 ec 01 00 00    	jne    7968 <tr_xmlprint+0x228>
    777c:	b8 72 00 00 00       	mov    $0x72,%eax
    7781:	c7 45 be 65 72 72 6f 	movl   $0x6f727265,-0x42(%rbp)
    7788:	66 89 45 c2          	mov    %ax,-0x3e(%rbp)
    778c:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
    7791:	4d 85 ed             	test   %r13,%r13
    7794:	0f 84 f3 01 00 00    	je     798d <tr_xmlprint+0x24d>
    779a:	be 2f 00 00 00       	mov    $0x2f,%esi
    779f:	4c 89 ef             	mov    %r13,%rdi
    77a2:	e8 69 ae ff ff       	call   2610 <strrchr@plt>
    77a7:	49 89 c7             	mov    %rax,%r15
    77aa:	48 85 c0             	test   %rax,%rax
    77ad:	0f 84 4d 02 00 00    	je     7a00 <tr_xmlprint+0x2c0>
    77b3:	4c 89 ef             	mov    %r13,%rdi
    77b6:	e8 95 b0 ff ff       	call   2850 <strdup@plt>
    77bb:	49 89 c6             	mov    %rax,%r14
    77be:	4c 89 f8             	mov    %r15,%rax
    77c1:	4c 29 e8             	sub    %r13,%rax
    77c4:	4d 8d 6f 01          	lea    0x1(%r15),%r13
    77c8:	41 c6 04 06 00       	movb   $0x0,(%r14,%rax,1)
    77cd:	48 8d 4d be          	lea    -0x42(%rbp),%rcx
    77d1:	48 8d 15 6a 0d 00 00 	lea    0xd6a(%rip),%rdx        # 8542 <_IO_stdin_used+0x542>
    77d8:	48 89 df             	mov    %rbx,%rdi
    77db:	31 c0                	xor    %eax,%eax
    77dd:	be 02 00 00 00       	mov    $0x2,%esi
    77e2:	e8 49 b0 ff ff       	call   2830 <__fprintf_chk@plt>
    77e7:	4d 85 f6             	test   %r14,%r14
    77ea:	be 02 00 00 00       	mov    $0x2,%esi
    77ef:	48 89 df             	mov    %rbx,%rdi
    77f2:	48 8d 0d a2 0c 00 00 	lea    0xca2(%rip),%rcx        # 849b <_IO_stdin_used+0x49b>
    77f9:	48 8d 15 5a 0d 00 00 	lea    0xd5a(%rip),%rdx        # 855a <_IO_stdin_used+0x55a>
    7800:	49 0f 45 ce          	cmovne %r14,%rcx
    7804:	31 c0                	xor    %eax,%eax
    7806:	e8 25 b0 ff ff       	call   2830 <__fprintf_chk@plt>
    780b:	45 8b 44 24 10       	mov    0x10(%r12),%r8d
    7810:	4c 89 e9             	mov    %r13,%rcx
    7813:	48 8d 15 59 0d 00 00 	lea    0xd59(%rip),%rdx        # 8573 <_IO_stdin_used+0x573>
    781a:	48 89 df             	mov    %rbx,%rdi
    781d:	31 c0                	xor    %eax,%eax
    781f:	be 02 00 00 00       	mov    $0x2,%esi
    7824:	e8 07 b0 ff ff       	call   2830 <__fprintf_chk@plt>
    7829:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
    782e:	48 89 df             	mov    %rbx,%rdi
    7831:	31 c0                	xor    %eax,%eax
    7833:	48 8d 15 4f 0d 00 00 	lea    0xd4f(%rip),%rdx        # 8589 <_IO_stdin_used+0x589>
    783a:	be 02 00 00 00       	mov    $0x2,%esi
    783f:	e8 ec af ff ff       	call   2830 <__fprintf_chk@plt>
    7844:	41 8b 4c 24 14       	mov    0x14(%r12),%ecx
    7849:	48 89 df             	mov    %rbx,%rdi
    784c:	31 c0                	xor    %eax,%eax
    784e:	48 8d 15 0b 14 00 00 	lea    0x140b(%rip),%rdx        # 8c60 <_IO_stdin_used+0xc60>
    7855:	be 02 00 00 00       	mov    $0x2,%esi
    785a:	e8 d1 af ff ff       	call   2830 <__fprintf_chk@plt>
    785f:	41 8b 44 24 18       	mov    0x18(%r12),%eax
    7864:	85 c0                	test   %eax,%eax
    7866:	0f 88 6c 01 00 00    	js     79d8 <tr_xmlprint+0x298>
    786c:	48 63 c8             	movslq %eax,%rcx
    786f:	99                   	cltd
    7870:	48 69 c9 83 de 1b 43 	imul   $0x431bde83,%rcx,%rcx
    7877:	48 c1 f9 32          	sar    $0x32,%rcx
    787b:	41 89 c8             	mov    %ecx,%r8d
    787e:	29 d1                	sub    %edx,%ecx
    7880:	41 29 d0             	sub    %edx,%r8d
    7883:	41 69 f0 40 42 0f 00 	imul   $0xf4240,%r8d,%esi
    788a:	29 f0                	sub    %esi,%eax
    788c:	41 89 c0             	mov    %eax,%r8d
    788f:	48 8d 15 f2 13 00 00 	lea    0x13f2(%rip),%rdx        # 8c88 <_IO_stdin_used+0xc88>
    7896:	be 02 00 00 00       	mov    $0x2,%esi
    789b:	48 89 df             	mov    %rbx,%rdi
    789e:	31 c0                	xor    %eax,%eax
    78a0:	e8 8b af ff ff       	call   2830 <__fprintf_chk@plt>
    78a5:	48 89 d9             	mov    %rbx,%rcx
    78a8:	ba 13 00 00 00       	mov    $0x13,%edx
    78ad:	be 01 00 00 00       	mov    $0x1,%esi
    78b2:	48 8d 3d e3 0c 00 00 	lea    0xce3(%rip),%rdi        # 859c <_IO_stdin_used+0x59c>
    78b9:	e8 62 af ff ff       	call   2820 <fwrite@plt>
    78be:	49 8b 74 24 20       	mov    0x20(%r12),%rsi
    78c3:	48 89 df             	mov    %rbx,%rdi
    78c6:	e8 f5 fc ff ff       	call   75c0 <fprint_xml_esc>
    78cb:	48 89 d9             	mov    %rbx,%rcx
    78ce:	ba 0f 00 00 00       	mov    $0xf,%edx
    78d3:	be 01 00 00 00       	mov    $0x1,%esi
    78d8:	48 8d 3d d1 0c 00 00 	lea    0xcd1(%rip),%rdi        # 85b0 <_IO_stdin_used+0x5b0>
    78df:	e8 3c af ff ff       	call   2820 <fwrite@plt>
    78e4:	48 89 d9             	mov    %rbx,%rcx
    78e7:	ba 0f 00 00 00       	mov    $0xf,%edx
    78ec:	be 01 00 00 00       	mov    $0x1,%esi
    78f1:	48 8d 3d c8 0c 00 00 	lea    0xcc8(%rip),%rdi        # 85c0 <_IO_stdin_used+0x5c0>
    78f8:	e8 23 af ff ff       	call   2820 <fwrite@plt>
    78fd:	49 8b 74 24 30       	mov    0x30(%r12),%rsi
    7902:	48 89 df             	mov    %rbx,%rdi
    7905:	e8 b6 fc ff ff       	call   75c0 <fprint_xml_esc>
    790a:	48 89 d9             	mov    %rbx,%rcx
    790d:	ba 0b 00 00 00       	mov    $0xb,%edx
    7912:	be 01 00 00 00       	mov    $0x1,%esi
    7917:	48 8d 3d b2 0c 00 00 	lea    0xcb2(%rip),%rdi        # 85d0 <_IO_stdin_used+0x5d0>
    791e:	e8 fd ae ff ff       	call   2820 <fwrite@plt>
    7923:	48 89 d9             	mov    %rbx,%rcx
    7926:	ba 0c 00 00 00       	mov    $0xc,%edx
    792b:	be 01 00 00 00       	mov    $0x1,%esi
    7930:	48 8d 3d a5 0c 00 00 	lea    0xca5(%rip),%rdi        # 85dc <_IO_stdin_used+0x5dc>
    7937:	e8 e4 ae ff ff       	call   2820 <fwrite@plt>
    793c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7940:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7947:	00 00 
    7949:	0f 85 de 00 00 00    	jne    7a2d <tr_xmlprint+0x2ed>
    794f:	48 83 c4 28          	add    $0x28,%rsp
    7953:	4c 89 f7             	mov    %r14,%rdi
    7956:	5b                   	pop    %rbx
    7957:	41 5c                	pop    %r12
    7959:	41 5d                	pop    %r13
    795b:	41 5e                	pop    %r14
    795d:	41 5f                	pop    %r15
    795f:	5d                   	pop    %rbp
    7960:	e9 fb aa ff ff       	jmp    2460 <free@plt>
    7965:	0f 1f 00             	nopl   (%rax)
    7968:	83 f8 01             	cmp    $0x1,%eax
    796b:	0f 85 3f af ff ff    	jne    28b0 <tr_xmlprint.cold>
    7971:	48 b8 73 75 63 63 65 	movabs $0x73736563637573,%rax
    7978:	73 73 00 
    797b:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
    7980:	48 89 45 be          	mov    %rax,-0x42(%rbp)
    7984:	4d 85 ed             	test   %r13,%r13
    7987:	0f 85 0d fe ff ff    	jne    779a <tr_xmlprint+0x5a>
    798d:	48 8d 4d be          	lea    -0x42(%rbp),%rcx
    7991:	48 8d 15 aa 0b 00 00 	lea    0xbaa(%rip),%rdx        # 8542 <_IO_stdin_used+0x542>
    7998:	48 89 df             	mov    %rbx,%rdi
    799b:	31 c0                	xor    %eax,%eax
    799d:	be 02 00 00 00       	mov    $0x2,%esi
    79a2:	4c 8d 2d f2 0a 00 00 	lea    0xaf2(%rip),%r13        # 849b <_IO_stdin_used+0x49b>
    79a9:	45 31 f6             	xor    %r14d,%r14d
    79ac:	e8 7f ae ff ff       	call   2830 <__fprintf_chk@plt>
    79b1:	4c 89 e9             	mov    %r13,%rcx
    79b4:	be 02 00 00 00       	mov    $0x2,%esi
    79b9:	48 89 df             	mov    %rbx,%rdi
    79bc:	48 8d 15 97 0b 00 00 	lea    0xb97(%rip),%rdx        # 855a <_IO_stdin_used+0x55a>
    79c3:	31 c0                	xor    %eax,%eax
    79c5:	e8 66 ae ff ff       	call   2830 <__fprintf_chk@plt>
    79ca:	45 8b 44 24 10       	mov    0x10(%r12),%r8d
    79cf:	e9 3c fe ff ff       	jmp    7810 <tr_xmlprint+0xd0>
    79d4:	0f 1f 40 00          	nopl   0x0(%rax)
    79d8:	45 31 c0             	xor    %r8d,%r8d
    79db:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    79e0:	e9 aa fe ff ff       	jmp    788f <tr_xmlprint+0x14f>
    79e5:	0f 1f 00             	nopl   (%rax)
    79e8:	48 b8 66 61 69 6c 75 	movabs $0x6572756c696166,%rax
    79ef:	72 65 00 
    79f2:	48 89 45 be          	mov    %rax,-0x42(%rbp)
    79f6:	e9 91 fd ff ff       	jmp    778c <tr_xmlprint+0x4c>
    79fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7a00:	be 5c 00 00 00       	mov    $0x5c,%esi
    7a05:	4c 89 ef             	mov    %r13,%rdi
    7a08:	e8 03 ac ff ff       	call   2610 <strrchr@plt>
    7a0d:	49 89 c7             	mov    %rax,%r15
    7a10:	48 85 c0             	test   %rax,%rax
    7a13:	0f 85 9a fd ff ff    	jne    77b3 <tr_xmlprint+0x73>
    7a19:	48 8d 3d 51 0b 00 00 	lea    0xb51(%rip),%rdi        # 8571 <_IO_stdin_used+0x571>
    7a20:	e8 2b ae ff ff       	call   2850 <strdup@plt>
    7a25:	49 89 c6             	mov    %rax,%r14
    7a28:	e9 a0 fd ff ff       	jmp    77cd <tr_xmlprint+0x8d>
    7a2d:	e8 7e ab ff ff       	call   25b0 <__stack_chk_fail@plt>
    7a32:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    7a39:	00 00 00 00 
    7a3d:	0f 1f 00             	nopl   (%rax)

0000000000007a40 <get_env_printmode>:
    7a40:	f3 0f 1e fa          	endbr64
    7a44:	55                   	push   %rbp
    7a45:	48 8d 3d 9d 0b 00 00 	lea    0xb9d(%rip),%rdi        # 85e9 <_IO_stdin_used+0x5e9>
    7a4c:	48 89 e5             	mov    %rsp,%rbp
    7a4f:	53                   	push   %rbx
    7a50:	48 83 ec 08          	sub    $0x8,%rsp
    7a54:	e8 27 aa ff ff       	call   2480 <getenv@plt>
    7a59:	48 85 c0             	test   %rax,%rax
    7a5c:	74 5a                	je     7ab8 <get_env_printmode+0x78>
    7a5e:	48 8d 35 91 0b 00 00 	lea    0xb91(%rip),%rsi        # 85f6 <_IO_stdin_used+0x5f6>
    7a65:	48 89 c7             	mov    %rax,%rdi
    7a68:	48 89 c3             	mov    %rax,%rbx
    7a6b:	e8 10 ac ff ff       	call   2680 <strcmp@plt>
    7a70:	89 c2                	mov    %eax,%edx
    7a72:	31 c0                	xor    %eax,%eax
    7a74:	85 d2                	test   %edx,%edx
    7a76:	74 34                	je     7aac <get_env_printmode+0x6c>
    7a78:	48 8d 35 7e 0b 00 00 	lea    0xb7e(%rip),%rsi        # 85fd <_IO_stdin_used+0x5fd>
    7a7f:	48 89 df             	mov    %rbx,%rdi
    7a82:	e8 f9 ab ff ff       	call   2680 <strcmp@plt>
    7a87:	89 c2                	mov    %eax,%edx
    7a89:	b8 01 00 00 00       	mov    $0x1,%eax
    7a8e:	85 d2                	test   %edx,%edx
    7a90:	74 1a                	je     7aac <get_env_printmode+0x6c>
    7a92:	48 8d 35 6c 0b 00 00 	lea    0xb6c(%rip),%rsi        # 8605 <_IO_stdin_used+0x605>
    7a99:	48 89 df             	mov    %rbx,%rdi
    7a9c:	e8 df ab ff ff       	call   2680 <strcmp@plt>
    7aa1:	83 f8 01             	cmp    $0x1,%eax
    7aa4:	b8 02 00 00 00       	mov    $0x2,%eax
    7aa9:	83 d0 00             	adc    $0x0,%eax
    7aac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ab0:	c9                   	leave
    7ab1:	c3                   	ret
    7ab2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7ab8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7abc:	b8 02 00 00 00       	mov    $0x2,%eax
    7ac1:	c9                   	leave
    7ac2:	c3                   	ret
    7ac3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    7aca:	00 00 00 00 
    7ace:	66 90                	xchg   %ax,%ax

0000000000007ad0 <tr_fprint>:
    7ad0:	f3 0f 1e fa          	endbr64
    7ad4:	55                   	push   %rbp
    7ad5:	48 89 e5             	mov    %rsp,%rbp
    7ad8:	41 54                	push   %r12
    7ada:	49 89 fc             	mov    %rdi,%r12
    7add:	53                   	push   %rbx
    7ade:	48 89 f3             	mov    %rsi,%rbx
    7ae1:	83 fa 04             	cmp    $0x4,%edx
    7ae4:	74 4a                	je     7b30 <tr_fprint+0x60>
    7ae6:	8b 03                	mov    (%rbx),%eax
    7ae8:	83 fa 02             	cmp    $0x2,%edx
    7aeb:	77 13                	ja     7b00 <tr_fprint+0x30>
    7aed:	75 05                	jne    7af4 <tr_fprint+0x24>
    7aef:	83 f8 01             	cmp    $0x1,%eax
    7af2:	75 0c                	jne    7b00 <tr_fprint+0x30>
    7af4:	5b                   	pop    %rbx
    7af5:	41 5c                	pop    %r12
    7af7:	5d                   	pop    %rbp
    7af8:	c3                   	ret
    7af9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7b00:	48 89 df             	mov    %rbx,%rdi
    7b03:	e8 48 ea ff ff       	call   6550 <tr_str>
    7b08:	4c 89 e7             	mov    %r12,%rdi
    7b0b:	be 02 00 00 00       	mov    $0x2,%esi
    7b10:	48 8d 15 52 09 00 00 	lea    0x952(%rip),%rdx        # 8469 <_IO_stdin_used+0x469>
    7b17:	48 89 c3             	mov    %rax,%rbx
    7b1a:	48 89 c1             	mov    %rax,%rcx
    7b1d:	31 c0                	xor    %eax,%eax
    7b1f:	e8 0c ad ff ff       	call   2830 <__fprintf_chk@plt>
    7b24:	48 89 df             	mov    %rbx,%rdi
    7b27:	5b                   	pop    %rbx
    7b28:	41 5c                	pop    %r12
    7b2a:	5d                   	pop    %rbp
    7b2b:	e9 30 a9 ff ff       	jmp    2460 <free@plt>
    7b30:	e8 0b ff ff ff       	call   7a40 <get_env_printmode>
    7b35:	89 c2                	mov    %eax,%edx
    7b37:	eb ad                	jmp    7ae6 <tr_fprint+0x16>
    7b39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007b40 <srunner_fprint>:
    7b40:	f3 0f 1e fa          	endbr64
    7b44:	55                   	push   %rbp
    7b45:	48 89 e5             	mov    %rsp,%rbp
    7b48:	41 56                	push   %r14
    7b4a:	41 55                	push   %r13
    7b4c:	49 89 fd             	mov    %rdi,%r13
    7b4f:	41 54                	push   %r12
    7b51:	41 89 d4             	mov    %edx,%r12d
    7b54:	53                   	push   %rbx
    7b55:	48 89 f3             	mov    %rsi,%rbx
    7b58:	83 fa 04             	cmp    $0x4,%edx
    7b5b:	0f 84 8f 00 00 00    	je     7bf0 <srunner_fprint+0xb0>
    7b61:	41 83 fc 05          	cmp    $0x5,%r12d
    7b65:	74 43                	je     7baa <srunner_fprint+0x6a>
    7b67:	45 85 e4             	test   %r12d,%r12d
    7b6a:	75 4c                	jne    7bb8 <srunner_fprint+0x78>
    7b6c:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    7b70:	48 89 df             	mov    %rbx,%rdi
    7b73:	e8 a8 c2 ff ff       	call   3e20 <check_list_front>
    7b78:	eb 24                	jmp    7b9e <srunner_fprint+0x5e>
    7b7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7b80:	48 89 df             	mov    %rbx,%rdi
    7b83:	e8 f8 c2 ff ff       	call   3e80 <check_list_val>
    7b88:	4c 89 ef             	mov    %r13,%rdi
    7b8b:	44 89 e2             	mov    %r12d,%edx
    7b8e:	48 89 c6             	mov    %rax,%rsi
    7b91:	e8 3a ff ff ff       	call   7ad0 <tr_fprint>
    7b96:	48 89 df             	mov    %rbx,%rdi
    7b99:	e8 12 c3 ff ff       	call   3eb0 <check_list_advance>
    7b9e:	48 89 df             	mov    %rbx,%rdi
    7ba1:	e8 5a c2 ff ff       	call   3e00 <check_list_at_end>
    7ba6:	85 c0                	test   %eax,%eax
    7ba8:	74 d6                	je     7b80 <srunner_fprint+0x40>
    7baa:	5b                   	pop    %rbx
    7bab:	41 5c                	pop    %r12
    7bad:	41 5d                	pop    %r13
    7baf:	41 5e                	pop    %r14
    7bb1:	5d                   	pop    %rbp
    7bb2:	c3                   	ret
    7bb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7bb8:	48 89 df             	mov    %rbx,%rdi
    7bbb:	e8 80 ea ff ff       	call   6640 <sr_stat_str>
    7bc0:	4c 89 ef             	mov    %r13,%rdi
    7bc3:	be 02 00 00 00       	mov    $0x2,%esi
    7bc8:	48 8d 15 9a 08 00 00 	lea    0x89a(%rip),%rdx        # 8469 <_IO_stdin_used+0x469>
    7bcf:	49 89 c6             	mov    %rax,%r14
    7bd2:	48 89 c1             	mov    %rax,%rcx
    7bd5:	31 c0                	xor    %eax,%eax
    7bd7:	e8 54 ac ff ff       	call   2830 <__fprintf_chk@plt>
    7bdc:	4c 89 f7             	mov    %r14,%rdi
    7bdf:	e8 7c a8 ff ff       	call   2460 <free@plt>
    7be4:	eb 86                	jmp    7b6c <srunner_fprint+0x2c>
    7be6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7bed:	00 00 00 
    7bf0:	e8 4b fe ff ff       	call   7a40 <get_env_printmode>
    7bf5:	41 89 c4             	mov    %eax,%r12d
    7bf8:	e9 64 ff ff ff       	jmp    7b61 <srunner_fprint+0x21>
    7bfd:	0f 1f 00             	nopl   (%rax)

0000000000007c00 <srunner_print>:
    7c00:	f3 0f 1e fa          	endbr64
    7c04:	89 f2                	mov    %esi,%edx
    7c06:	48 89 fe             	mov    %rdi,%rsi
    7c09:	48 8b 3d 30 44 00 00 	mov    0x4430(%rip),%rdi        # c040 <stdout@GLIBC_2.2.5>
    7c10:	e9 2b ff ff ff       	jmp    7b40 <srunner_fprint>

Disassembly of section .fini:

0000000000007c18 <_fini>:
    7c18:	f3 0f 1e fa          	endbr64
    7c1c:	48 83 ec 08          	sub    $0x8,%rsp
    7c20:	48 83 c4 08          	add    $0x8,%rsp
    7c24:	c3                   	ret
